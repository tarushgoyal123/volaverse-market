{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tarus\\\\Documents\\\\Marketplace-ReactJS-Project\\\\client\\\\src\\\\Pages\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { getUserConversations, sendMessage } from '../services/messagesData';\nimport { Container, Row, Form, InputGroup, Button, Alert } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport '../components/Messages/Aside.css';\nimport '../components/Messages/Article.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Messages({\n  match\n}) {\n  _s();\n\n  let chatId = match.params.id;\n  const [conversations, setConversations] = useState([]);\n  const [isSelected, setIsSelected] = useState(false);\n  const [selected, setSelected] = useState({\n    chats: {\n      _id: 0,\n      seller: {\n        _id: \"\",\n        avatar: \"\",\n        name: \"\"\n      },\n      buyer: {\n        _id: \"\",\n        avatar: \"\",\n        name: \"\"\n      },\n      conversation: []\n    },\n    isBuyer: null,\n    myId: 0\n  });\n  const [message, setMessage] = useState(\"\");\n  const [alert, setAlert] = useState(null);\n  const [alertShow, setAlertShow] = useState(false);\n  useEffect(() => {\n    getUserConversations().then(res => {\n      setConversations(res);\n    }).catch(err => console.log(err));\n\n    if (isSelected) {\n      setSelected(conversations.find(x => x.chats._id === chatId));\n    }\n  }, [isSelected, chatId, setSelected]);\n\n  function handleMsgSubmit(e) {\n    e.preventDefault();\n    sendMessage(chatId, message).then(res => {\n      setAlert(\"Message sent!\");\n      setAlertShow(true);\n      setMessage(\"\");\n      setSelected(selected, selected.chats.conversation.push({\n        message,\n        senderId: res.sender\n      }));\n      setTimeout(() => {\n        setAlert(null);\n        setAlertShow(false);\n      }, 1000);\n    }).catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"col-lg-4 col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), conversations.length >= 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: conversations.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-connections\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => setIsSelected(true),\n              to: `/messages/${x.chats._id}`,\n              children: x.isBuyer ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: x.chats.seller.avatar,\n                  alt: \"user-avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 47\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: x.chats.seller.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 101\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: x.chats.buyer.avatar,\n                  alt: \"user-avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 47\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: x.chats.buyer.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 100\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this)\n          }, x.chats._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 33\n          }, this))\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"No messages yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"col-lg-8 col-md-8\",\n        children: isSelected && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-selected-header col-lg-12\",\n            children: selected.isBuyer ? /*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${selected.chats.seller._id}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: selected.chats.seller.avatar,\n                alt: \"user-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: selected.chats.seller.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${selected.chats.buyer._id}`,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: selected.chats.buyer.avatar,\n                alt: \"user-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: selected.chats.buyer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), alertShow && /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"success\",\n            onClose: () => setAlertShow(false),\n            dismissible: true,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: alert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-selected-body col-lg-12\",\n            children: selected.chats.conversation.map(x => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: selected.myId === x.senderId ? 'me' : \"not-me\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"message\",\n                children: x.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 41\n              }, this)\n            }, x._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-selected-footer col-lg-12\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleMsgSubmit,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    required: true,\n                    value: message,\n                    onChange: e => setMessage(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup.Append, {\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      variant: \"secondary\",\n                      children: \"Sent\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Messages, \"A58HJNo7zGaL6/g+zpgRKmC3d/0=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/src/Pages/Messages.js"],"names":["useState","useEffect","getUserConversations","sendMessage","Container","Row","Form","InputGroup","Button","Alert","Link","Messages","match","chatId","params","id","conversations","setConversations","isSelected","setIsSelected","selected","setSelected","chats","_id","seller","avatar","name","buyer","conversation","isBuyer","myId","message","setMessage","alert","setAlert","alertShow","setAlertShow","then","res","catch","err","console","log","find","x","handleMsgSubmit","e","preventDefault","push","senderId","sender","setTimeout","length","map","target","value"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { getUserConversations, sendMessage } from '../services/messagesData';\r\nimport { Container, Row, Form, InputGroup, Button, Alert } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../components/Messages/Aside.css'\r\nimport '../components/Messages/Article.css'\r\nfunction Messages({ match }) {\r\n    let chatId = match.params.id;\r\n    const [conversations, setConversations] = useState([])\r\n    const [isSelected, setIsSelected] = useState(false);\r\n    const [selected, setSelected] = useState({\r\n        chats: {\r\n            _id: 0,\r\n            seller: {\r\n                _id: \"\",\r\n                avatar: \"\",\r\n                name: \"\"\r\n            },\r\n            buyer: {\r\n                _id: \"\",\r\n                avatar: \"\",\r\n                name: \"\"\r\n            },\r\n            conversation: []\r\n        },\r\n        isBuyer: null,\r\n        myId: 0\r\n    });\r\n    const [message, setMessage] = useState(\"\");\r\n    const [alert, setAlert] = useState(null);\r\n    const [alertShow, setAlertShow] = useState(false);\r\n\r\n    useEffect(() => {\r\n        getUserConversations()\r\n            .then(res => {\r\n                setConversations(res);\r\n            })\r\n            .catch(err => console.log(err))\r\n        if (isSelected) {\r\n            setSelected(conversations.find(x => x.chats._id === chatId))\r\n        }\r\n    }, [isSelected, chatId, setSelected])\r\n\r\n    function handleMsgSubmit(e) {\r\n        e.preventDefault();\r\n        sendMessage(chatId, message)\r\n            .then((res) => {\r\n                setAlert(\"Message sent!\");\r\n                setAlertShow(true);\r\n                setMessage(\"\");\r\n                setSelected(selected, selected.chats.conversation.push({ message, senderId: res.sender }))\r\n                setTimeout(() => {\r\n                    setAlert(null);\r\n                    setAlertShow(false);\r\n                }, 1000);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <aside className=\"col-lg-4 col-md-4\">\r\n                    <h3>Conversations</h3>\r\n                    {conversations.length >= 1 ?\r\n                        <>\r\n                            {conversations.map(x =>\r\n                                <div className=\"chat-connections\" key={x.chats._id}>\r\n                                    <Link onClick={() => setIsSelected(true)} to={`/messages/${x.chats._id}`}>\r\n                                        {x.isBuyer ?\r\n                                            <><img src={x.chats.seller.avatar} alt=\"user-avatar\" /> <span>{x.chats.seller.name}</span></>\r\n                                            :\r\n                                            <><img src={x.chats.buyer.avatar} alt=\"user-avatar\" /> <span>{x.chats.buyer.name}</span></>\r\n                                        }\r\n                                    </Link>\r\n                                </div>)\r\n                            }\r\n                        </>\r\n                        :\r\n                        <h5>No messages yet</h5>\r\n                    }\r\n                </aside>\r\n                <article className=\"col-lg-8 col-md-8\">\r\n                    {isSelected &&\r\n                        <>\r\n                            <div className=\"chat-selected-header col-lg-12\">\r\n                                {selected.isBuyer ?\r\n                                    <Link to={`/profile/${selected.chats.seller._id}`}>\r\n                                        <img src={selected.chats.seller.avatar} alt=\"user-avatar\" />\r\n                                        <span>{selected.chats.seller.name}</span>\r\n                                    </Link>\r\n                                    :\r\n                                    <Link to={`/profile/${selected.chats.buyer._id}`}>\r\n                                        <img src={selected.chats.buyer.avatar} alt=\"user-avatar\" />\r\n                                        <span>{selected.chats.buyer.name}</span>\r\n                                    </Link>\r\n                                }\r\n                            </div>\r\n                            {alertShow &&\r\n                                <Alert variant=\"success\" onClose={() => setAlertShow(false)} dismissible>\r\n                                    <p>\r\n                                        {alert}\r\n                                    </p>\r\n                                </Alert>\r\n                            }\r\n                            <div className=\"chat-selected-body col-lg-12\">\r\n                                {selected.chats.conversation.map(x =>\r\n                                    <div className={selected.myId === x.senderId ? 'me' : \"not-me\"} key={x._id}>\r\n                                        <span className=\"message\">{x.message}</span>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"chat-selected-footer col-lg-12\">\r\n                                <Form onSubmit={handleMsgSubmit}>\r\n                                    <Form.Group>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                as=\"textarea\"\r\n                                                required\r\n                                                value={message}\r\n                                                onChange={(e) => setMessage(e.target.value)}>\r\n                                            </Form.Control>\r\n                                            <InputGroup.Append>\r\n                                                <Button type=\"submit\" variant=\"secondary\">Sent</Button>\r\n                                            </InputGroup.Append>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </article>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Messages;"]},"metadata":{},"sourceType":"module"}