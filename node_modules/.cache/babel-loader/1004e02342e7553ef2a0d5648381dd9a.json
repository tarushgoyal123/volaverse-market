{"ast":null,"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // Polyfills\n\nif (Number.EPSILON === undefined) {\n  Number.EPSILON = Math.pow(2, -52);\n}\n\nif (Number.isInteger === undefined) {\n  // Missing in IE\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n  Number.isInteger = function (value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n  };\n} //\n\n\nif (Math.sign === undefined) {\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n  Math.sign = function (x) {\n    return x < 0 ? -1 : x > 0 ? 1 : +x;\n  };\n}\n\nif ('name' in Function.prototype === false) {\n  // Missing in IE\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n  Object.defineProperty(Function.prototype, 'name', {\n    get: function () {\n      return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1];\n    }\n  });\n}\n\nif (Object.assign === undefined) {\n  // Missing in IE\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n  (function () {\n    Object.assign = function (target) {\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n\n      return output;\n    };\n  })();\n}\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\n\nfunction EventDispatcher() {}\n\nObject.assign(EventDispatcher.prototype, {\n  addEventListener: function (type, listener) {\n    if (this._listeners === undefined) this._listeners = {};\n    var listeners = this._listeners;\n\n    if (listeners[type] === undefined) {\n      listeners[type] = [];\n    }\n\n    if (listeners[type].indexOf(listener) === -1) {\n      listeners[type].push(listener);\n    }\n  },\n  hasEventListener: function (type, listener) {\n    if (this._listeners === undefined) return false;\n    var listeners = this._listeners;\n    return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n  },\n  removeEventListener: function (type, listener) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[type];\n\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  },\n  dispatchEvent: function (event) {\n    if (this._listeners === undefined) return;\n    var listeners = this._listeners;\n    var listenerArray = listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n      var array = listenerArray.slice(0);\n\n      for (var i = 0, l = array.length; i < l; i++) {\n        array[i].call(this, event);\n      }\n    }\n  }\n});\nvar REVISION = '94';\nvar MOUSE = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2\n};\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n  DEG2RAD: Math.PI / 180,\n  RAD2DEG: 180 / Math.PI,\n  generateUUID: function () {\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n    var lut = [];\n\n    for (var i = 0; i < 256; i++) {\n      lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n    }\n\n    return function generateUUID() {\n      var d0 = Math.random() * 0xffffffff | 0;\n      var d1 = Math.random() * 0xffffffff | 0;\n      var d2 = Math.random() * 0xffffffff | 0;\n      var d3 = Math.random() * 0xffffffff | 0;\n      var uuid = lut[d0 & 0xff] + lut[d0 >> 8 & 0xff] + lut[d0 >> 16 & 0xff] + lut[d0 >> 24 & 0xff] + '-' + lut[d1 & 0xff] + lut[d1 >> 8 & 0xff] + '-' + lut[d1 >> 16 & 0x0f | 0x40] + lut[d1 >> 24 & 0xff] + '-' + lut[d2 & 0x3f | 0x80] + lut[d2 >> 8 & 0xff] + '-' + lut[d2 >> 16 & 0xff] + lut[d2 >> 24 & 0xff] + lut[d3 & 0xff] + lut[d3 >> 8 & 0xff] + lut[d3 >> 16 & 0xff] + lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n      return uuid.toUpperCase();\n    };\n  }(),\n  clamp: function (value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  },\n  // compute euclidian modulo of m % n\n  // https://en.wikipedia.org/wiki/Modulo_operation\n  euclideanModulo: function (n, m) {\n    return (n % m + m) % m;\n  },\n  // Linear mapping from range <a1, a2> to range <b1, b2>\n  mapLinear: function (x, a1, a2, b1, b2) {\n    return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n  },\n  // https://en.wikipedia.org/wiki/Linear_interpolation\n  lerp: function (x, y, t) {\n    return (1 - t) * x + t * y;\n  },\n  // http://en.wikipedia.org/wiki/Smoothstep\n  smoothstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * (3 - 2 * x);\n  },\n  smootherstep: function (x, min, max) {\n    if (x <= min) return 0;\n    if (x >= max) return 1;\n    x = (x - min) / (max - min);\n    return x * x * x * (x * (x * 6 - 15) + 10);\n  },\n  // Random integer from <low, high> interval\n  randInt: function (low, high) {\n    return low + Math.floor(Math.random() * (high - low + 1));\n  },\n  // Random float from <low, high> interval\n  randFloat: function (low, high) {\n    return low + Math.random() * (high - low);\n  },\n  // Random float from <-range/2, range/2> interval\n  randFloatSpread: function (range) {\n    return range * (0.5 - Math.random());\n  },\n  degToRad: function (degrees) {\n    return degrees * _Math.DEG2RAD;\n  },\n  radToDeg: function (radians) {\n    return radians * _Math.RAD2DEG;\n  },\n  isPowerOfTwo: function (value) {\n    return (value & value - 1) === 0 && value !== 0;\n  },\n  ceilPowerOfTwo: function (value) {\n    return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n  },\n  floorPowerOfTwo: function (value) {\n    return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n  }\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2(x, y) {\n  this.x = x || 0;\n  this.y = y || 0;\n}\n\nObject.defineProperties(Vector2.prototype, {\n  \"width\": {\n    get: function () {\n      return this.x;\n    },\n    set: function (value) {\n      this.x = value;\n    }\n  },\n  \"height\": {\n    get: function () {\n      return this.y;\n    },\n    set: function (value) {\n      this.y = value;\n    }\n  }\n});\nObject.assign(Vector2.prototype, {\n  isVector2: true,\n  set: function (x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n\n    return this;\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    return this;\n  },\n  multiply: function (v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  applyMatrix3: function (m) {\n    var x = this.x,\n        y = this.y;\n    var e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6];\n    this.y = e[1] * x + e[4] * y + e[7];\n    return this;\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    return this;\n  },\n  clamp: function (min, max) {\n    // assumes min < max, componentwise\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    return this;\n  },\n  clampScalar: function () {\n    var min = new Vector2();\n    var max = new Vector2();\n    return function clampScalar(minVal, maxVal) {\n      min.set(minVal, minVal);\n      max.set(maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  },\n  manhattanLength: function () {\n    return Math.abs(this.x) + Math.abs(this.y);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length() || 1);\n  },\n  angle: function () {\n    // computes the angle in radians with respect to the positive x-axis\n    var angle = Math.atan2(this.y, this.x);\n    if (angle < 0) angle += 2 * Math.PI;\n    return angle;\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  },\n  manhattanDistanceTo: function (v) {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n  },\n  setLength: function (length) {\n    return this.normalize().multiplyScalar(length);\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    return array;\n  },\n  fromBufferAttribute: function (attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    return this;\n  },\n  rotateAround: function (center, angle) {\n    var c = Math.cos(angle),\n        s = Math.sin(angle);\n    var x = this.x - center.x;\n    var y = this.y - center.y;\n    this.x = x * c - y * s + center.x;\n    this.y = x * s + y * c + center.y;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n  this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n  }\n}\n\nObject.assign(Matrix4.prototype, {\n  isMatrix4: true,\n  set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n    var te = this.elements;\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new Matrix4().fromArray(this.elements);\n  },\n  copy: function (m) {\n    var te = this.elements;\n    var me = m.elements;\n    te[0] = me[0];\n    te[1] = me[1];\n    te[2] = me[2];\n    te[3] = me[3];\n    te[4] = me[4];\n    te[5] = me[5];\n    te[6] = me[6];\n    te[7] = me[7];\n    te[8] = me[8];\n    te[9] = me[9];\n    te[10] = me[10];\n    te[11] = me[11];\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    te[15] = me[15];\n    return this;\n  },\n  copyPosition: function (m) {\n    var te = this.elements,\n        me = m.elements;\n    te[12] = me[12];\n    te[13] = me[13];\n    te[14] = me[14];\n    return this;\n  },\n  extractBasis: function (xAxis, yAxis, zAxis) {\n    xAxis.setFromMatrixColumn(this, 0);\n    yAxis.setFromMatrixColumn(this, 1);\n    zAxis.setFromMatrixColumn(this, 2);\n    return this;\n  },\n  makeBasis: function (xAxis, yAxis, zAxis) {\n    this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  extractRotation: function () {\n    var v1 = new Vector3();\n    return function extractRotation(m) {\n      // this method does not support reflection matrices\n      var te = this.elements;\n      var me = m.elements;\n      var scaleX = 1 / v1.setFromMatrixColumn(m, 0).length();\n      var scaleY = 1 / v1.setFromMatrixColumn(m, 1).length();\n      var scaleZ = 1 / v1.setFromMatrixColumn(m, 2).length();\n      te[0] = me[0] * scaleX;\n      te[1] = me[1] * scaleX;\n      te[2] = me[2] * scaleX;\n      te[3] = 0;\n      te[4] = me[4] * scaleY;\n      te[5] = me[5] * scaleY;\n      te[6] = me[6] * scaleY;\n      te[7] = 0;\n      te[8] = me[8] * scaleZ;\n      te[9] = me[9] * scaleZ;\n      te[10] = me[10] * scaleZ;\n      te[11] = 0;\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    };\n  }(),\n  makeRotationFromEuler: function (euler) {\n    if (!(euler && euler.isEuler)) {\n      console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n    }\n\n    var te = this.elements;\n    var x = euler.x,\n        y = euler.y,\n        z = euler.z;\n    var a = Math.cos(x),\n        b = Math.sin(x);\n    var c = Math.cos(y),\n        d = Math.sin(y);\n    var e = Math.cos(z),\n        f = Math.sin(z);\n\n    if (euler.order === 'XYZ') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else if (euler.order === 'YXZ') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce + df * b;\n      te[4] = de * b - cf;\n      te[8] = a * d;\n      te[1] = a * f;\n      te[5] = a * e;\n      te[9] = -b;\n      te[2] = cf * b - de;\n      te[6] = df + ce * b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZXY') {\n      var ce = c * e,\n          cf = c * f,\n          de = d * e,\n          df = d * f;\n      te[0] = ce - df * b;\n      te[4] = -a * f;\n      te[8] = de + cf * b;\n      te[1] = cf + de * b;\n      te[5] = a * e;\n      te[9] = df - ce * b;\n      te[2] = -a * d;\n      te[6] = b;\n      te[10] = a * c;\n    } else if (euler.order === 'ZYX') {\n      var ae = a * e,\n          af = a * f,\n          be = b * e,\n          bf = b * f;\n      te[0] = c * e;\n      te[4] = be * d - af;\n      te[8] = ae * d + bf;\n      te[1] = c * f;\n      te[5] = bf * d + ae;\n      te[9] = af * d - be;\n      te[2] = -d;\n      te[6] = b * c;\n      te[10] = a * c;\n    } else if (euler.order === 'YZX') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = bd - ac * f;\n      te[8] = bc * f + ad;\n      te[1] = f;\n      te[5] = a * e;\n      te[9] = -b * e;\n      te[2] = -d * e;\n      te[6] = ad * f + bc;\n      te[10] = ac - bd * f;\n    } else if (euler.order === 'XZY') {\n      var ac = a * c,\n          ad = a * d,\n          bc = b * c,\n          bd = b * d;\n      te[0] = c * e;\n      te[4] = -f;\n      te[8] = d * e;\n      te[1] = ac * f + bd;\n      te[5] = a * e;\n      te[9] = ad * f - bc;\n      te[2] = bc * f - ad;\n      te[6] = b * e;\n      te[10] = bd * f + ac;\n    } // bottom row\n\n\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0; // last column\n\n    te[12] = 0;\n    te[13] = 0;\n    te[14] = 0;\n    te[15] = 1;\n    return this;\n  },\n  makeRotationFromQuaternion: function () {\n    var zero = new Vector3(0, 0, 0);\n    var one = new Vector3(1, 1, 1);\n    return function makeRotationFromQuaternion(q) {\n      return this.compose(zero, q, one);\n    };\n  }(),\n  lookAt: function () {\n    var x = new Vector3();\n    var y = new Vector3();\n    var z = new Vector3();\n    return function lookAt(eye, target, up) {\n      var te = this.elements;\n      z.subVectors(eye, target);\n\n      if (z.lengthSq() === 0) {\n        // eye and target are in the same position\n        z.z = 1;\n      }\n\n      z.normalize();\n      x.crossVectors(up, z);\n\n      if (x.lengthSq() === 0) {\n        // up and z are parallel\n        if (Math.abs(up.z) === 1) {\n          z.x += 0.0001;\n        } else {\n          z.z += 0.0001;\n        }\n\n        z.normalize();\n        x.crossVectors(up, z);\n      }\n\n      x.normalize();\n      y.crossVectors(z, x);\n      te[0] = x.x;\n      te[4] = y.x;\n      te[8] = z.x;\n      te[1] = x.y;\n      te[5] = y.y;\n      te[9] = z.y;\n      te[2] = x.z;\n      te[6] = y.z;\n      te[10] = z.z;\n      return this;\n    };\n  }(),\n  multiply: function (m, n) {\n    if (n !== undefined) {\n      console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n      return this.multiplyMatrices(m, n);\n    }\n\n    return this.multiplyMatrices(this, m);\n  },\n  premultiply: function (m) {\n    return this.multiplyMatrices(m, this);\n  },\n  multiplyMatrices: function (a, b) {\n    var ae = a.elements;\n    var be = b.elements;\n    var te = this.elements;\n    var a11 = ae[0],\n        a12 = ae[4],\n        a13 = ae[8],\n        a14 = ae[12];\n    var a21 = ae[1],\n        a22 = ae[5],\n        a23 = ae[9],\n        a24 = ae[13];\n    var a31 = ae[2],\n        a32 = ae[6],\n        a33 = ae[10],\n        a34 = ae[14];\n    var a41 = ae[3],\n        a42 = ae[7],\n        a43 = ae[11],\n        a44 = ae[15];\n    var b11 = be[0],\n        b12 = be[4],\n        b13 = be[8],\n        b14 = be[12];\n    var b21 = be[1],\n        b22 = be[5],\n        b23 = be[9],\n        b24 = be[13];\n    var b31 = be[2],\n        b32 = be[6],\n        b33 = be[10],\n        b34 = be[14];\n    var b41 = be[3],\n        b42 = be[7],\n        b43 = be[11],\n        b44 = be[15];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n    return this;\n  },\n  applyToBufferAttribute: function () {\n    var v1 = new Vector3();\n    return function applyToBufferAttribute(attribute) {\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        v1.x = attribute.getX(i);\n        v1.y = attribute.getY(i);\n        v1.z = attribute.getZ(i);\n        v1.applyMatrix4(this);\n        attribute.setXYZ(i, v1.x, v1.y, v1.z);\n      }\n\n      return attribute;\n    };\n  }(),\n  determinant: function () {\n    var te = this.elements;\n    var n11 = te[0],\n        n12 = te[4],\n        n13 = te[8],\n        n14 = te[12];\n    var n21 = te[1],\n        n22 = te[5],\n        n23 = te[9],\n        n24 = te[13];\n    var n31 = te[2],\n        n32 = te[6],\n        n33 = te[10],\n        n34 = te[14];\n    var n41 = te[3],\n        n42 = te[7],\n        n43 = te[11],\n        n44 = te[15]; //TODO: make this more efficient\n    //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n  },\n  transpose: function () {\n    var te = this.elements;\n    var tmp;\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n    return this;\n  },\n  setPosition: function (v) {\n    var te = this.elements;\n    te[12] = v.x;\n    te[13] = v.y;\n    te[14] = v.z;\n    return this;\n  },\n  getInverse: function (m, throwOnDegenerate) {\n    // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    var te = this.elements,\n        me = m.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n41 = me[3],\n        n12 = me[4],\n        n22 = me[5],\n        n32 = me[6],\n        n42 = me[7],\n        n13 = me[8],\n        n23 = me[9],\n        n33 = me[10],\n        n43 = me[11],\n        n14 = me[12],\n        n24 = me[13],\n        n34 = me[14],\n        n44 = me[15],\n        t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n        t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n        t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n        t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n    var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate === true) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      return this.identity();\n    }\n\n    var detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n    te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n    te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n    te[4] = t12 * detInv;\n    te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n    te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n    te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n    te[8] = t13 * detInv;\n    te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n    te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n    te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n    te[12] = t14 * detInv;\n    te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n    te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n    te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n    return this;\n  },\n  scale: function (v) {\n    var te = this.elements;\n    var x = v.x,\n        y = v.y,\n        z = v.z;\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n    return this;\n  },\n  getMaxScaleOnAxis: function () {\n    var te = this.elements;\n    var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n    return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n  },\n  makeTranslation: function (x, y, z) {\n    this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationX: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationY: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationZ: function (theta) {\n    var c = Math.cos(theta),\n        s = Math.sin(theta);\n    this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeRotationAxis: function (axis, angle) {\n    // Based on http://www.gamedev.net/reference/articles/article1199.asp\n    var c = Math.cos(angle);\n    var s = Math.sin(angle);\n    var t = 1 - c;\n    var x = axis.x,\n        y = axis.y,\n        z = axis.z;\n    var tx = t * x,\n        ty = t * y;\n    this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeScale: function (x, y, z) {\n    this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n    return this;\n  },\n  makeShear: function (x, y, z) {\n    this.set(1, y, z, 0, x, 1, z, 0, x, y, 1, 0, 0, 0, 0, 1);\n    return this;\n  },\n  compose: function (position, quaternion, scale) {\n    var te = this.elements;\n    var x = quaternion._x,\n        y = quaternion._y,\n        z = quaternion._z,\n        w = quaternion._w;\n    var x2 = x + x,\n        y2 = y + y,\n        z2 = z + z;\n    var xx = x * x2,\n        xy = x * y2,\n        xz = x * z2;\n    var yy = y * y2,\n        yz = y * z2,\n        zz = z * z2;\n    var wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n    var sx = scale.x,\n        sy = scale.y,\n        sz = scale.z;\n    te[0] = (1 - (yy + zz)) * sx;\n    te[1] = (xy + wz) * sx;\n    te[2] = (xz - wy) * sx;\n    te[3] = 0;\n    te[4] = (xy - wz) * sy;\n    te[5] = (1 - (xx + zz)) * sy;\n    te[6] = (yz + wx) * sy;\n    te[7] = 0;\n    te[8] = (xz + wy) * sz;\n    te[9] = (yz - wx) * sz;\n    te[10] = (1 - (xx + yy)) * sz;\n    te[11] = 0;\n    te[12] = position.x;\n    te[13] = position.y;\n    te[14] = position.z;\n    te[15] = 1;\n    return this;\n  },\n  decompose: function () {\n    var vector = new Vector3();\n    var matrix = new Matrix4();\n    return function decompose(position, quaternion, scale) {\n      var te = this.elements;\n      var sx = vector.set(te[0], te[1], te[2]).length();\n      var sy = vector.set(te[4], te[5], te[6]).length();\n      var sz = vector.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n      var det = this.determinant();\n      if (det < 0) sx = -sx;\n      position.x = te[12];\n      position.y = te[13];\n      position.z = te[14]; // scale the rotation part\n\n      matrix.copy(this);\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n      matrix.elements[0] *= invSX;\n      matrix.elements[1] *= invSX;\n      matrix.elements[2] *= invSX;\n      matrix.elements[4] *= invSY;\n      matrix.elements[5] *= invSY;\n      matrix.elements[6] *= invSY;\n      matrix.elements[8] *= invSZ;\n      matrix.elements[9] *= invSZ;\n      matrix.elements[10] *= invSZ;\n      quaternion.setFromRotationMatrix(matrix);\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n      return this;\n    };\n  }(),\n  makePerspective: function (left, right, top, bottom, near, far) {\n    if (far === undefined) {\n      console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n    }\n\n    var te = this.elements;\n    var x = 2 * near / (right - left);\n    var y = 2 * near / (top - bottom);\n    var a = (right + left) / (right - left);\n    var b = (top + bottom) / (top - bottom);\n    var c = -(far + near) / (far - near);\n    var d = -2 * far * near / (far - near);\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n    return this;\n  },\n  makeOrthographic: function (left, right, top, bottom, near, far) {\n    var te = this.elements;\n    var w = 1.0 / (right - left);\n    var h = 1.0 / (top - bottom);\n    var p = 1.0 / (far - near);\n    var x = (right + left) * w;\n    var y = (top + bottom) * h;\n    var z = (far + near) * p;\n    te[0] = 2 * w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 * h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = -2 * p;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n    return this;\n  },\n  equals: function (matrix) {\n    var te = this.elements;\n    var me = matrix.elements;\n\n    for (var i = 0; i < 16; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n\n    for (var i = 0; i < 16; i++) {\n      this.elements[i] = array[i + offset];\n    }\n\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    array[offset + 9] = te[9];\n    array[offset + 10] = te[10];\n    array[offset + 11] = te[11];\n    array[offset + 12] = te[12];\n    array[offset + 13] = te[13];\n    array[offset + 14] = te[14];\n    array[offset + 15] = te[15];\n    return array;\n  }\n});\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion(x, y, z, w) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._w = w !== undefined ? w : 1;\n}\n\nObject.assign(Quaternion, {\n  slerp: function (qa, qb, qm, t) {\n    return qm.copy(qa).slerp(qb, t);\n  },\n  slerpFlat: function (dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n    // fuzz-free, array-based Quaternion SLERP operation\n    var x0 = src0[srcOffset0 + 0],\n        y0 = src0[srcOffset0 + 1],\n        z0 = src0[srcOffset0 + 2],\n        w0 = src0[srcOffset0 + 3],\n        x1 = src1[srcOffset1 + 0],\n        y1 = src1[srcOffset1 + 1],\n        z1 = src1[srcOffset1 + 2],\n        w1 = src1[srcOffset1 + 3];\n\n    if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n      var s = 1 - t,\n          cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n          dir = cos >= 0 ? 1 : -1,\n          sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n      if (sqrSin > Number.EPSILON) {\n        var sin = Math.sqrt(sqrSin),\n            len = Math.atan2(sin, cos * dir);\n        s = Math.sin(s * len) / sin;\n        t = Math.sin(t * len) / sin;\n      }\n\n      var tDir = t * dir;\n      x0 = x0 * s + x1 * tDir;\n      y0 = y0 * s + y1 * tDir;\n      z0 = z0 * s + z1 * tDir;\n      w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n      if (s === 1 - t) {\n        var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n        x0 *= f;\n        y0 *= f;\n        z0 *= f;\n        w0 *= f;\n      }\n    }\n\n    dst[dstOffset] = x0;\n    dst[dstOffset + 1] = y0;\n    dst[dstOffset + 2] = z0;\n    dst[dstOffset + 3] = w0;\n  }\n});\nObject.defineProperties(Quaternion.prototype, {\n  x: {\n    get: function () {\n      return this._x;\n    },\n    set: function (value) {\n      this._x = value;\n      this.onChangeCallback();\n    }\n  },\n  y: {\n    get: function () {\n      return this._y;\n    },\n    set: function (value) {\n      this._y = value;\n      this.onChangeCallback();\n    }\n  },\n  z: {\n    get: function () {\n      return this._z;\n    },\n    set: function (value) {\n      this._z = value;\n      this.onChangeCallback();\n    }\n  },\n  w: {\n    get: function () {\n      return this._w;\n    },\n    set: function (value) {\n      this._w = value;\n      this.onChangeCallback();\n    }\n  }\n});\nObject.assign(Quaternion.prototype, {\n  set: function (x, y, z, w) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._w = w;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._w);\n  },\n  copy: function (quaternion) {\n    this._x = quaternion.x;\n    this._y = quaternion.y;\n    this._z = quaternion.z;\n    this._w = quaternion.w;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromEuler: function (euler, update) {\n    if (!(euler && euler.isEuler)) {\n      throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n    }\n\n    var x = euler._x,\n        y = euler._y,\n        z = euler._z,\n        order = euler.order; // http://www.mathworks.com/matlabcentral/fileexchange/\n    // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    //\tcontent/SpinCalc.m\n\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var c1 = cos(x / 2);\n    var c2 = cos(y / 2);\n    var c3 = cos(z / 2);\n    var s1 = sin(x / 2);\n    var s2 = sin(y / 2);\n    var s3 = sin(z / 2);\n\n    if (order === 'XYZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'YXZ') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'ZXY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'ZYX') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    } else if (order === 'YZX') {\n      this._x = s1 * c2 * c3 + c1 * s2 * s3;\n      this._y = c1 * s2 * c3 + s1 * c2 * s3;\n      this._z = c1 * c2 * s3 - s1 * s2 * c3;\n      this._w = c1 * c2 * c3 - s1 * s2 * s3;\n    } else if (order === 'XZY') {\n      this._x = s1 * c2 * c3 - c1 * s2 * s3;\n      this._y = c1 * s2 * c3 - s1 * c2 * s3;\n      this._z = c1 * c2 * s3 + s1 * s2 * c3;\n      this._w = c1 * c2 * c3 + s1 * s2 * s3;\n    }\n\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromAxisAngle: function (axis, angle) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n    // assumes axis is normalized\n    var halfAngle = angle / 2,\n        s = Math.sin(halfAngle);\n    this._x = axis.x * s;\n    this._y = axis.y * s;\n    this._z = axis.z * s;\n    this._w = Math.cos(halfAngle);\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10],\n        trace = m11 + m22 + m33,\n        s;\n\n    if (trace > 0) {\n      s = 0.5 / Math.sqrt(trace + 1.0);\n      this._w = 0.25 / s;\n      this._x = (m32 - m23) * s;\n      this._y = (m13 - m31) * s;\n      this._z = (m21 - m12) * s;\n    } else if (m11 > m22 && m11 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n      this._w = (m32 - m23) / s;\n      this._x = 0.25 * s;\n      this._y = (m12 + m21) / s;\n      this._z = (m13 + m31) / s;\n    } else if (m22 > m33) {\n      s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n      this._w = (m13 - m31) / s;\n      this._x = (m12 + m21) / s;\n      this._y = 0.25 * s;\n      this._z = (m23 + m32) / s;\n    } else {\n      s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n      this._w = (m21 - m12) / s;\n      this._x = (m13 + m31) / s;\n      this._y = (m23 + m32) / s;\n      this._z = 0.25 * s;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  setFromUnitVectors: function () {\n    // assumes direction vectors vFrom and vTo are normalized\n    var v1 = new Vector3();\n    var r;\n    var EPS = 0.000001;\n    return function setFromUnitVectors(vFrom, vTo) {\n      if (v1 === undefined) v1 = new Vector3();\n      r = vFrom.dot(vTo) + 1;\n\n      if (r < EPS) {\n        r = 0;\n\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          v1.set(-vFrom.y, vFrom.x, 0);\n        } else {\n          v1.set(0, -vFrom.z, vFrom.y);\n        }\n      } else {\n        v1.crossVectors(vFrom, vTo);\n      }\n\n      this._x = v1.x;\n      this._y = v1.y;\n      this._z = v1.z;\n      this._w = r;\n      return this.normalize();\n    };\n  }(),\n  inverse: function () {\n    // quaternion is assumed to have unit length\n    return this.conjugate();\n  },\n  conjugate: function () {\n    this._x *= -1;\n    this._y *= -1;\n    this._z *= -1;\n    this.onChangeCallback();\n    return this;\n  },\n  dot: function (v) {\n    return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n  },\n  lengthSq: function () {\n    return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n  },\n  length: function () {\n    return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n  },\n  normalize: function () {\n    var l = this.length();\n\n    if (l === 0) {\n      this._x = 0;\n      this._y = 0;\n      this._z = 0;\n      this._w = 1;\n    } else {\n      l = 1 / l;\n      this._x = this._x * l;\n      this._y = this._y * l;\n      this._z = this._z * l;\n      this._w = this._w * l;\n    }\n\n    this.onChangeCallback();\n    return this;\n  },\n  multiply: function (q, p) {\n    if (p !== undefined) {\n      console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n      return this.multiplyQuaternions(q, p);\n    }\n\n    return this.multiplyQuaternions(this, q);\n  },\n  premultiply: function (q) {\n    return this.multiplyQuaternions(q, this);\n  },\n  multiplyQuaternions: function (a, b) {\n    // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n    var qax = a._x,\n        qay = a._y,\n        qaz = a._z,\n        qaw = a._w;\n    var qbx = b._x,\n        qby = b._y,\n        qbz = b._z,\n        qbw = b._w;\n    this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    this.onChangeCallback();\n    return this;\n  },\n  slerp: function (qb, t) {\n    if (t === 0) return this;\n    if (t === 1) return this.copy(qb);\n    var x = this._x,\n        y = this._y,\n        z = this._z,\n        w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    if (cosHalfTheta < 0) {\n      this._w = -qb._w;\n      this._x = -qb._x;\n      this._y = -qb._y;\n      this._z = -qb._z;\n      cosHalfTheta = -cosHalfTheta;\n    } else {\n      this.copy(qb);\n    }\n\n    if (cosHalfTheta >= 1.0) {\n      this._w = w;\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      return this;\n    }\n\n    var sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n    if (sqrSinHalfTheta <= Number.EPSILON) {\n      var s = 1 - t;\n      this._w = s * w + t * this._w;\n      this._x = s * x + t * this._x;\n      this._y = s * y + t * this._y;\n      this._z = s * z + t * this._z;\n      return this.normalize();\n    }\n\n    var sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n    var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n    var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n        ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n    this._w = w * ratioA + this._w * ratioB;\n    this._x = x * ratioA + this._x * ratioB;\n    this._y = y * ratioA + this._y * ratioB;\n    this._z = z * ratioA + this._z * ratioB;\n    this.onChangeCallback();\n    return this;\n  },\n  equals: function (quaternion) {\n    return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this._x = array[offset];\n    this._y = array[offset + 1];\n    this._z = array[offset + 2];\n    this._w = array[offset + 3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._w;\n    return array;\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3(x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n}\n\nObject.assign(Vector3.prototype, {\n  isVector3: true,\n  set: function (x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n\n    return this;\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  },\n  multiply: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    return this;\n  },\n  multiplyVectors: function (a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  },\n  applyEuler: function () {\n    var quaternion = new Quaternion();\n    return function applyEuler(euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      return this.applyQuaternion(quaternion.setFromEuler(euler));\n    };\n  }(),\n  applyAxisAngle: function () {\n    var quaternion = new Quaternion();\n    return function applyAxisAngle(axis, angle) {\n      return this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n    };\n  }(),\n  applyMatrix3: function (m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    var w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n    return this;\n  },\n  applyQuaternion: function (q) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var qx = q.x,\n        qy = q.y,\n        qz = q.z,\n        qw = q.w; // calculate quat * vector\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  },\n  project: function () {\n    var matrix = new Matrix4();\n    return function project(camera) {\n      matrix.multiplyMatrices(camera.projectionMatrix, matrix.getInverse(camera.matrixWorld));\n      return this.applyMatrix4(matrix);\n    };\n  }(),\n  unproject: function () {\n    var matrix = new Matrix4();\n    return function unproject(camera) {\n      matrix.multiplyMatrices(camera.matrixWorld, matrix.getInverse(camera.projectionMatrix));\n      return this.applyMatrix4(matrix);\n    };\n  }(),\n  transformDirection: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    return this.normalize();\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    return this;\n  },\n  clamp: function (min, max) {\n    // assumes min < max, componentwise\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    return this;\n  },\n  clampScalar: function () {\n    var min = new Vector3();\n    var max = new Vector3();\n    return function clampScalar(minVal, maxVal) {\n      min.set(minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  // TODO lengthSquared?\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  manhattanLength: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length() || 1);\n  },\n  setLength: function (length) {\n    return this.normalize().multiplyScalar(length);\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  cross: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n      return this.crossVectors(v, w);\n    }\n\n    return this.crossVectors(this, v);\n  },\n  crossVectors: function (a, b) {\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  },\n  projectOnVector: function (vector) {\n    var scalar = vector.dot(this) / vector.lengthSq();\n    return this.copy(vector).multiplyScalar(scalar);\n  },\n  projectOnPlane: function () {\n    var v1 = new Vector3();\n    return function projectOnPlane(planeNormal) {\n      v1.copy(this).projectOnVector(planeNormal);\n      return this.sub(v1);\n    };\n  }(),\n  reflect: function () {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n    var v1 = new Vector3();\n    return function reflect(normal) {\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n  }(),\n  angleTo: function (v) {\n    var theta = this.dot(v) / Math.sqrt(this.lengthSq() * v.lengthSq()); // clamp, to handle numerical problems\n\n    return Math.acos(_Math.clamp(theta, -1, 1));\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y,\n        dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  manhattanDistanceTo: function (v) {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n  },\n  setFromSpherical: function (s) {\n    var sinPhiRadius = Math.sin(s.phi) * s.radius;\n    this.x = sinPhiRadius * Math.sin(s.theta);\n    this.y = Math.cos(s.phi) * s.radius;\n    this.z = sinPhiRadius * Math.cos(s.theta);\n    return this;\n  },\n  setFromCylindrical: function (c) {\n    this.x = c.radius * Math.sin(c.theta);\n    this.y = c.y;\n    this.z = c.radius * Math.cos(c.theta);\n    return this;\n  },\n  setFromMatrixPosition: function (m) {\n    var e = m.elements;\n    this.x = e[12];\n    this.y = e[13];\n    this.z = e[14];\n    return this;\n  },\n  setFromMatrixScale: function (m) {\n    var sx = this.setFromMatrixColumn(m, 0).length();\n    var sy = this.setFromMatrixColumn(m, 1).length();\n    var sz = this.setFromMatrixColumn(m, 2).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  },\n  setFromMatrixColumn: function (m, index) {\n    return this.fromArray(m.elements, index * 4);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  },\n  fromBufferAttribute: function (attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n    return this;\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n  this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n  if (arguments.length > 0) {\n    console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n  }\n}\n\nObject.assign(Matrix3.prototype, {\n  isMatrix3: true,\n  set: function (n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n    var te = this.elements;\n    te[0] = n11;\n    te[1] = n21;\n    te[2] = n31;\n    te[3] = n12;\n    te[4] = n22;\n    te[5] = n32;\n    te[6] = n13;\n    te[7] = n23;\n    te[8] = n33;\n    return this;\n  },\n  identity: function () {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().fromArray(this.elements);\n  },\n  copy: function (m) {\n    var te = this.elements;\n    var me = m.elements;\n    te[0] = me[0];\n    te[1] = me[1];\n    te[2] = me[2];\n    te[3] = me[3];\n    te[4] = me[4];\n    te[5] = me[5];\n    te[6] = me[6];\n    te[7] = me[7];\n    te[8] = me[8];\n    return this;\n  },\n  setFromMatrix4: function (m) {\n    var me = m.elements;\n    this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n    return this;\n  },\n  applyToBufferAttribute: function () {\n    var v1 = new Vector3();\n    return function applyToBufferAttribute(attribute) {\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        v1.x = attribute.getX(i);\n        v1.y = attribute.getY(i);\n        v1.z = attribute.getZ(i);\n        v1.applyMatrix3(this);\n        attribute.setXYZ(i, v1.x, v1.y, v1.z);\n      }\n\n      return attribute;\n    };\n  }(),\n  multiply: function (m) {\n    return this.multiplyMatrices(this, m);\n  },\n  premultiply: function (m) {\n    return this.multiplyMatrices(m, this);\n  },\n  multiplyMatrices: function (a, b) {\n    var ae = a.elements;\n    var be = b.elements;\n    var te = this.elements;\n    var a11 = ae[0],\n        a12 = ae[3],\n        a13 = ae[6];\n    var a21 = ae[1],\n        a22 = ae[4],\n        a23 = ae[7];\n    var a31 = ae[2],\n        a32 = ae[5],\n        a33 = ae[8];\n    var b11 = be[0],\n        b12 = be[3],\n        b13 = be[6];\n    var b21 = be[1],\n        b22 = be[4],\n        b23 = be[7];\n    var b31 = be[2],\n        b32 = be[5],\n        b33 = be[8];\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n    te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n    te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n    te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n    te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n    te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n    te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    var te = this.elements;\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n    return this;\n  },\n  determinant: function () {\n    var te = this.elements;\n    var a = te[0],\n        b = te[1],\n        c = te[2],\n        d = te[3],\n        e = te[4],\n        f = te[5],\n        g = te[6],\n        h = te[7],\n        i = te[8];\n    return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n  },\n  getInverse: function (matrix, throwOnDegenerate) {\n    if (matrix && matrix.isMatrix4) {\n      console.error(\"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\");\n    }\n\n    var me = matrix.elements,\n        te = this.elements,\n        n11 = me[0],\n        n21 = me[1],\n        n31 = me[2],\n        n12 = me[3],\n        n22 = me[4],\n        n32 = me[5],\n        n13 = me[6],\n        n23 = me[7],\n        n33 = me[8],\n        t11 = n33 * n22 - n32 * n23,\n        t12 = n32 * n13 - n33 * n12,\n        t13 = n23 * n12 - n22 * n13,\n        det = n11 * t11 + n21 * t12 + n31 * t13;\n\n    if (det === 0) {\n      var msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n      if (throwOnDegenerate === true) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      return this.identity();\n    }\n\n    var detInv = 1 / det;\n    te[0] = t11 * detInv;\n    te[1] = (n31 * n23 - n33 * n21) * detInv;\n    te[2] = (n32 * n21 - n31 * n22) * detInv;\n    te[3] = t12 * detInv;\n    te[4] = (n33 * n11 - n31 * n13) * detInv;\n    te[5] = (n31 * n12 - n32 * n11) * detInv;\n    te[6] = t13 * detInv;\n    te[7] = (n21 * n13 - n23 * n11) * detInv;\n    te[8] = (n22 * n11 - n21 * n12) * detInv;\n    return this;\n  },\n  transpose: function () {\n    var tmp,\n        m = this.elements;\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n    return this;\n  },\n  getNormalMatrix: function (matrix4) {\n    return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n  },\n  transposeIntoArray: function (r) {\n    var m = this.elements;\n    r[0] = m[0];\n    r[1] = m[3];\n    r[2] = m[6];\n    r[3] = m[1];\n    r[4] = m[4];\n    r[5] = m[7];\n    r[6] = m[2];\n    r[7] = m[5];\n    r[8] = m[8];\n    return this;\n  },\n  setUvTransform: function (tx, ty, sx, sy, rotation, cx, cy) {\n    var c = Math.cos(rotation);\n    var s = Math.sin(rotation);\n    this.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n  },\n  scale: function (sx, sy) {\n    var te = this.elements;\n    te[0] *= sx;\n    te[3] *= sx;\n    te[6] *= sx;\n    te[1] *= sy;\n    te[4] *= sy;\n    te[7] *= sy;\n    return this;\n  },\n  rotate: function (theta) {\n    var c = Math.cos(theta);\n    var s = Math.sin(theta);\n    var te = this.elements;\n    var a11 = te[0],\n        a12 = te[3],\n        a13 = te[6];\n    var a21 = te[1],\n        a22 = te[4],\n        a23 = te[7];\n    te[0] = c * a11 + s * a21;\n    te[3] = c * a12 + s * a22;\n    te[6] = c * a13 + s * a23;\n    te[1] = -s * a11 + c * a21;\n    te[4] = -s * a12 + c * a22;\n    te[7] = -s * a13 + c * a23;\n    return this;\n  },\n  translate: function (tx, ty) {\n    var te = this.elements;\n    te[0] += tx * te[2];\n    te[3] += tx * te[5];\n    te[6] += tx * te[8];\n    te[1] += ty * te[2];\n    te[4] += ty * te[5];\n    te[7] += ty * te[8];\n    return this;\n  },\n  equals: function (matrix) {\n    var te = this.elements;\n    var me = matrix.elements;\n\n    for (var i = 0; i < 9; i++) {\n      if (te[i] !== me[i]) return false;\n    }\n\n    return true;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n\n    for (var i = 0; i < 9; i++) {\n      this.elements[i] = array[i + offset];\n    }\n\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    var te = this.elements;\n    array[offset] = te[0];\n    array[offset + 1] = te[1];\n    array[offset + 2] = te[2];\n    array[offset + 3] = te[3];\n    array[offset + 4] = te[4];\n    array[offset + 5] = te[5];\n    array[offset + 6] = te[6];\n    array[offset + 7] = te[7];\n    array[offset + 8] = te[8];\n    return array;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture(image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n  Object.defineProperty(this, 'id', {\n    value: textureId++\n  });\n  this.uuid = _Math.generateUUID();\n  this.name = '';\n  this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n  this.mipmaps = [];\n  this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n  this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n  this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n  this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n  this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n  this.format = format !== undefined ? format : RGBAFormat;\n  this.type = type !== undefined ? type : UnsignedByteType;\n  this.offset = new Vector2(0, 0);\n  this.repeat = new Vector2(1, 1);\n  this.center = new Vector2(0, 0);\n  this.rotation = 0;\n  this.matrixAutoUpdate = true;\n  this.matrix = new Matrix3();\n  this.generateMipmaps = true;\n  this.premultiplyAlpha = false;\n  this.flipY = true;\n  this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n  // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n  //\n  // Also changing the encoding after already used by a Material will not automatically make the Material\n  // update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n  this.encoding = encoding !== undefined ? encoding : LinearEncoding;\n  this.version = 0;\n  this.onUpdate = null;\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n  constructor: Texture,\n  isTexture: true,\n  updateMatrix: function () {\n    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.name = source.name;\n    this.image = source.image;\n    this.mipmaps = source.mipmaps.slice(0);\n    this.mapping = source.mapping;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.format = source.format;\n    this.type = source.type;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.center.copy(source.center);\n    this.rotation = source.rotation;\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrix.copy(source.matrix);\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    this.encoding = source.encoding;\n    return this;\n  },\n  toJSON: function (meta) {\n    var isRootObject = meta === undefined || typeof meta === 'string';\n\n    if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n      return meta.textures[this.uuid];\n    }\n\n    function getDataURL(image) {\n      var canvas;\n\n      if (image instanceof HTMLCanvasElement) {\n        canvas = image;\n      } else {\n        canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        canvas.width = image.width;\n        canvas.height = image.height;\n        var context = canvas.getContext('2d');\n\n        if (image instanceof ImageData) {\n          context.putImageData(image, 0, 0);\n        } else {\n          context.drawImage(image, 0, 0, image.width, image.height);\n        }\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n\n    var output = {\n      metadata: {\n        version: 4.5,\n        type: 'Texture',\n        generator: 'Texture.toJSON'\n      },\n      uuid: this.uuid,\n      name: this.name,\n      mapping: this.mapping,\n      repeat: [this.repeat.x, this.repeat.y],\n      offset: [this.offset.x, this.offset.y],\n      center: [this.center.x, this.center.y],\n      rotation: this.rotation,\n      wrap: [this.wrapS, this.wrapT],\n      format: this.format,\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy,\n      flipY: this.flipY\n    };\n\n    if (this.image !== undefined) {\n      // TODO: Move to THREE.Image\n      var image = this.image;\n\n      if (image.uuid === undefined) {\n        image.uuid = _Math.generateUUID(); // UGH\n      }\n\n      if (!isRootObject && meta.images[image.uuid] === undefined) {\n        var url;\n\n        if (Array.isArray(image)) {\n          // process array of images e.g. CubeTexture\n          url = [];\n\n          for (var i = 0, l = image.length; i < l; i++) {\n            url.push(getDataURL(image[i]));\n          }\n        } else {\n          // process single image\n          url = getDataURL(image);\n        }\n\n        meta.images[image.uuid] = {\n          uuid: image.uuid,\n          url: url\n        };\n      }\n\n      output.image = image.uuid;\n    }\n\n    if (!isRootObject) {\n      meta.textures[this.uuid] = output;\n    }\n\n    return output;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  },\n  transformUv: function (uv) {\n    if (this.mapping !== UVMapping) return;\n    uv.applyMatrix3(this.matrix);\n\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case RepeatWrapping:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n\n        case ClampToEdgeWrapping:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n\n          break;\n      }\n    }\n\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case RepeatWrapping:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n\n        case ClampToEdgeWrapping:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n\n          break;\n      }\n    }\n\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n  }\n});\nObject.defineProperty(Texture.prototype, \"needsUpdate\", {\n  set: function (value) {\n    if (value === true) this.version++;\n  }\n});\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4(x, y, z, w) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n  this.w = w !== undefined ? w : 1;\n}\n\nObject.assign(Vector4.prototype, {\n  isVector4: true,\n  set: function (x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    this.w = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setW: function (w) {\n    this.w = w;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      case 3:\n        this.w = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n\n    return this;\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      case 3:\n        return this.w;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z, this.w);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    this.w *= scalar;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z,\n        w = this.w;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  setAxisAngleFromQuaternion: function (q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n    // q is assumed to be normalized\n    this.w = 2 * Math.acos(q.w);\n    var s = Math.sqrt(1 - q.w * q.w);\n\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n\n    return this;\n  },\n  setAxisAngleFromRotationMatrix: function (m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    var angle,\n        x,\n        y,\n        z,\n        // variables for result\n    epsilon = 0.01,\n        // margin to allow for rounding errors\n    epsilon2 = 0.1,\n        // margin to distinguish between 0 and 180 degrees\n    te = m.elements,\n        m11 = te[0],\n        m12 = te[4],\n        m13 = te[8],\n        m21 = te[1],\n        m22 = te[5],\n        m23 = te[9],\n        m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n\n    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n        // this singularity is identity matrix so angle = 0\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      } // otherwise this singularity is angle = 180\n\n\n      angle = Math.PI;\n      var xx = (m11 + 1) / 2;\n      var yy = (m22 + 1) / 2;\n      var zz = (m33 + 1) / 2;\n      var xy = (m12 + m21) / 4;\n      var xz = (m13 + m31) / 4;\n      var yz = (m23 + m32) / 4;\n\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    } // as we have reached here there are no singularities so we can handle normally\n\n\n    var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    this.w = Math.min(this.w, v.w);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    this.w = Math.max(this.w, v.w);\n    return this;\n  },\n  clamp: function (min, max) {\n    // assumes min < max, componentwise\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    this.w = Math.max(min.w, Math.min(max.w, this.w));\n    return this;\n  },\n  clampScalar: function () {\n    var min, max;\n    return function clampScalar(minVal, maxVal) {\n      if (min === undefined) {\n        min = new Vector4();\n        max = new Vector4();\n      }\n\n      min.set(minVal, minVal, minVal, minVal);\n      max.set(maxVal, maxVal, maxVal, maxVal);\n      return this.clamp(min, max);\n    };\n  }(),\n  clampLength: function (min, max) {\n    var length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  },\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  },\n  manhattanLength: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length() || 1);\n  },\n  setLength: function (length) {\n    return this.normalize().multiplyScalar(length);\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  },\n  fromBufferAttribute: function (attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n    this.w = attribute.getW(index);\n    return this;\n  }\n});\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\n\nfunction WebGLRenderTarget(width, height, options) {\n  this.width = width;\n  this.height = height;\n  this.scissor = new Vector4(0, 0, width, height);\n  this.scissorTest = false;\n  this.viewport = new Vector4(0, 0, width, height);\n  options = options || {};\n  if (options.minFilter === undefined) options.minFilter = LinearFilter;\n  this.texture = new Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n  this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n  this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n  this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n  this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n}\n\nWebGLRenderTarget.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n  constructor: WebGLRenderTarget,\n  isWebGLRenderTarget: true,\n  setSize: function (width, height) {\n    if (this.width !== width || this.height !== height) {\n      this.width = width;\n      this.height = height;\n      this.dispose();\n    }\n\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.width = source.width;\n    this.height = source.height;\n    this.viewport.copy(source.viewport);\n    this.texture = source.texture.clone();\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    this.depthTexture = source.depthTexture;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube(width, height, options) {\n  WebGLRenderTarget.call(this, width, height, options);\n  this.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\n  this.activeMipMapLevel = 0;\n}\n\nWebGLRenderTargetCube.prototype = Object.create(WebGLRenderTarget.prototype);\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture(data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n  Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.image = {\n    data: data,\n    width: width,\n    height: height\n  };\n  this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n  this.generateMipmaps = false;\n  this.flipY = false;\n  this.unpackAlignment = 1;\n}\n\nDataTexture.prototype = Object.create(Texture.prototype);\nDataTexture.prototype.constructor = DataTexture;\nDataTexture.prototype.isDataTexture = true;\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3(min, max) {\n  this.min = min !== undefined ? min : new Vector3(+Infinity, +Infinity, +Infinity);\n  this.max = max !== undefined ? max : new Vector3(-Infinity, -Infinity, -Infinity);\n}\n\nObject.assign(Box3.prototype, {\n  isBox3: true,\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromArray: function (array) {\n    var minX = +Infinity;\n    var minY = +Infinity;\n    var minZ = +Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n    var maxZ = -Infinity;\n\n    for (var i = 0, l = array.length; i < l; i += 3) {\n      var x = array[i];\n      var y = array[i + 1];\n      var z = array[i + 2];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n    return this;\n  },\n  setFromBufferAttribute: function (attribute) {\n    var minX = +Infinity;\n    var minY = +Infinity;\n    var minZ = +Infinity;\n    var maxX = -Infinity;\n    var maxY = -Infinity;\n    var maxZ = -Infinity;\n\n    for (var i = 0, l = attribute.count; i < l; i++) {\n      var x = attribute.getX(i);\n      var y = attribute.getY(i);\n      var z = attribute.getZ(i);\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (z < minZ) minZ = z;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      if (z > maxZ) maxZ = z;\n    }\n\n    this.min.set(minX, minY, minZ);\n    this.max.set(maxX, maxY, maxZ);\n    return this;\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new Vector3();\n    return function setFromCenterAndSize(center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  setFromObject: function (object) {\n    this.makeEmpty();\n    return this.expandByObject(object);\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = this.min.z = +Infinity;\n    this.max.x = this.max.y = this.max.z = -Infinity;\n    return this;\n  },\n  isEmpty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n  },\n  getCenter: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Box3: .getCenter() target is now required');\n      target = new Vector3();\n    }\n\n    return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  getSize: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Box3: .getSize() target is now required');\n      target = new Vector3();\n    }\n\n    return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  expandByObject: function () {\n    // Computes the world-axis-aligned bounding box of an object (including its children),\n    // accounting for both the object's, and children's, world transforms\n    var scope, i, l;\n    var v1 = new Vector3();\n\n    function traverse(node) {\n      var geometry = node.geometry;\n\n      if (geometry !== undefined) {\n        if (geometry.isGeometry) {\n          var vertices = geometry.vertices;\n\n          for (i = 0, l = vertices.length; i < l; i++) {\n            v1.copy(vertices[i]);\n            v1.applyMatrix4(node.matrixWorld);\n            scope.expandByPoint(v1);\n          }\n        } else if (geometry.isBufferGeometry) {\n          var attribute = geometry.attributes.position;\n\n          if (attribute !== undefined) {\n            for (i = 0, l = attribute.count; i < l; i++) {\n              v1.fromBufferAttribute(attribute, i).applyMatrix4(node.matrixWorld);\n              scope.expandByPoint(v1);\n            }\n          }\n        }\n      }\n    }\n\n    return function expandByObject(object) {\n      scope = this;\n      object.updateMatrixWorld(true);\n      object.traverse(traverse);\n      return this;\n    };\n  }(),\n  containsPoint: function (point) {\n    return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n  },\n  containsBox: function (box) {\n    return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n  },\n  getParameter: function (point, target) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    if (target === undefined) {\n      console.warn('THREE.Box3: .getParameter() target is now required');\n      target = new Vector3();\n    }\n\n    return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n  },\n  intersectsBox: function (box) {\n    // using 6 splitting planes to rule out intersections.\n    return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n  },\n  intersectsSphere: function () {\n    var closestPoint = new Vector3();\n    return function intersectsSphere(sphere) {\n      // Find the point on the AABB closest to the sphere center.\n      this.clampPoint(sphere.center, closestPoint); // If that point is inside the sphere, the AABB and sphere intersect.\n\n      return closestPoint.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n    };\n  }(),\n  intersectsPlane: function (plane) {\n    // We compute the minimum and maximum dot product values. If those values\n    // are on the same side (back or front) of the plane, then there is no intersection.\n    var min, max;\n\n    if (plane.normal.x > 0) {\n      min = plane.normal.x * this.min.x;\n      max = plane.normal.x * this.max.x;\n    } else {\n      min = plane.normal.x * this.max.x;\n      max = plane.normal.x * this.min.x;\n    }\n\n    if (plane.normal.y > 0) {\n      min += plane.normal.y * this.min.y;\n      max += plane.normal.y * this.max.y;\n    } else {\n      min += plane.normal.y * this.max.y;\n      max += plane.normal.y * this.min.y;\n    }\n\n    if (plane.normal.z > 0) {\n      min += plane.normal.z * this.min.z;\n      max += plane.normal.z * this.max.z;\n    } else {\n      min += plane.normal.z * this.max.z;\n      max += plane.normal.z * this.min.z;\n    }\n\n    return min <= plane.constant && max >= plane.constant;\n  },\n  intersectsTriangle: function () {\n    // triangle centered vertices\n    var v0 = new Vector3();\n    var v1 = new Vector3();\n    var v2 = new Vector3(); // triangle edge vectors\n\n    var f0 = new Vector3();\n    var f1 = new Vector3();\n    var f2 = new Vector3();\n    var testAxis = new Vector3();\n    var center = new Vector3();\n    var extents = new Vector3();\n    var triangleNormal = new Vector3();\n\n    function satForAxes(axes) {\n      var i, j;\n\n      for (i = 0, j = axes.length - 3; i <= j; i += 3) {\n        testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n        var r = extents.x * Math.abs(testAxis.x) + extents.y * Math.abs(testAxis.y) + extents.z * Math.abs(testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n        var p0 = v0.dot(testAxis);\n        var p1 = v1.dot(testAxis);\n        var p2 = v2.dot(testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n        if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n          // points of the projected triangle are outside the projected half-length of the aabb\n          // the axis is seperating and we can exit\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return function intersectsTriangle(triangle) {\n      if (this.isEmpty()) {\n        return false;\n      } // compute box center and extents\n\n\n      this.getCenter(center);\n      extents.subVectors(this.max, center); // translate triangle to aabb origin\n\n      v0.subVectors(triangle.a, center);\n      v1.subVectors(triangle.b, center);\n      v2.subVectors(triangle.c, center); // compute edge vectors for triangle\n\n      f0.subVectors(v1, v0);\n      f1.subVectors(v2, v1);\n      f2.subVectors(v0, v2); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n      // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n      // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n      var axes = [0, -f0.z, f0.y, 0, -f1.z, f1.y, 0, -f2.z, f2.y, f0.z, 0, -f0.x, f1.z, 0, -f1.x, f2.z, 0, -f2.x, -f0.y, f0.x, 0, -f1.y, f1.x, 0, -f2.y, f2.x, 0];\n\n      if (!satForAxes(axes)) {\n        return false;\n      } // test 3 face normals from the aabb\n\n\n      axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n      if (!satForAxes(axes)) {\n        return false;\n      } // finally testing the face normal of the triangle\n      // use already existing triangle edge vectors here\n\n\n      triangleNormal.crossVectors(f0, f1);\n      axes = [triangleNormal.x, triangleNormal.y, triangleNormal.z];\n      return satForAxes(axes);\n    };\n  }(),\n  clampPoint: function (point, target) {\n    if (target === undefined) {\n      console.warn('THREE.Box3: .clampPoint() target is now required');\n      target = new Vector3();\n    }\n\n    return target.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new Vector3();\n    return function distanceToPoint(point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  getBoundingSphere: function () {\n    var v1 = new Vector3();\n    return function getBoundingSphere(target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getBoundingSphere() target is now required');\n        target = new Sphere();\n      }\n\n      this.getCenter(target.center);\n      target.radius = this.getSize(v1).length() * 0.5;\n      return target;\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n    if (this.isEmpty()) this.makeEmpty();\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  applyMatrix4: function (matrix) {\n    // transform of empty box is an empty box.\n    if (this.isEmpty()) return this;\n    var m = matrix.elements;\n    var xax = m[0] * this.min.x,\n        xay = m[1] * this.min.x,\n        xaz = m[2] * this.min.x;\n    var xbx = m[0] * this.max.x,\n        xby = m[1] * this.max.x,\n        xbz = m[2] * this.max.x;\n    var yax = m[4] * this.min.y,\n        yay = m[5] * this.min.y,\n        yaz = m[6] * this.min.y;\n    var ybx = m[4] * this.max.y,\n        yby = m[5] * this.max.y,\n        ybz = m[6] * this.max.y;\n    var zax = m[8] * this.min.z,\n        zay = m[9] * this.min.z,\n        zaz = m[10] * this.min.z;\n    var zbx = m[8] * this.max.z,\n        zby = m[9] * this.max.z,\n        zbz = m[10] * this.max.z;\n    this.min.x = Math.min(xax, xbx) + Math.min(yax, ybx) + Math.min(zax, zbx) + m[12];\n    this.min.y = Math.min(xay, xby) + Math.min(yay, yby) + Math.min(zay, zby) + m[13];\n    this.min.z = Math.min(xaz, xbz) + Math.min(yaz, ybz) + Math.min(zaz, zbz) + m[14];\n    this.max.x = Math.max(xax, xbx) + Math.max(yax, ybx) + Math.max(zax, zbx) + m[12];\n    this.max.y = Math.max(xay, xby) + Math.max(yay, yby) + Math.max(zay, zby) + m[13];\n    this.max.z = Math.max(xaz, xbz) + Math.max(yaz, ybz) + Math.max(zaz, zbz) + m[14];\n    return this;\n  },\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n});\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere(center, radius) {\n  this.center = center !== undefined ? center : new Vector3();\n  this.radius = radius !== undefined ? radius : 0;\n}\n\nObject.assign(Sphere.prototype, {\n  set: function (center, radius) {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  },\n  setFromPoints: function () {\n    var box = new Box3();\n    return function setFromPoints(points, optionalCenter) {\n      var center = this.center;\n\n      if (optionalCenter !== undefined) {\n        center.copy(optionalCenter);\n      } else {\n        box.setFromPoints(points).getCenter(center);\n      }\n\n      var maxRadiusSq = 0;\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n      }\n\n      this.radius = Math.sqrt(maxRadiusSq);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (sphere) {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  },\n  empty: function () {\n    return this.radius <= 0;\n  },\n  containsPoint: function (point) {\n    return point.distanceToSquared(this.center) <= this.radius * this.radius;\n  },\n  distanceToPoint: function (point) {\n    return point.distanceTo(this.center) - this.radius;\n  },\n  intersectsSphere: function (sphere) {\n    var radiusSum = this.radius + sphere.radius;\n    return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n  },\n  intersectsBox: function (box) {\n    return box.intersectsSphere(this);\n  },\n  intersectsPlane: function (plane) {\n    return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n  },\n  clampPoint: function (point, target) {\n    var deltaLengthSq = this.center.distanceToSquared(point);\n\n    if (target === undefined) {\n      console.warn('THREE.Sphere: .clampPoint() target is now required');\n      target = new Vector3();\n    }\n\n    target.copy(point);\n\n    if (deltaLengthSq > this.radius * this.radius) {\n      target.sub(this.center).normalize();\n      target.multiplyScalar(this.radius).add(this.center);\n    }\n\n    return target;\n  },\n  getBoundingBox: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Sphere: .getBoundingBox() target is now required');\n      target = new Box3();\n    }\n\n    target.set(this.center, this.center);\n    target.expandByScalar(this.radius);\n    return target;\n  },\n  applyMatrix4: function (matrix) {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  },\n  translate: function (offset) {\n    this.center.add(offset);\n    return this;\n  },\n  equals: function (sphere) {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  }\n});\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane(normal, constant) {\n  // normal is assumed to be normalized\n  this.normal = normal !== undefined ? normal : new Vector3(1, 0, 0);\n  this.constant = constant !== undefined ? constant : 0;\n}\n\nObject.assign(Plane.prototype, {\n  set: function (normal, constant) {\n    this.normal.copy(normal);\n    this.constant = constant;\n    return this;\n  },\n  setComponents: function (x, y, z, w) {\n    this.normal.set(x, y, z);\n    this.constant = w;\n    return this;\n  },\n  setFromNormalAndCoplanarPoint: function (normal, point) {\n    this.normal.copy(normal);\n    this.constant = -point.dot(this.normal);\n    return this;\n  },\n  setFromCoplanarPoints: function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    return function setFromCoplanarPoints(a, b, c) {\n      var normal = v1.subVectors(c, b).cross(v2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (plane) {\n    this.normal.copy(plane.normal);\n    this.constant = plane.constant;\n    return this;\n  },\n  normalize: function () {\n    // Note: will lead to a divide by zero if the plane is invalid.\n    var inverseNormalLength = 1.0 / this.normal.length();\n    this.normal.multiplyScalar(inverseNormalLength);\n    this.constant *= inverseNormalLength;\n    return this;\n  },\n  negate: function () {\n    this.constant *= -1;\n    this.normal.negate();\n    return this;\n  },\n  distanceToPoint: function (point) {\n    return this.normal.dot(point) + this.constant;\n  },\n  distanceToSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) - sphere.radius;\n  },\n  projectPoint: function (point, target) {\n    if (target === undefined) {\n      console.warn('THREE.Plane: .projectPoint() target is now required');\n      target = new Vector3();\n    }\n\n    return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n  },\n  intersectLine: function () {\n    var v1 = new Vector3();\n    return function intersectLine(line, target) {\n      if (target === undefined) {\n        console.warn('THREE.Plane: .intersectLine() target is now required');\n        target = new Vector3();\n      }\n\n      var direction = line.delta(v1);\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n          return target.copy(line.start);\n        } // Unsure if this is the correct method to handle this case.\n\n\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n        return undefined;\n      }\n\n      return target.copy(direction).multiplyScalar(t).add(line.start);\n    };\n  }(),\n  intersectsLine: function (line) {\n    // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n    var startSign = this.distanceToPoint(line.start);\n    var endSign = this.distanceToPoint(line.end);\n    return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n  },\n  intersectsBox: function (box) {\n    return box.intersectsPlane(this);\n  },\n  intersectsSphere: function (sphere) {\n    return sphere.intersectsPlane(this);\n  },\n  coplanarPoint: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Plane: .coplanarPoint() target is now required');\n      target = new Vector3();\n    }\n\n    return target.copy(this.normal).multiplyScalar(-this.constant);\n  },\n  applyMatrix4: function () {\n    var v1 = new Vector3();\n    var m1 = new Matrix3();\n    return function applyMatrix4(matrix, optionalNormalMatrix) {\n      var normalMatrix = optionalNormalMatrix || m1.getNormalMatrix(matrix);\n      var referencePoint = this.coplanarPoint(v1).applyMatrix4(matrix);\n      var normal = this.normal.applyMatrix3(normalMatrix).normalize();\n      this.constant = -referencePoint.dot(normal);\n      return this;\n    };\n  }(),\n  translate: function (offset) {\n    this.constant -= offset.dot(this.normal);\n    return this;\n  },\n  equals: function (plane) {\n    return plane.normal.equals(this.normal) && plane.constant === this.constant;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum(p0, p1, p2, p3, p4, p5) {\n  this.planes = [p0 !== undefined ? p0 : new Plane(), p1 !== undefined ? p1 : new Plane(), p2 !== undefined ? p2 : new Plane(), p3 !== undefined ? p3 : new Plane(), p4 !== undefined ? p4 : new Plane(), p5 !== undefined ? p5 : new Plane()];\n}\n\nObject.assign(Frustum.prototype, {\n  set: function (p0, p1, p2, p3, p4, p5) {\n    var planes = this.planes;\n    planes[0].copy(p0);\n    planes[1].copy(p1);\n    planes[2].copy(p2);\n    planes[3].copy(p3);\n    planes[4].copy(p4);\n    planes[5].copy(p5);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (frustum) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      planes[i].copy(frustum.planes[i]);\n    }\n\n    return this;\n  },\n  setFromMatrix: function (m) {\n    var planes = this.planes;\n    var me = m.elements;\n    var me0 = me[0],\n        me1 = me[1],\n        me2 = me[2],\n        me3 = me[3];\n    var me4 = me[4],\n        me5 = me[5],\n        me6 = me[6],\n        me7 = me[7];\n    var me8 = me[8],\n        me9 = me[9],\n        me10 = me[10],\n        me11 = me[11];\n    var me12 = me[12],\n        me13 = me[13],\n        me14 = me[14],\n        me15 = me[15];\n    planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n    planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n    planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n    planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n    planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n    planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n    return this;\n  },\n  intersectsObject: function () {\n    var sphere = new Sphere();\n    return function intersectsObject(object) {\n      var geometry = object.geometry;\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSprite: function () {\n    var sphere = new Sphere();\n    return function intersectsSprite(sprite) {\n      sphere.center.set(0, 0, 0);\n      sphere.radius = 0.7071067811865476;\n      sphere.applyMatrix4(sprite.matrixWorld);\n      return this.intersectsSphere(sphere);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    var planes = this.planes;\n    var center = sphere.center;\n    var negRadius = -sphere.radius;\n\n    for (var i = 0; i < 6; i++) {\n      var distance = planes[i].distanceToPoint(center);\n\n      if (distance < negRadius) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n  intersectsBox: function () {\n    var p1 = new Vector3(),\n        p2 = new Vector3();\n    return function intersectsBox(box) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        var plane = planes[i];\n        p1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n        p2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        p1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n        p2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        p1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n        p2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n        var d1 = plane.distanceToPoint(p1);\n        var d2 = plane.distanceToPoint(p2); // if both outside plane, no intersection\n\n        if (d1 < 0 && d2 < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }(),\n  containsPoint: function (point) {\n    var planes = this.planes;\n\n    for (var i = 0; i < 6; i++) {\n      if (planes[i].distanceToPoint(point) < 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n});\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\nvar lights_pars_maps = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\nvar ShaderChunk = {\n  alphamap_fragment: alphamap_fragment,\n  alphamap_pars_fragment: alphamap_pars_fragment,\n  alphatest_fragment: alphatest_fragment,\n  aomap_fragment: aomap_fragment,\n  aomap_pars_fragment: aomap_pars_fragment,\n  begin_vertex: begin_vertex,\n  beginnormal_vertex: beginnormal_vertex,\n  bsdfs: bsdfs,\n  bumpmap_pars_fragment: bumpmap_pars_fragment,\n  clipping_planes_fragment: clipping_planes_fragment,\n  clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n  clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n  clipping_planes_vertex: clipping_planes_vertex,\n  color_fragment: color_fragment,\n  color_pars_fragment: color_pars_fragment,\n  color_pars_vertex: color_pars_vertex,\n  color_vertex: color_vertex,\n  common: common,\n  cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n  defaultnormal_vertex: defaultnormal_vertex,\n  displacementmap_pars_vertex: displacementmap_pars_vertex,\n  displacementmap_vertex: displacementmap_vertex,\n  emissivemap_fragment: emissivemap_fragment,\n  emissivemap_pars_fragment: emissivemap_pars_fragment,\n  encodings_fragment: encodings_fragment,\n  encodings_pars_fragment: encodings_pars_fragment,\n  envmap_fragment: envmap_fragment,\n  envmap_pars_fragment: envmap_pars_fragment,\n  envmap_pars_vertex: envmap_pars_vertex,\n  envmap_vertex: envmap_vertex,\n  fog_vertex: fog_vertex,\n  fog_pars_vertex: fog_pars_vertex,\n  fog_fragment: fog_fragment,\n  fog_pars_fragment: fog_pars_fragment,\n  gradientmap_pars_fragment: gradientmap_pars_fragment,\n  lightmap_fragment: lightmap_fragment,\n  lightmap_pars_fragment: lightmap_pars_fragment,\n  lights_lambert_vertex: lights_lambert_vertex,\n  lights_pars_begin: lights_pars_begin,\n  lights_pars_maps: lights_pars_maps,\n  lights_phong_fragment: lights_phong_fragment,\n  lights_phong_pars_fragment: lights_phong_pars_fragment,\n  lights_physical_fragment: lights_physical_fragment,\n  lights_physical_pars_fragment: lights_physical_pars_fragment,\n  lights_fragment_begin: lights_fragment_begin,\n  lights_fragment_maps: lights_fragment_maps,\n  lights_fragment_end: lights_fragment_end,\n  logdepthbuf_fragment: logdepthbuf_fragment,\n  logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n  logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n  logdepthbuf_vertex: logdepthbuf_vertex,\n  map_fragment: map_fragment,\n  map_pars_fragment: map_pars_fragment,\n  map_particle_fragment: map_particle_fragment,\n  map_particle_pars_fragment: map_particle_pars_fragment,\n  metalnessmap_fragment: metalnessmap_fragment,\n  metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n  morphnormal_vertex: morphnormal_vertex,\n  morphtarget_pars_vertex: morphtarget_pars_vertex,\n  morphtarget_vertex: morphtarget_vertex,\n  normal_fragment_begin: normal_fragment_begin,\n  normal_fragment_maps: normal_fragment_maps,\n  normalmap_pars_fragment: normalmap_pars_fragment,\n  packing: packing,\n  premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n  project_vertex: project_vertex,\n  dithering_fragment: dithering_fragment,\n  dithering_pars_fragment: dithering_pars_fragment,\n  roughnessmap_fragment: roughnessmap_fragment,\n  roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n  shadowmap_pars_fragment: shadowmap_pars_fragment,\n  shadowmap_pars_vertex: shadowmap_pars_vertex,\n  shadowmap_vertex: shadowmap_vertex,\n  shadowmask_pars_fragment: shadowmask_pars_fragment,\n  skinbase_vertex: skinbase_vertex,\n  skinning_pars_vertex: skinning_pars_vertex,\n  skinning_vertex: skinning_vertex,\n  skinnormal_vertex: skinnormal_vertex,\n  specularmap_fragment: specularmap_fragment,\n  specularmap_pars_fragment: specularmap_pars_fragment,\n  tonemapping_fragment: tonemapping_fragment,\n  tonemapping_pars_fragment: tonemapping_pars_fragment,\n  uv_pars_fragment: uv_pars_fragment,\n  uv_pars_vertex: uv_pars_vertex,\n  uv_vertex: uv_vertex,\n  uv2_pars_fragment: uv2_pars_fragment,\n  uv2_pars_vertex: uv2_pars_vertex,\n  uv2_vertex: uv2_vertex,\n  worldpos_vertex: worldpos_vertex,\n  cube_frag: cube_frag,\n  cube_vert: cube_vert,\n  depth_frag: depth_frag,\n  depth_vert: depth_vert,\n  distanceRGBA_frag: distanceRGBA_frag,\n  distanceRGBA_vert: distanceRGBA_vert,\n  equirect_frag: equirect_frag,\n  equirect_vert: equirect_vert,\n  linedashed_frag: linedashed_frag,\n  linedashed_vert: linedashed_vert,\n  meshbasic_frag: meshbasic_frag,\n  meshbasic_vert: meshbasic_vert,\n  meshlambert_frag: meshlambert_frag,\n  meshlambert_vert: meshlambert_vert,\n  meshphong_frag: meshphong_frag,\n  meshphong_vert: meshphong_vert,\n  meshphysical_frag: meshphysical_frag,\n  meshphysical_vert: meshphysical_vert,\n  normal_frag: normal_frag,\n  normal_vert: normal_vert,\n  points_frag: points_frag,\n  points_vert: points_vert,\n  shadow_frag: shadow_frag,\n  shadow_vert: shadow_vert\n};\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n  merge: function (uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var tmp = this.clone(uniforms[u]);\n\n      for (var p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n\n    return merged;\n  },\n  clone: function (uniforms_src) {\n    var uniforms_dst = {};\n\n    for (var u in uniforms_src) {\n      uniforms_dst[u] = {};\n\n      for (var p in uniforms_src[u]) {\n        var parameter_src = uniforms_src[u][p];\n\n        if (parameter_src && (parameter_src.isColor || parameter_src.isMatrix3 || parameter_src.isMatrix4 || parameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 || parameter_src.isTexture)) {\n          uniforms_dst[u][p] = parameter_src.clone();\n        } else if (Array.isArray(parameter_src)) {\n          uniforms_dst[u][p] = parameter_src.slice();\n        } else {\n          uniforms_dst[u][p] = parameter_src;\n        }\n      }\n    }\n\n    return uniforms_dst;\n  }\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'rebeccapurple': 0x663399,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n};\n\nfunction Color(r, g, b) {\n  if (g === undefined && b === undefined) {\n    // r is THREE.Color, hex or string\n    return this.set(r);\n  }\n\n  return this.setRGB(r, g, b);\n}\n\nObject.assign(Color.prototype, {\n  isColor: true,\n  r: 1,\n  g: 1,\n  b: 1,\n  set: function (value) {\n    if (value && value.isColor) {\n      this.copy(value);\n    } else if (typeof value === 'number') {\n      this.setHex(value);\n    } else if (typeof value === 'string') {\n      this.setStyle(value);\n    }\n\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.r = scalar;\n    this.g = scalar;\n    this.b = scalar;\n    return this;\n  },\n  setHex: function (hex) {\n    hex = Math.floor(hex);\n    this.r = (hex >> 16 & 255) / 255;\n    this.g = (hex >> 8 & 255) / 255;\n    this.b = (hex & 255) / 255;\n    return this;\n  },\n  setRGB: function (r, g, b) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    return this;\n  },\n  setHSL: function () {\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n      return p;\n    }\n\n    return function setHSL(h, s, l) {\n      // h,s,l ranges are in 0.0 - 1.0\n      h = _Math.euclideanModulo(h, 1);\n      s = _Math.clamp(s, 0, 1);\n      l = _Math.clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      return this;\n    };\n  }(),\n  setStyle: function (style) {\n    function handleAlpha(string) {\n      if (string === undefined) return;\n\n      if (parseFloat(string) < 1) {\n        console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n      }\n    }\n\n    var m;\n\n    if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n      // rgb / hsl\n      var color;\n      var name = m[1];\n      var components = m[2];\n\n      switch (name) {\n        case 'rgb':\n        case 'rgba':\n          if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(255,0,0) rgba(255,0,0,0.5)\n            this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n            this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n            this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n            this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n            this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n            this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n            handleAlpha(color[5]);\n            return this;\n          }\n\n          break;\n\n        case 'hsl':\n        case 'hsla':\n          if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n            // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n            var h = parseFloat(color[1]) / 360;\n            var s = parseInt(color[2], 10) / 100;\n            var l = parseInt(color[3], 10) / 100;\n            handleAlpha(color[5]);\n            return this.setHSL(h, s, l);\n          }\n\n          break;\n      }\n    } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n      // hex color\n      var hex = m[1];\n      var size = hex.length;\n\n      if (size === 3) {\n        // #ff0\n        this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n        this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n        this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n        return this;\n      } else if (size === 6) {\n        // #ff0000\n        this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n        this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n        this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n        return this;\n      }\n    }\n\n    if (style && style.length > 0) {\n      // color keywords\n      var hex = ColorKeywords[style];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n    }\n\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this.r, this.g, this.b);\n  },\n  copy: function (color) {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n    return this;\n  },\n  copyGammaToLinear: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    this.r = Math.pow(color.r, gammaFactor);\n    this.g = Math.pow(color.g, gammaFactor);\n    this.b = Math.pow(color.b, gammaFactor);\n    return this;\n  },\n  copyLinearToGamma: function (color, gammaFactor) {\n    if (gammaFactor === undefined) gammaFactor = 2.0;\n    var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n    this.r = Math.pow(color.r, safeInverse);\n    this.g = Math.pow(color.g, safeInverse);\n    this.b = Math.pow(color.b, safeInverse);\n    return this;\n  },\n  convertGammaToLinear: function (gammaFactor) {\n    this.copyGammaToLinear(this, gammaFactor);\n    return this;\n  },\n  convertLinearToGamma: function (gammaFactor) {\n    this.copyLinearToGamma(this, gammaFactor);\n    return this;\n  },\n  copySRGBToLinear: function () {\n    function SRGBToLinear(c) {\n      return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n    }\n\n    return function copySRGBToLinear(color) {\n      this.r = SRGBToLinear(color.r);\n      this.g = SRGBToLinear(color.g);\n      this.b = SRGBToLinear(color.b);\n      return this;\n    };\n  }(),\n  copyLinearToSRGB: function () {\n    function LinearToSRGB(c) {\n      return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n    }\n\n    return function copyLinearToSRGB(color) {\n      this.r = LinearToSRGB(color.r);\n      this.g = LinearToSRGB(color.g);\n      this.b = LinearToSRGB(color.b);\n      return this;\n    };\n  }(),\n  convertSRGBToLinear: function () {\n    this.copySRGBToLinear(this);\n    return this;\n  },\n  convertLinearToSRGB: function () {\n    this.copyLinearToSRGB(this);\n    return this;\n  },\n  getHex: function () {\n    return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n  },\n  getHexString: function () {\n    return ('000000' + this.getHex().toString(16)).slice(-6);\n  },\n  getHSL: function (target) {\n    // h,s,l ranges are in 0.0 - 1.0\n    if (target === undefined) {\n      console.warn('THREE.Color: .getHSL() target is now required');\n      target = {\n        h: 0,\n        s: 0,\n        l: 0\n      };\n    }\n\n    var r = this.r,\n        g = this.g,\n        b = this.b;\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var hue, saturation;\n    var lightness = (min + max) / 2.0;\n\n    if (min === max) {\n      hue = 0;\n      saturation = 0;\n    } else {\n      var delta = max - min;\n      saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n      switch (max) {\n        case r:\n          hue = (g - b) / delta + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          hue = (b - r) / delta + 2;\n          break;\n\n        case b:\n          hue = (r - g) / delta + 4;\n          break;\n      }\n\n      hue /= 6;\n    }\n\n    target.h = hue;\n    target.s = saturation;\n    target.l = lightness;\n    return target;\n  },\n  getStyle: function () {\n    return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n  },\n  offsetHSL: function () {\n    var hsl = {};\n    return function (h, s, l) {\n      this.getHSL(hsl);\n      hsl.h += h;\n      hsl.s += s;\n      hsl.l += l;\n      this.setHSL(hsl.h, hsl.s, hsl.l);\n      return this;\n    };\n  }(),\n  add: function (color) {\n    this.r += color.r;\n    this.g += color.g;\n    this.b += color.b;\n    return this;\n  },\n  addColors: function (color1, color2) {\n    this.r = color1.r + color2.r;\n    this.g = color1.g + color2.g;\n    this.b = color1.b + color2.b;\n    return this;\n  },\n  addScalar: function (s) {\n    this.r += s;\n    this.g += s;\n    this.b += s;\n    return this;\n  },\n  sub: function (color) {\n    this.r = Math.max(0, this.r - color.r);\n    this.g = Math.max(0, this.g - color.g);\n    this.b = Math.max(0, this.b - color.b);\n    return this;\n  },\n  multiply: function (color) {\n    this.r *= color.r;\n    this.g *= color.g;\n    this.b *= color.b;\n    return this;\n  },\n  multiplyScalar: function (s) {\n    this.r *= s;\n    this.g *= s;\n    this.b *= s;\n    return this;\n  },\n  lerp: function (color, alpha) {\n    this.r += (color.r - this.r) * alpha;\n    this.g += (color.g - this.g) * alpha;\n    this.b += (color.b - this.b) * alpha;\n    return this;\n  },\n  equals: function (c) {\n    return c.r === this.r && c.g === this.g && c.b === this.b;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.r = array[offset];\n    this.g = array[offset + 1];\n    this.b = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.r;\n    array[offset + 1] = this.g;\n    array[offset + 2] = this.b;\n    return array;\n  },\n  toJSON: function () {\n    return this.getHex();\n  }\n});\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n  common: {\n    diffuse: {\n      value: new Color(0xeeeeee)\n    },\n    opacity: {\n      value: 1.0\n    },\n    map: {\n      value: null\n    },\n    uvTransform: {\n      value: new Matrix3()\n    },\n    alphaMap: {\n      value: null\n    }\n  },\n  specularmap: {\n    specularMap: {\n      value: null\n    }\n  },\n  envmap: {\n    envMap: {\n      value: null\n    },\n    flipEnvMap: {\n      value: -1\n    },\n    reflectivity: {\n      value: 1.0\n    },\n    refractionRatio: {\n      value: 0.98\n    },\n    maxMipLevel: {\n      value: 0\n    }\n  },\n  aomap: {\n    aoMap: {\n      value: null\n    },\n    aoMapIntensity: {\n      value: 1\n    }\n  },\n  lightmap: {\n    lightMap: {\n      value: null\n    },\n    lightMapIntensity: {\n      value: 1\n    }\n  },\n  emissivemap: {\n    emissiveMap: {\n      value: null\n    }\n  },\n  bumpmap: {\n    bumpMap: {\n      value: null\n    },\n    bumpScale: {\n      value: 1\n    }\n  },\n  normalmap: {\n    normalMap: {\n      value: null\n    },\n    normalScale: {\n      value: new Vector2(1, 1)\n    }\n  },\n  displacementmap: {\n    displacementMap: {\n      value: null\n    },\n    displacementScale: {\n      value: 1\n    },\n    displacementBias: {\n      value: 0\n    }\n  },\n  roughnessmap: {\n    roughnessMap: {\n      value: null\n    }\n  },\n  metalnessmap: {\n    metalnessMap: {\n      value: null\n    }\n  },\n  gradientmap: {\n    gradientMap: {\n      value: null\n    }\n  },\n  fog: {\n    fogDensity: {\n      value: 0.00025\n    },\n    fogNear: {\n      value: 1\n    },\n    fogFar: {\n      value: 2000\n    },\n    fogColor: {\n      value: new Color(0xffffff)\n    }\n  },\n  lights: {\n    ambientLightColor: {\n      value: []\n    },\n    directionalLights: {\n      value: [],\n      properties: {\n        direction: {},\n        color: {},\n        shadow: {},\n        shadowBias: {},\n        shadowRadius: {},\n        shadowMapSize: {}\n      }\n    },\n    directionalShadowMap: {\n      value: []\n    },\n    directionalShadowMatrix: {\n      value: []\n    },\n    spotLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        direction: {},\n        distance: {},\n        coneCos: {},\n        penumbraCos: {},\n        decay: {},\n        shadow: {},\n        shadowBias: {},\n        shadowRadius: {},\n        shadowMapSize: {}\n      }\n    },\n    spotShadowMap: {\n      value: []\n    },\n    spotShadowMatrix: {\n      value: []\n    },\n    pointLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        decay: {},\n        distance: {},\n        shadow: {},\n        shadowBias: {},\n        shadowRadius: {},\n        shadowMapSize: {},\n        shadowCameraNear: {},\n        shadowCameraFar: {}\n      }\n    },\n    pointShadowMap: {\n      value: []\n    },\n    pointShadowMatrix: {\n      value: []\n    },\n    hemisphereLights: {\n      value: [],\n      properties: {\n        direction: {},\n        skyColor: {},\n        groundColor: {}\n      }\n    },\n    // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n    rectAreaLights: {\n      value: [],\n      properties: {\n        color: {},\n        position: {},\n        width: {},\n        height: {}\n      }\n    }\n  },\n  points: {\n    diffuse: {\n      value: new Color(0xeeeeee)\n    },\n    opacity: {\n      value: 1.0\n    },\n    size: {\n      value: 1.0\n    },\n    scale: {\n      value: 1.0\n    },\n    map: {\n      value: null\n    },\n    uvTransform: {\n      value: new Matrix3()\n    }\n  }\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n  basic: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n    vertexShader: ShaderChunk.meshbasic_vert,\n    fragmentShader: ShaderChunk.meshbasic_frag\n  },\n  lambert: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      }\n    }]),\n    vertexShader: ShaderChunk.meshlambert_vert,\n    fragmentShader: ShaderChunk.meshlambert_frag\n  },\n  phong: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      },\n      specular: {\n        value: new Color(0x111111)\n      },\n      shininess: {\n        value: 30\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphong_vert,\n    fragmentShader: ShaderChunk.meshphong_frag\n  },\n  standard: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: new Color(0x000000)\n      },\n      roughness: {\n        value: 0.5\n      },\n      metalness: {\n        value: 0.5\n      },\n      envMapIntensity: {\n        value: 1\n      } // temporary\n\n    }]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  },\n  points: {\n    uniforms: UniformsUtils.merge([UniformsLib.points, UniformsLib.fog]),\n    vertexShader: ShaderChunk.points_vert,\n    fragmentShader: ShaderChunk.points_frag\n  },\n  dashed: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.fog, {\n      scale: {\n        value: 1\n      },\n      dashSize: {\n        value: 1\n      },\n      totalSize: {\n        value: 2\n      }\n    }]),\n    vertexShader: ShaderChunk.linedashed_vert,\n    fragmentShader: ShaderChunk.linedashed_frag\n  },\n  depth: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.displacementmap]),\n    vertexShader: ShaderChunk.depth_vert,\n    fragmentShader: ShaderChunk.depth_frag\n  },\n  normal: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.normal_vert,\n    fragmentShader: ShaderChunk.normal_frag\n  },\n\n  /* -------------------------------------------------------------------------\n  //\tCube map shader\n   ------------------------------------------------------------------------- */\n  cube: {\n    uniforms: {\n      tCube: {\n        value: null\n      },\n      tFlip: {\n        value: -1\n      },\n      opacity: {\n        value: 1.0\n      }\n    },\n    vertexShader: ShaderChunk.cube_vert,\n    fragmentShader: ShaderChunk.cube_frag\n  },\n  equirect: {\n    uniforms: {\n      tEquirect: {\n        value: null\n      }\n    },\n    vertexShader: ShaderChunk.equirect_vert,\n    fragmentShader: ShaderChunk.equirect_frag\n  },\n  distanceRGBA: {\n    uniforms: UniformsUtils.merge([UniformsLib.common, UniformsLib.displacementmap, {\n      referencePosition: {\n        value: new Vector3()\n      },\n      nearDistance: {\n        value: 1\n      },\n      farDistance: {\n        value: 1000\n      }\n    }]),\n    vertexShader: ShaderChunk.distanceRGBA_vert,\n    fragmentShader: ShaderChunk.distanceRGBA_frag\n  },\n  shadow: {\n    uniforms: UniformsUtils.merge([UniformsLib.lights, UniformsLib.fog, {\n      color: {\n        value: new Color(0x00000)\n      },\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.shadow_vert,\n    fragmentShader: ShaderChunk.shadow_frag\n  }\n};\nShaderLib.physical = {\n  uniforms: UniformsUtils.merge([ShaderLib.standard.uniforms, {\n    clearCoat: {\n      value: 0\n    },\n    clearCoatRoughness: {\n      value: 0\n    }\n  }]),\n  vertexShader: ShaderChunk.meshphysical_vert,\n  fragmentShader: ShaderChunk.meshphysical_frag\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n  var context = null;\n  var isAnimating = false;\n  var animationLoop = null;\n\n  function onAnimationFrame(time, frame) {\n    if (isAnimating === false) return;\n    animationLoop(time, frame);\n    context.requestAnimationFrame(onAnimationFrame);\n  }\n\n  return {\n    start: function () {\n      if (isAnimating === true) return;\n      if (animationLoop === null) return;\n      context.requestAnimationFrame(onAnimationFrame);\n      isAnimating = true;\n    },\n    stop: function () {\n      isAnimating = false;\n    },\n    setAnimationLoop: function (callback) {\n      animationLoop = callback;\n    },\n    setContext: function (value) {\n      context = value;\n    }\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLAttributes(gl) {\n  var buffers = new WeakMap();\n\n  function createBuffer(attribute, bufferType) {\n    var array = attribute.array;\n    var usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(bufferType, buffer);\n    gl.bufferData(bufferType, array, usage);\n    attribute.onUploadCallback();\n    var type = gl.FLOAT;\n\n    if (array instanceof Float32Array) {\n      type = gl.FLOAT;\n    } else if (array instanceof Float64Array) {\n      console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n    } else if (array instanceof Uint16Array) {\n      type = gl.UNSIGNED_SHORT;\n    } else if (array instanceof Int16Array) {\n      type = gl.SHORT;\n    } else if (array instanceof Uint32Array) {\n      type = gl.UNSIGNED_INT;\n    } else if (array instanceof Int32Array) {\n      type = gl.INT;\n    } else if (array instanceof Int8Array) {\n      type = gl.BYTE;\n    } else if (array instanceof Uint8Array) {\n      type = gl.UNSIGNED_BYTE;\n    }\n\n    return {\n      buffer: buffer,\n      type: type,\n      bytesPerElement: array.BYTES_PER_ELEMENT,\n      version: attribute.version\n    };\n  }\n\n  function updateBuffer(buffer, attribute, bufferType) {\n    var array = attribute.array;\n    var updateRange = attribute.updateRange;\n    gl.bindBuffer(bufferType, buffer);\n\n    if (attribute.dynamic === false) {\n      gl.bufferData(bufferType, array, gl.STATIC_DRAW);\n    } else if (updateRange.count === -1) {\n      // Not using update ranges\n      gl.bufferSubData(bufferType, 0, array);\n    } else if (updateRange.count === 0) {\n      console.error('THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.');\n    } else {\n      gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n      updateRange.count = -1; // reset range\n    }\n  } //\n\n\n  function get(attribute) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    return buffers.get(attribute);\n  }\n\n  function remove(attribute) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    var data = buffers.get(attribute);\n\n    if (data) {\n      gl.deleteBuffer(data.buffer);\n      buffers.delete(attribute);\n    }\n  }\n\n  function update(attribute, bufferType) {\n    if (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n    var data = buffers.get(attribute);\n\n    if (data === undefined) {\n      buffers.set(attribute, createBuffer(attribute, bufferType));\n    } else if (data.version < attribute.version) {\n      updateBuffer(data.buffer, attribute, bufferType);\n      data.version = attribute.version;\n    }\n  }\n\n  return {\n    get: get,\n    remove: remove,\n    update: update\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\n\nfunction Euler(x, y, z, order) {\n  this._x = x || 0;\n  this._y = y || 0;\n  this._z = z || 0;\n  this._order = order || Euler.DefaultOrder;\n}\n\nEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\nEuler.DefaultOrder = 'XYZ';\nObject.defineProperties(Euler.prototype, {\n  x: {\n    get: function () {\n      return this._x;\n    },\n    set: function (value) {\n      this._x = value;\n      this.onChangeCallback();\n    }\n  },\n  y: {\n    get: function () {\n      return this._y;\n    },\n    set: function (value) {\n      this._y = value;\n      this.onChangeCallback();\n    }\n  },\n  z: {\n    get: function () {\n      return this._z;\n    },\n    set: function (value) {\n      this._z = value;\n      this.onChangeCallback();\n    }\n  },\n  order: {\n    get: function () {\n      return this._order;\n    },\n    set: function (value) {\n      this._order = value;\n      this.onChangeCallback();\n    }\n  }\n});\nObject.assign(Euler.prototype, {\n  isEuler: true,\n  set: function (x, y, z, order) {\n    this._x = x;\n    this._y = y;\n    this._z = z;\n    this._order = order || this._order;\n    this.onChangeCallback();\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this._x, this._y, this._z, this._order);\n  },\n  copy: function (euler) {\n    this._x = euler._x;\n    this._y = euler._y;\n    this._z = euler._z;\n    this._order = euler._order;\n    this.onChangeCallback();\n    return this;\n  },\n  setFromRotationMatrix: function (m, order, update) {\n    var clamp = _Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    var te = m.elements;\n    var m11 = te[0],\n        m12 = te[4],\n        m13 = te[8];\n    var m21 = te[1],\n        m22 = te[5],\n        m23 = te[9];\n    var m31 = te[2],\n        m32 = te[6],\n        m33 = te[10];\n    order = order || this._order;\n\n    if (order === 'XYZ') {\n      this._y = Math.asin(clamp(m13, -1, 1));\n\n      if (Math.abs(m13) < 0.99999) {\n        this._x = Math.atan2(-m23, m33);\n        this._z = Math.atan2(-m12, m11);\n      } else {\n        this._x = Math.atan2(m32, m22);\n        this._z = 0;\n      }\n    } else if (order === 'YXZ') {\n      this._x = Math.asin(-clamp(m23, -1, 1));\n\n      if (Math.abs(m23) < 0.99999) {\n        this._y = Math.atan2(m13, m33);\n        this._z = Math.atan2(m21, m22);\n      } else {\n        this._y = Math.atan2(-m31, m11);\n        this._z = 0;\n      }\n    } else if (order === 'ZXY') {\n      this._x = Math.asin(clamp(m32, -1, 1));\n\n      if (Math.abs(m32) < 0.99999) {\n        this._y = Math.atan2(-m31, m33);\n        this._z = Math.atan2(-m12, m22);\n      } else {\n        this._y = 0;\n        this._z = Math.atan2(m21, m11);\n      }\n    } else if (order === 'ZYX') {\n      this._y = Math.asin(-clamp(m31, -1, 1));\n\n      if (Math.abs(m31) < 0.99999) {\n        this._x = Math.atan2(m32, m33);\n        this._z = Math.atan2(m21, m11);\n      } else {\n        this._x = 0;\n        this._z = Math.atan2(-m12, m22);\n      }\n    } else if (order === 'YZX') {\n      this._z = Math.asin(clamp(m21, -1, 1));\n\n      if (Math.abs(m21) < 0.99999) {\n        this._x = Math.atan2(-m23, m22);\n        this._y = Math.atan2(-m31, m11);\n      } else {\n        this._x = 0;\n        this._y = Math.atan2(m13, m33);\n      }\n    } else if (order === 'XZY') {\n      this._z = Math.asin(-clamp(m12, -1, 1));\n\n      if (Math.abs(m12) < 0.99999) {\n        this._x = Math.atan2(m32, m22);\n        this._y = Math.atan2(m13, m11);\n      } else {\n        this._x = Math.atan2(-m23, m33);\n        this._y = 0;\n      }\n    } else {\n      console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n    }\n\n    this._order = order;\n    if (update !== false) this.onChangeCallback();\n    return this;\n  },\n  setFromQuaternion: function () {\n    var matrix = new Matrix4();\n    return function setFromQuaternion(q, order, update) {\n      matrix.makeRotationFromQuaternion(q);\n      return this.setFromRotationMatrix(matrix, order, update);\n    };\n  }(),\n  setFromVector3: function (v, order) {\n    return this.set(v.x, v.y, v.z, order || this._order);\n  },\n  reorder: function () {\n    // WARNING: this discards revolution information -bhouston\n    var q = new Quaternion();\n    return function reorder(newOrder) {\n      q.setFromEuler(this);\n      return this.setFromQuaternion(q, newOrder);\n    };\n  }(),\n  equals: function (euler) {\n    return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n  },\n  fromArray: function (array) {\n    this._x = array[0];\n    this._y = array[1];\n    this._z = array[2];\n    if (array[3] !== undefined) this._order = array[3];\n    this.onChangeCallback();\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this._x;\n    array[offset + 1] = this._y;\n    array[offset + 2] = this._z;\n    array[offset + 3] = this._order;\n    return array;\n  },\n  toVector3: function (optionalResult) {\n    if (optionalResult) {\n      return optionalResult.set(this._x, this._y, this._z);\n    } else {\n      return new Vector3(this._x, this._y, this._z);\n    }\n  },\n  onChange: function (callback) {\n    this.onChangeCallback = callback;\n    return this;\n  },\n  onChangeCallback: function () {}\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n  this.mask = 1 | 0;\n}\n\nObject.assign(Layers.prototype, {\n  set: function (channel) {\n    this.mask = 1 << channel | 0;\n  },\n  enable: function (channel) {\n    this.mask |= 1 << channel | 0;\n  },\n  toggle: function (channel) {\n    this.mask ^= 1 << channel | 0;\n  },\n  disable: function (channel) {\n    this.mask &= ~(1 << channel | 0);\n  },\n  test: function (layers) {\n    return (this.mask & layers.mask) !== 0;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n  Object.defineProperty(this, 'id', {\n    value: object3DId++\n  });\n  this.uuid = _Math.generateUUID();\n  this.name = '';\n  this.type = 'Object3D';\n  this.parent = null;\n  this.children = [];\n  this.up = Object3D.DefaultUp.clone();\n  var position = new Vector3();\n  var rotation = new Euler();\n  var quaternion = new Quaternion();\n  var scale = new Vector3(1, 1, 1);\n\n  function onRotationChange() {\n    quaternion.setFromEuler(rotation, false);\n  }\n\n  function onQuaternionChange() {\n    rotation.setFromQuaternion(quaternion, undefined, false);\n  }\n\n  rotation.onChange(onRotationChange);\n  quaternion.onChange(onQuaternionChange);\n  Object.defineProperties(this, {\n    position: {\n      enumerable: true,\n      value: position\n    },\n    rotation: {\n      enumerable: true,\n      value: rotation\n    },\n    quaternion: {\n      enumerable: true,\n      value: quaternion\n    },\n    scale: {\n      enumerable: true,\n      value: scale\n    },\n    modelViewMatrix: {\n      value: new Matrix4()\n    },\n    normalMatrix: {\n      value: new Matrix3()\n    }\n  });\n  this.matrix = new Matrix4();\n  this.matrixWorld = new Matrix4();\n  this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n  this.matrixWorldNeedsUpdate = false;\n  this.layers = new Layers();\n  this.visible = true;\n  this.castShadow = false;\n  this.receiveShadow = false;\n  this.frustumCulled = true;\n  this.renderOrder = 0;\n  this.userData = {};\n}\n\nObject3D.DefaultUp = new Vector3(0, 1, 0);\nObject3D.DefaultMatrixAutoUpdate = true;\nObject3D.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n  constructor: Object3D,\n  isObject3D: true,\n  onBeforeRender: function () {},\n  onAfterRender: function () {},\n  applyMatrix: function (matrix) {\n    this.matrix.multiplyMatrices(matrix, this.matrix);\n    this.matrix.decompose(this.position, this.quaternion, this.scale);\n  },\n  applyQuaternion: function (q) {\n    this.quaternion.premultiply(q);\n    return this;\n  },\n  setRotationFromAxisAngle: function (axis, angle) {\n    // assumes axis is normalized\n    this.quaternion.setFromAxisAngle(axis, angle);\n  },\n  setRotationFromEuler: function (euler) {\n    this.quaternion.setFromEuler(euler, true);\n  },\n  setRotationFromMatrix: function (m) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    this.quaternion.setFromRotationMatrix(m);\n  },\n  setRotationFromQuaternion: function (q) {\n    // assumes q is normalized\n    this.quaternion.copy(q);\n  },\n  rotateOnAxis: function () {\n    // rotate object on axis in object space\n    // axis is assumed to be normalized\n    var q1 = new Quaternion();\n    return function rotateOnAxis(axis, angle) {\n      q1.setFromAxisAngle(axis, angle);\n      this.quaternion.multiply(q1);\n      return this;\n    };\n  }(),\n  rotateOnWorldAxis: function () {\n    // rotate object on axis in world space\n    // axis is assumed to be normalized\n    // method assumes no rotated parent\n    var q1 = new Quaternion();\n    return function rotateOnWorldAxis(axis, angle) {\n      q1.setFromAxisAngle(axis, angle);\n      this.quaternion.premultiply(q1);\n      return this;\n    };\n  }(),\n  rotateX: function () {\n    var v1 = new Vector3(1, 0, 0);\n    return function rotateX(angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateY: function () {\n    var v1 = new Vector3(0, 1, 0);\n    return function rotateY(angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  rotateZ: function () {\n    var v1 = new Vector3(0, 0, 1);\n    return function rotateZ(angle) {\n      return this.rotateOnAxis(v1, angle);\n    };\n  }(),\n  translateOnAxis: function () {\n    // translate object by distance along axis in object space\n    // axis is assumed to be normalized\n    var v1 = new Vector3();\n    return function translateOnAxis(axis, distance) {\n      v1.copy(axis).applyQuaternion(this.quaternion);\n      this.position.add(v1.multiplyScalar(distance));\n      return this;\n    };\n  }(),\n  translateX: function () {\n    var v1 = new Vector3(1, 0, 0);\n    return function translateX(distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateY: function () {\n    var v1 = new Vector3(0, 1, 0);\n    return function translateY(distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  translateZ: function () {\n    var v1 = new Vector3(0, 0, 1);\n    return function translateZ(distance) {\n      return this.translateOnAxis(v1, distance);\n    };\n  }(),\n  localToWorld: function (vector) {\n    return vector.applyMatrix4(this.matrixWorld);\n  },\n  worldToLocal: function () {\n    var m1 = new Matrix4();\n    return function worldToLocal(vector) {\n      return vector.applyMatrix4(m1.getInverse(this.matrixWorld));\n    };\n  }(),\n  lookAt: function () {\n    // This method does not support objects with rotated and/or translated parent(s)\n    var m1 = new Matrix4();\n    var vector = new Vector3();\n    return function lookAt(x, y, z) {\n      if (x.isVector3) {\n        vector.copy(x);\n      } else {\n        vector.set(x, y, z);\n      }\n\n      if (this.isCamera) {\n        m1.lookAt(this.position, vector, this.up);\n      } else {\n        m1.lookAt(vector, this.position, this.up);\n      }\n\n      this.quaternion.setFromRotationMatrix(m1);\n    };\n  }(),\n  add: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.add(arguments[i]);\n      }\n\n      return this;\n    }\n\n    if (object === this) {\n      console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n      return this;\n    }\n\n    if (object && object.isObject3D) {\n      if (object.parent !== null) {\n        object.parent.remove(object);\n      }\n\n      object.parent = this;\n      object.dispatchEvent({\n        type: 'added'\n      });\n      this.children.push(object);\n    } else {\n      console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n    }\n\n    return this;\n  },\n  remove: function (object) {\n    if (arguments.length > 1) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.remove(arguments[i]);\n      }\n\n      return this;\n    }\n\n    var index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = null;\n      object.dispatchEvent({\n        type: 'removed'\n      });\n      this.children.splice(index, 1);\n    }\n\n    return this;\n  },\n  getObjectById: function (id) {\n    return this.getObjectByProperty('id', id);\n  },\n  getObjectByName: function (name) {\n    return this.getObjectByProperty('name', name);\n  },\n  getObjectByProperty: function (name, value) {\n    if (this[name] === value) return this;\n\n    for (var i = 0, l = this.children.length; i < l; i++) {\n      var child = this.children[i];\n      var object = child.getObjectByProperty(name, value);\n\n      if (object !== undefined) {\n        return object;\n      }\n    }\n\n    return undefined;\n  },\n  getWorldPosition: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Object3D: .getWorldPosition() target is now required');\n      target = new Vector3();\n    }\n\n    this.updateMatrixWorld(true);\n    return target.setFromMatrixPosition(this.matrixWorld);\n  },\n  getWorldQuaternion: function () {\n    var position = new Vector3();\n    var scale = new Vector3();\n    return function getWorldQuaternion(target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');\n        target = new Quaternion();\n      }\n\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, target, scale);\n      return target;\n    };\n  }(),\n  getWorldScale: function () {\n    var position = new Vector3();\n    var quaternion = new Quaternion();\n    return function getWorldScale(target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldScale() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(position, quaternion, target);\n      return target;\n    };\n  }(),\n  getWorldDirection: function () {\n    var quaternion = new Quaternion();\n    return function getWorldDirection(target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldDirection() target is now required');\n        target = new Vector3();\n      }\n\n      this.getWorldQuaternion(quaternion);\n      return target.set(0, 0, 1).applyQuaternion(quaternion);\n    };\n  }(),\n  raycast: function () {},\n  traverse: function (callback) {\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverse(callback);\n    }\n  },\n  traverseVisible: function (callback) {\n    if (this.visible === false) return;\n    callback(this);\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].traverseVisible(callback);\n    }\n  },\n  traverseAncestors: function (callback) {\n    var parent = this.parent;\n\n    if (parent !== null) {\n      callback(parent);\n      parent.traverseAncestors(callback);\n    }\n  },\n  updateMatrix: function () {\n    this.matrix.compose(this.position, this.quaternion, this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  },\n  updateMatrixWorld: function (force) {\n    if (this.matrixAutoUpdate) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate || force) {\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      }\n\n      this.matrixWorldNeedsUpdate = false;\n      force = true;\n    } // update children\n\n\n    var children = this.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      children[i].updateMatrixWorld(force);\n    }\n  },\n  toJSON: function (meta) {\n    // meta is a string when called from JSON.stringify\n    var isRootObject = meta === undefined || typeof meta === 'string';\n    var output = {}; // meta is a hash used to collect geometries, materials.\n    // not providing it implies that this is the root object\n    // being serialized.\n\n    if (isRootObject) {\n      // initialize meta obj\n      meta = {\n        geometries: {},\n        materials: {},\n        textures: {},\n        images: {},\n        shapes: {}\n      };\n      output.metadata = {\n        version: 4.5,\n        type: 'Object',\n        generator: 'Object3D.toJSON'\n      };\n    } // standard Object3D serialization\n\n\n    var object = {};\n    object.uuid = this.uuid;\n    object.type = this.type;\n    if (this.name !== '') object.name = this.name;\n    if (this.castShadow === true) object.castShadow = true;\n    if (this.receiveShadow === true) object.receiveShadow = true;\n    if (this.visible === false) object.visible = false;\n    if (this.frustumCulled === false) object.frustumCulled = false;\n    if (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n    if (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n    object.layers = this.layers.mask;\n    object.matrix = this.matrix.toArray();\n    if (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; //\n\n    function serialize(library, element) {\n      if (library[element.uuid] === undefined) {\n        library[element.uuid] = element.toJSON(meta);\n      }\n\n      return element.uuid;\n    }\n\n    if (this.geometry !== undefined) {\n      object.geometry = serialize(meta.geometries, this.geometry);\n      var parameters = this.geometry.parameters;\n\n      if (parameters !== undefined && parameters.shapes !== undefined) {\n        var shapes = parameters.shapes;\n\n        if (Array.isArray(shapes)) {\n          for (var i = 0, l = shapes.length; i < l; i++) {\n            var shape = shapes[i];\n            serialize(meta.shapes, shape);\n          }\n        } else {\n          serialize(meta.shapes, shapes);\n        }\n      }\n    }\n\n    if (this.material !== undefined) {\n      if (Array.isArray(this.material)) {\n        var uuids = [];\n\n        for (var i = 0, l = this.material.length; i < l; i++) {\n          uuids.push(serialize(meta.materials, this.material[i]));\n        }\n\n        object.material = uuids;\n      } else {\n        object.material = serialize(meta.materials, this.material);\n      }\n    } //\n\n\n    if (this.children.length > 0) {\n      object.children = [];\n\n      for (var i = 0; i < this.children.length; i++) {\n        object.children.push(this.children[i].toJSON(meta).object);\n      }\n    }\n\n    if (isRootObject) {\n      var geometries = extractFromCache(meta.geometries);\n      var materials = extractFromCache(meta.materials);\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      var shapes = extractFromCache(meta.shapes);\n      if (geometries.length > 0) output.geometries = geometries;\n      if (materials.length > 0) output.materials = materials;\n      if (textures.length > 0) output.textures = textures;\n      if (images.length > 0) output.images = images;\n      if (shapes.length > 0) output.shapes = shapes;\n    }\n\n    output.object = object;\n    return output; // extract data from the cache hash\n    // remove metadata on each item\n    // and return as array\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n  },\n  clone: function (recursive) {\n    return new this.constructor().copy(this, recursive);\n  },\n  copy: function (source, recursive) {\n    if (recursive === undefined) recursive = true;\n    this.name = source.name;\n    this.up.copy(source.up);\n    this.position.copy(source.position);\n    this.quaternion.copy(source.quaternion);\n    this.scale.copy(source.scale);\n    this.matrix.copy(source.matrix);\n    this.matrixWorld.copy(source.matrixWorld);\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n    this.layers.mask = source.layers.mask;\n    this.visible = source.visible;\n    this.castShadow = source.castShadow;\n    this.receiveShadow = source.receiveShadow;\n    this.frustumCulled = source.frustumCulled;\n    this.renderOrder = source.renderOrder;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n\n    if (recursive === true) {\n      for (var i = 0; i < source.children.length; i++) {\n        var child = source.children[i];\n        this.add(child.clone());\n      }\n    }\n\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n  Object3D.call(this);\n  this.type = 'Camera';\n  this.matrixWorldInverse = new Matrix4();\n  this.projectionMatrix = new Matrix4();\n}\n\nCamera.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Camera,\n  isCamera: true,\n  copy: function (source, recursive) {\n    Object3D.prototype.copy.call(this, source, recursive);\n    this.matrixWorldInverse.copy(source.matrixWorldInverse);\n    this.projectionMatrix.copy(source.projectionMatrix);\n    return this;\n  },\n  getWorldDirection: function () {\n    var quaternion = new Quaternion();\n    return function getWorldDirection(target) {\n      if (target === undefined) {\n        console.warn('THREE.Camera: .getWorldDirection() target is now required');\n        target = new Vector3();\n      }\n\n      this.getWorldQuaternion(quaternion);\n      return target.set(0, 0, -1).applyQuaternion(quaternion);\n    };\n  }(),\n  updateMatrixWorld: function (force) {\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n    this.matrixWorldInverse.getInverse(this.matrixWorld);\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera(left, right, top, bottom, near, far) {\n  Camera.call(this);\n  this.type = 'OrthographicCamera';\n  this.zoom = 1;\n  this.view = null;\n  this.left = left;\n  this.right = right;\n  this.top = top;\n  this.bottom = bottom;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.updateProjectionMatrix();\n}\n\nOrthographicCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n  constructor: OrthographicCamera,\n  isOrthographicCamera: true,\n  copy: function (source, recursive) {\n    Camera.prototype.copy.call(this, source, recursive);\n    this.left = source.left;\n    this.right = source.right;\n    this.top = source.top;\n    this.bottom = source.bottom;\n    this.near = source.near;\n    this.far = source.far;\n    this.zoom = source.zoom;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    return this;\n  },\n  setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n    if (this.view === null) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1\n      };\n    }\n\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n    this.updateProjectionMatrix();\n  },\n  clearViewOffset: function () {\n    if (this.view !== null) {\n      this.view.enabled = false;\n    }\n\n    this.updateProjectionMatrix();\n  },\n  updateProjectionMatrix: function () {\n    var dx = (this.right - this.left) / (2 * this.zoom);\n    var dy = (this.top - this.bottom) / (2 * this.zoom);\n    var cx = (this.right + this.left) / 2;\n    var cy = (this.top + this.bottom) / 2;\n    var left = cx - dx;\n    var right = cx + dx;\n    var top = cy + dy;\n    var bottom = cy - dy;\n\n    if (this.view !== null && this.view.enabled) {\n      var zoomW = this.zoom / (this.view.width / this.view.fullWidth);\n      var zoomH = this.zoom / (this.view.height / this.view.fullHeight);\n      var scaleW = (this.right - this.left) / this.view.width;\n      var scaleH = (this.top - this.bottom) / this.view.height;\n      left += scaleW * (this.view.offsetX / zoomW);\n      right = left + scaleW * (this.view.width / zoomW);\n      top -= scaleH * (this.view.offsetY / zoomH);\n      bottom = top - scaleH * (this.view.height / zoomH);\n    }\n\n    this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n  },\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    data.object.zoom = this.zoom;\n    data.object.left = this.left;\n    data.object.right = this.right;\n    data.object.top = this.top;\n    data.object.bottom = this.bottom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    return data;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3(a, b, c, normal, color, materialIndex) {\n  this.a = a;\n  this.b = b;\n  this.c = c;\n  this.normal = normal && normal.isVector3 ? normal : new Vector3();\n  this.vertexNormals = Array.isArray(normal) ? normal : [];\n  this.color = color && color.isColor ? color : new Color();\n  this.vertexColors = Array.isArray(color) ? color : [];\n  this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n}\n\nObject.assign(Face3.prototype, {\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.a = source.a;\n    this.b = source.b;\n    this.c = source.c;\n    this.normal.copy(source.normal);\n    this.color.copy(source.color);\n    this.materialIndex = source.materialIndex;\n\n    for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n      this.vertexNormals[i] = source.vertexNormals[i].clone();\n    }\n\n    for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n      this.vertexColors[i] = source.vertexColors[i].clone();\n    }\n\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n  Object.defineProperty(this, 'id', {\n    value: geometryId += 2\n  });\n  this.uuid = _Math.generateUUID();\n  this.name = '';\n  this.type = 'Geometry';\n  this.vertices = [];\n  this.colors = [];\n  this.faces = [];\n  this.faceVertexUvs = [[]];\n  this.morphTargets = [];\n  this.morphNormals = [];\n  this.skinWeights = [];\n  this.skinIndices = [];\n  this.lineDistances = [];\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.elementsNeedUpdate = false;\n  this.verticesNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.lineDistancesNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n}\n\nGeometry.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n  constructor: Geometry,\n  isGeometry: true,\n  applyMatrix: function (matrix) {\n    var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\n    for (var i = 0, il = this.vertices.length; i < il; i++) {\n      var vertex = this.vertices[i];\n      vertex.applyMatrix4(matrix);\n    }\n\n    for (var i = 0, il = this.faces.length; i < il; i++) {\n      var face = this.faces[i];\n      face.normal.applyMatrix3(normalMatrix).normalize();\n\n      for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n        face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n      }\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    this.verticesNeedUpdate = true;\n    this.normalsNeedUpdate = true;\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1 = new Matrix4();\n    return function rotateX(angle) {\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1 = new Matrix4();\n    return function rotateY(angle) {\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1 = new Matrix4();\n    return function rotateZ(angle) {\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1 = new Matrix4();\n    return function translate(x, y, z) {\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1 = new Matrix4();\n    return function scale(x, y, z) {\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj = new Object3D();\n    return function lookAt(vector) {\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  fromBufferGeometry: function (geometry) {\n    var scope = this;\n    var indices = geometry.index !== null ? geometry.index.array : undefined;\n    var attributes = geometry.attributes;\n    var positions = attributes.position.array;\n    var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n    var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n    var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n    var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n    if (uvs2 !== undefined) this.faceVertexUvs[1] = [];\n    var tempNormals = [];\n    var tempUVs = [];\n    var tempUVs2 = [];\n\n    for (var i = 0, j = 0; i < positions.length; i += 3, j += 2) {\n      scope.vertices.push(new Vector3(positions[i], positions[i + 1], positions[i + 2]));\n\n      if (normals !== undefined) {\n        tempNormals.push(new Vector3(normals[i], normals[i + 1], normals[i + 2]));\n      }\n\n      if (colors !== undefined) {\n        scope.colors.push(new Color(colors[i], colors[i + 1], colors[i + 2]));\n      }\n\n      if (uvs !== undefined) {\n        tempUVs.push(new Vector2(uvs[j], uvs[j + 1]));\n      }\n\n      if (uvs2 !== undefined) {\n        tempUVs2.push(new Vector2(uvs2[j], uvs2[j + 1]));\n      }\n    }\n\n    function addFace(a, b, c, materialIndex) {\n      var vertexNormals = normals !== undefined ? [tempNormals[a].clone(), tempNormals[b].clone(), tempNormals[c].clone()] : [];\n      var vertexColors = colors !== undefined ? [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()] : [];\n      var face = new Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n      scope.faces.push(face);\n\n      if (uvs !== undefined) {\n        scope.faceVertexUvs[0].push([tempUVs[a].clone(), tempUVs[b].clone(), tempUVs[c].clone()]);\n      }\n\n      if (uvs2 !== undefined) {\n        scope.faceVertexUvs[1].push([tempUVs2[a].clone(), tempUVs2[b].clone(), tempUVs2[c].clone()]);\n      }\n    }\n\n    var groups = geometry.groups;\n\n    if (groups.length > 0) {\n      for (var i = 0; i < groups.length; i++) {\n        var group = groups[i];\n        var start = group.start;\n        var count = group.count;\n\n        for (var j = start, jl = start + count; j < jl; j += 3) {\n          if (indices !== undefined) {\n            addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n          } else {\n            addFace(j, j + 1, j + 2, group.materialIndex);\n          }\n        }\n      }\n    } else {\n      if (indices !== undefined) {\n        for (var i = 0; i < indices.length; i += 3) {\n          addFace(indices[i], indices[i + 1], indices[i + 2]);\n        }\n      } else {\n        for (var i = 0; i < positions.length / 3; i += 3) {\n          addFace(i, i + 1, i + 2);\n        }\n      }\n    }\n\n    this.computeFaceNormals();\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    return this;\n  },\n  center: function () {\n    var offset = new Vector3();\n    return function center() {\n      this.computeBoundingBox();\n      this.boundingBox.getCenter(offset).negate();\n      this.translate(offset.x, offset.y, offset.z);\n      return this;\n    };\n  }(),\n  normalize: function () {\n    this.computeBoundingSphere();\n    var center = this.boundingSphere.center;\n    var radius = this.boundingSphere.radius;\n    var s = radius === 0 ? 1 : 1.0 / radius;\n    var matrix = new Matrix4();\n    matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n    this.applyMatrix(matrix);\n    return this;\n  },\n  computeFaceNormals: function () {\n    var cb = new Vector3(),\n        ab = new Vector3();\n\n    for (var f = 0, fl = this.faces.length; f < fl; f++) {\n      var face = this.faces[f];\n      var vA = this.vertices[face.a];\n      var vB = this.vertices[face.b];\n      var vC = this.vertices[face.c];\n      cb.subVectors(vC, vB);\n      ab.subVectors(vA, vB);\n      cb.cross(ab);\n      cb.normalize();\n      face.normal.copy(cb);\n    }\n  },\n  computeVertexNormals: function (areaWeighted) {\n    if (areaWeighted === undefined) areaWeighted = true;\n    var v, vl, f, fl, face, vertices;\n    vertices = new Array(this.vertices.length);\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v] = new Vector3();\n    }\n\n    if (areaWeighted) {\n      // vertex normals weighted by triangle areas\n      // http://www.iquilezles.org/www/articles/normals/normals.htm\n      var vA, vB, vC;\n      var cb = new Vector3(),\n          ab = new Vector3();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vA = this.vertices[face.a];\n        vB = this.vertices[face.b];\n        vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        vertices[face.a].add(cb);\n        vertices[face.b].add(cb);\n        vertices[face.c].add(cb);\n      }\n    } else {\n      this.computeFaceNormals();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        vertices[face.a].add(face.normal);\n        vertices[face.b].add(face.normal);\n        vertices[face.c].add(face.normal);\n      }\n    }\n\n    for (v = 0, vl = this.vertices.length; v < vl; v++) {\n      vertices[v].normalize();\n    }\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        vertexNormals[0].copy(vertices[face.a]);\n        vertexNormals[1].copy(vertices[face.b]);\n        vertexNormals[2].copy(vertices[face.c]);\n      } else {\n        vertexNormals[0] = vertices[face.a].clone();\n        vertexNormals[1] = vertices[face.b].clone();\n        vertexNormals[2] = vertices[face.c].clone();\n      }\n    }\n\n    if (this.faces.length > 0) {\n      this.normalsNeedUpdate = true;\n    }\n  },\n  computeFlatVertexNormals: function () {\n    var f, fl, face;\n    this.computeFaceNormals();\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        vertexNormals[0].copy(face.normal);\n        vertexNormals[1].copy(face.normal);\n        vertexNormals[2].copy(face.normal);\n      } else {\n        vertexNormals[0] = face.normal.clone();\n        vertexNormals[1] = face.normal.clone();\n        vertexNormals[2] = face.normal.clone();\n      }\n    }\n\n    if (this.faces.length > 0) {\n      this.normalsNeedUpdate = true;\n    }\n  },\n  computeMorphNormals: function () {\n    var i, il, f, fl, face; // save original normals\n    // - create temp variables on first access\n    //   otherwise just copy (for faster repeated calls)\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n\n      if (!face.__originalFaceNormal) {\n        face.__originalFaceNormal = face.normal.clone();\n      } else {\n        face.__originalFaceNormal.copy(face.normal);\n      }\n\n      if (!face.__originalVertexNormals) face.__originalVertexNormals = [];\n\n      for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n        if (!face.__originalVertexNormals[i]) {\n          face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n        } else {\n          face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n        }\n      }\n    } // use temp geometry to compute face and vertex normals for each morph\n\n\n    var tmpGeo = new Geometry();\n    tmpGeo.faces = this.faces;\n\n    for (i = 0, il = this.morphTargets.length; i < il; i++) {\n      // create on first access\n      if (!this.morphNormals[i]) {\n        this.morphNormals[i] = {};\n        this.morphNormals[i].faceNormals = [];\n        this.morphNormals[i].vertexNormals = [];\n        var dstNormalsFace = this.morphNormals[i].faceNormals;\n        var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          faceNormal = new Vector3();\n          vertexNormals = {\n            a: new Vector3(),\n            b: new Vector3(),\n            c: new Vector3()\n          };\n          dstNormalsFace.push(faceNormal);\n          dstNormalsVertex.push(vertexNormals);\n        }\n      }\n\n      var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n      tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n      tmpGeo.computeFaceNormals();\n      tmpGeo.computeVertexNormals(); // store morph normals\n\n      var faceNormal, vertexNormals;\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        faceNormal = morphNormals.faceNormals[f];\n        vertexNormals = morphNormals.vertexNormals[f];\n        faceNormal.copy(face.normal);\n        vertexNormals.a.copy(face.vertexNormals[0]);\n        vertexNormals.b.copy(face.vertexNormals[1]);\n        vertexNormals.c.copy(face.vertexNormals[2]);\n      }\n    } // restore original normals\n\n\n    for (f = 0, fl = this.faces.length; f < fl; f++) {\n      face = this.faces[f];\n      face.normal = face.__originalFaceNormal;\n      face.vertexNormals = face.__originalVertexNormals;\n    }\n  },\n  computeBoundingBox: function () {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n\n    this.boundingBox.setFromPoints(this.vertices);\n  },\n  computeBoundingSphere: function () {\n    if (this.boundingSphere === null) {\n      this.boundingSphere = new Sphere();\n    }\n\n    this.boundingSphere.setFromPoints(this.vertices);\n  },\n  merge: function (geometry, matrix, materialIndexOffset) {\n    if (!(geometry && geometry.isGeometry)) {\n      console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n      return;\n    }\n\n    var normalMatrix,\n        vertexOffset = this.vertices.length,\n        vertices1 = this.vertices,\n        vertices2 = geometry.vertices,\n        faces1 = this.faces,\n        faces2 = geometry.faces,\n        uvs1 = this.faceVertexUvs[0],\n        uvs2 = geometry.faceVertexUvs[0],\n        colors1 = this.colors,\n        colors2 = geometry.colors;\n    if (materialIndexOffset === undefined) materialIndexOffset = 0;\n\n    if (matrix !== undefined) {\n      normalMatrix = new Matrix3().getNormalMatrix(matrix);\n    } // vertices\n\n\n    for (var i = 0, il = vertices2.length; i < il; i++) {\n      var vertex = vertices2[i];\n      var vertexCopy = vertex.clone();\n      if (matrix !== undefined) vertexCopy.applyMatrix4(matrix);\n      vertices1.push(vertexCopy);\n    } // colors\n\n\n    for (var i = 0, il = colors2.length; i < il; i++) {\n      colors1.push(colors2[i].clone());\n    } // faces\n\n\n    for (i = 0, il = faces2.length; i < il; i++) {\n      var face = faces2[i],\n          faceCopy,\n          normal,\n          color,\n          faceVertexNormals = face.vertexNormals,\n          faceVertexColors = face.vertexColors;\n      faceCopy = new Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n      faceCopy.normal.copy(face.normal);\n\n      if (normalMatrix !== undefined) {\n        faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n      }\n\n      for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n        normal = faceVertexNormals[j].clone();\n\n        if (normalMatrix !== undefined) {\n          normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        faceCopy.vertexNormals.push(normal);\n      }\n\n      faceCopy.color.copy(face.color);\n\n      for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n        color = faceVertexColors[j];\n        faceCopy.vertexColors.push(color.clone());\n      }\n\n      faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n      faces1.push(faceCopy);\n    } // uvs\n\n\n    for (i = 0, il = uvs2.length; i < il; i++) {\n      var uv = uvs2[i],\n          uvCopy = [];\n\n      if (uv === undefined) {\n        continue;\n      }\n\n      for (var j = 0, jl = uv.length; j < jl; j++) {\n        uvCopy.push(uv[j].clone());\n      }\n\n      uvs1.push(uvCopy);\n    }\n  },\n  mergeMesh: function (mesh) {\n    if (!(mesh && mesh.isMesh)) {\n      console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n      return;\n    }\n\n    if (mesh.matrixAutoUpdate) mesh.updateMatrix();\n    this.merge(mesh.geometry, mesh.matrix);\n  },\n\n  /*\n   * Checks for duplicate vertices with hashmap.\n   * Duplicated vertices are removed\n   * and faces' vertices are updated.\n   */\n  mergeVertices: function () {\n    var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n    var unique = [],\n        changes = [];\n    var v, key;\n    var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n    var precision = Math.pow(10, precisionPoints);\n    var i, il, face;\n    var indices, j, jl;\n\n    for (i = 0, il = this.vertices.length; i < il; i++) {\n      v = this.vertices[i];\n      key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n      if (verticesMap[key] === undefined) {\n        verticesMap[key] = i;\n        unique.push(this.vertices[i]);\n        changes[i] = unique.length - 1;\n      } else {\n        //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n        changes[i] = changes[verticesMap[key]];\n      }\n    } // if faces are completely degenerate after merging vertices, we\n    // have to remove them from the geometry.\n\n\n    var faceIndicesToRemove = [];\n\n    for (i = 0, il = this.faces.length; i < il; i++) {\n      face = this.faces[i];\n      face.a = changes[face.a];\n      face.b = changes[face.b];\n      face.c = changes[face.c];\n      indices = [face.a, face.b, face.c]; // if any duplicate vertices are found in a Face3\n      // we have to remove the face as nothing can be saved\n\n      for (var n = 0; n < 3; n++) {\n        if (indices[n] === indices[(n + 1) % 3]) {\n          faceIndicesToRemove.push(i);\n          break;\n        }\n      }\n    }\n\n    for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n      var idx = faceIndicesToRemove[i];\n      this.faces.splice(idx, 1);\n\n      for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n        this.faceVertexUvs[j].splice(idx, 1);\n      }\n    } // Use unique set of vertices\n\n\n    var diff = this.vertices.length - unique.length;\n    this.vertices = unique;\n    return diff;\n  },\n  setFromPoints: function (points) {\n    this.vertices = [];\n\n    for (var i = 0, l = points.length; i < l; i++) {\n      var point = points[i];\n      this.vertices.push(new Vector3(point.x, point.y, point.z || 0));\n    }\n\n    return this;\n  },\n  sortFacesByMaterialIndex: function () {\n    var faces = this.faces;\n    var length = faces.length; // tag faces\n\n    for (var i = 0; i < length; i++) {\n      faces[i]._id = i;\n    } // sort faces\n\n\n    function materialIndexSort(a, b) {\n      return a.materialIndex - b.materialIndex;\n    }\n\n    faces.sort(materialIndexSort); // sort uvs\n\n    var uvs1 = this.faceVertexUvs[0];\n    var uvs2 = this.faceVertexUvs[1];\n    var newUvs1, newUvs2;\n    if (uvs1 && uvs1.length === length) newUvs1 = [];\n    if (uvs2 && uvs2.length === length) newUvs2 = [];\n\n    for (var i = 0; i < length; i++) {\n      var id = faces[i]._id;\n      if (newUvs1) newUvs1.push(uvs1[id]);\n      if (newUvs2) newUvs2.push(uvs2[id]);\n    }\n\n    if (newUvs1) this.faceVertexUvs[0] = newUvs1;\n    if (newUvs2) this.faceVertexUvs[1] = newUvs2;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.5,\n        type: 'Geometry',\n        generator: 'Geometry.toJSON'\n      }\n    }; // standard Geometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    var vertices = [];\n\n    for (var i = 0; i < this.vertices.length; i++) {\n      var vertex = this.vertices[i];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    var faces = [];\n    var normals = [];\n    var normalsHash = {};\n    var colors = [];\n    var colorsHash = {};\n    var uvs = [];\n    var uvsHash = {};\n\n    for (var i = 0; i < this.faces.length; i++) {\n      var face = this.faces[i];\n      var hasMaterial = true;\n      var hasFaceUv = false; // deprecated\n\n      var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n      var hasFaceNormal = face.normal.length() > 0;\n      var hasFaceVertexNormal = face.vertexNormals.length > 0;\n      var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n      var hasFaceVertexColor = face.vertexColors.length > 0;\n      var faceType = 0;\n      faceType = setBit(faceType, 0, 0); // isQuad\n\n      faceType = setBit(faceType, 1, hasMaterial);\n      faceType = setBit(faceType, 2, hasFaceUv);\n      faceType = setBit(faceType, 3, hasFaceVertexUv);\n      faceType = setBit(faceType, 4, hasFaceNormal);\n      faceType = setBit(faceType, 5, hasFaceVertexNormal);\n      faceType = setBit(faceType, 6, hasFaceColor);\n      faceType = setBit(faceType, 7, hasFaceVertexColor);\n      faces.push(faceType);\n      faces.push(face.a, face.b, face.c);\n      faces.push(face.materialIndex);\n\n      if (hasFaceVertexUv) {\n        var faceVertexUvs = this.faceVertexUvs[0][i];\n        faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n      }\n\n      if (hasFaceNormal) {\n        faces.push(getNormalIndex(face.normal));\n      }\n\n      if (hasFaceVertexNormal) {\n        var vertexNormals = face.vertexNormals;\n        faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n      }\n\n      if (hasFaceColor) {\n        faces.push(getColorIndex(face.color));\n      }\n\n      if (hasFaceVertexColor) {\n        var vertexColors = face.vertexColors;\n        faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n      }\n    }\n\n    function setBit(value, position, enabled) {\n      return enabled ? value | 1 << position : value & ~(1 << position);\n    }\n\n    function getNormalIndex(normal) {\n      var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n      if (normalsHash[hash] !== undefined) {\n        return normalsHash[hash];\n      }\n\n      normalsHash[hash] = normals.length / 3;\n      normals.push(normal.x, normal.y, normal.z);\n      return normalsHash[hash];\n    }\n\n    function getColorIndex(color) {\n      var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n      if (colorsHash[hash] !== undefined) {\n        return colorsHash[hash];\n      }\n\n      colorsHash[hash] = colors.length;\n      colors.push(color.getHex());\n      return colorsHash[hash];\n    }\n\n    function getUvIndex(uv) {\n      var hash = uv.x.toString() + uv.y.toString();\n\n      if (uvsHash[hash] !== undefined) {\n        return uvsHash[hash];\n      }\n\n      uvsHash[hash] = uvs.length / 2;\n      uvs.push(uv.x, uv.y);\n      return uvsHash[hash];\n    }\n\n    data.data = {};\n    data.data.vertices = vertices;\n    data.data.normals = normals;\n    if (colors.length > 0) data.data.colors = colors;\n    if (uvs.length > 0) data.data.uvs = [uvs]; // temporal backward compatibility\n\n    data.data.faces = faces;\n    return data;\n  },\n  clone: function () {\n    /*\n     // Handle primitives\n    \t var parameters = this.parameters;\n    \t if ( parameters !== undefined ) {\n    \t var values = [];\n    \t for ( var key in parameters ) {\n    \t values.push( parameters[ key ] );\n    \t }\n    \t var geometry = Object.create( this.constructor.prototype );\n     this.constructor.apply( geometry, values );\n     return geometry;\n    \t }\n    \t return new this.constructor().copy( this );\n     */\n    return new Geometry().copy(this);\n  },\n  copy: function (source) {\n    var i, il, j, jl, k, kl; // reset\n\n    this.vertices = [];\n    this.colors = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    this.morphTargets = [];\n    this.morphNormals = [];\n    this.skinWeights = [];\n    this.skinIndices = [];\n    this.lineDistances = [];\n    this.boundingBox = null;\n    this.boundingSphere = null; // name\n\n    this.name = source.name; // vertices\n\n    var vertices = source.vertices;\n\n    for (i = 0, il = vertices.length; i < il; i++) {\n      this.vertices.push(vertices[i].clone());\n    } // colors\n\n\n    var colors = source.colors;\n\n    for (i = 0, il = colors.length; i < il; i++) {\n      this.colors.push(colors[i].clone());\n    } // faces\n\n\n    var faces = source.faces;\n\n    for (i = 0, il = faces.length; i < il; i++) {\n      this.faces.push(faces[i].clone());\n    } // face vertex uvs\n\n\n    for (i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n      var faceVertexUvs = source.faceVertexUvs[i];\n\n      if (this.faceVertexUvs[i] === undefined) {\n        this.faceVertexUvs[i] = [];\n      }\n\n      for (j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n        var uvs = faceVertexUvs[j],\n            uvsCopy = [];\n\n        for (k = 0, kl = uvs.length; k < kl; k++) {\n          var uv = uvs[k];\n          uvsCopy.push(uv.clone());\n        }\n\n        this.faceVertexUvs[i].push(uvsCopy);\n      }\n    } // morph targets\n\n\n    var morphTargets = source.morphTargets;\n\n    for (i = 0, il = morphTargets.length; i < il; i++) {\n      var morphTarget = {};\n      morphTarget.name = morphTargets[i].name; // vertices\n\n      if (morphTargets[i].vertices !== undefined) {\n        morphTarget.vertices = [];\n\n        for (j = 0, jl = morphTargets[i].vertices.length; j < jl; j++) {\n          morphTarget.vertices.push(morphTargets[i].vertices[j].clone());\n        }\n      } // normals\n\n\n      if (morphTargets[i].normals !== undefined) {\n        morphTarget.normals = [];\n\n        for (j = 0, jl = morphTargets[i].normals.length; j < jl; j++) {\n          morphTarget.normals.push(morphTargets[i].normals[j].clone());\n        }\n      }\n\n      this.morphTargets.push(morphTarget);\n    } // morph normals\n\n\n    var morphNormals = source.morphNormals;\n\n    for (i = 0, il = morphNormals.length; i < il; i++) {\n      var morphNormal = {}; // vertex normals\n\n      if (morphNormals[i].vertexNormals !== undefined) {\n        morphNormal.vertexNormals = [];\n\n        for (j = 0, jl = morphNormals[i].vertexNormals.length; j < jl; j++) {\n          var srcVertexNormal = morphNormals[i].vertexNormals[j];\n          var destVertexNormal = {};\n          destVertexNormal.a = srcVertexNormal.a.clone();\n          destVertexNormal.b = srcVertexNormal.b.clone();\n          destVertexNormal.c = srcVertexNormal.c.clone();\n          morphNormal.vertexNormals.push(destVertexNormal);\n        }\n      } // face normals\n\n\n      if (morphNormals[i].faceNormals !== undefined) {\n        morphNormal.faceNormals = [];\n\n        for (j = 0, jl = morphNormals[i].faceNormals.length; j < jl; j++) {\n          morphNormal.faceNormals.push(morphNormals[i].faceNormals[j].clone());\n        }\n      }\n\n      this.morphNormals.push(morphNormal);\n    } // skin weights\n\n\n    var skinWeights = source.skinWeights;\n\n    for (i = 0, il = skinWeights.length; i < il; i++) {\n      this.skinWeights.push(skinWeights[i].clone());\n    } // skin indices\n\n\n    var skinIndices = source.skinIndices;\n\n    for (i = 0, il = skinIndices.length; i < il; i++) {\n      this.skinIndices.push(skinIndices[i].clone());\n    } // line distances\n\n\n    var lineDistances = source.lineDistances;\n\n    for (i = 0, il = lineDistances.length; i < il; i++) {\n      this.lineDistances.push(lineDistances[i]);\n    } // bounding box\n\n\n    var boundingBox = source.boundingBox;\n\n    if (boundingBox !== null) {\n      this.boundingBox = boundingBox.clone();\n    } // bounding sphere\n\n\n    var boundingSphere = source.boundingSphere;\n\n    if (boundingSphere !== null) {\n      this.boundingSphere = boundingSphere.clone();\n    } // update flags\n\n\n    this.elementsNeedUpdate = source.elementsNeedUpdate;\n    this.verticesNeedUpdate = source.verticesNeedUpdate;\n    this.uvsNeedUpdate = source.uvsNeedUpdate;\n    this.normalsNeedUpdate = source.normalsNeedUpdate;\n    this.colorsNeedUpdate = source.colorsNeedUpdate;\n    this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n    this.groupsNeedUpdate = source.groupsNeedUpdate;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute(array, itemSize, normalized) {\n  if (Array.isArray(array)) {\n    throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n  }\n\n  this.name = '';\n  this.array = array;\n  this.itemSize = itemSize;\n  this.count = array !== undefined ? array.length / itemSize : 0;\n  this.normalized = normalized === true;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n  this.version = 0;\n}\n\nObject.defineProperty(BufferAttribute.prototype, 'needsUpdate', {\n  set: function (value) {\n    if (value === true) this.version++;\n  }\n});\nObject.assign(BufferAttribute.prototype, {\n  isBufferAttribute: true,\n  onUploadCallback: function () {},\n  setArray: function (array) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n\n    this.count = array !== undefined ? array.length / this.itemSize : 0;\n    this.array = array;\n    return this;\n  },\n  setDynamic: function (value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function (source) {\n    this.name = source.name;\n    this.array = new source.array.constructor(source.array);\n    this.itemSize = source.itemSize;\n    this.count = source.count;\n    this.normalized = source.normalized;\n    this.dynamic = source.dynamic;\n    return this;\n  },\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.itemSize;\n    index2 *= attribute.itemSize;\n\n    for (var i = 0, l = this.itemSize; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  copyArray: function (array) {\n    this.array.set(array);\n    return this;\n  },\n  copyColorsArray: function (colors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = colors.length; i < l; i++) {\n      var color = colors[i];\n\n      if (color === undefined) {\n        console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n        color = new Color();\n      }\n\n      array[offset++] = color.r;\n      array[offset++] = color.g;\n      array[offset++] = color.b;\n    }\n\n    return this;\n  },\n  copyVector2sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n        vector = new Vector2();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n    }\n\n    return this;\n  },\n  copyVector3sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n        vector = new Vector3();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n    }\n\n    return this;\n  },\n  copyVector4sArray: function (vectors) {\n    var array = this.array,\n        offset = 0;\n\n    for (var i = 0, l = vectors.length; i < l; i++) {\n      var vector = vectors[i];\n\n      if (vector === undefined) {\n        console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n        vector = new Vector4();\n      }\n\n      array[offset++] = vector.x;\n      array[offset++] = vector.y;\n      array[offset++] = vector.z;\n      array[offset++] = vector.w;\n    }\n\n    return this;\n  },\n  set: function (value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  getX: function (index) {\n    return this.array[index * this.itemSize];\n  },\n  setX: function (index, x) {\n    this.array[index * this.itemSize] = x;\n    return this;\n  },\n  getY: function (index) {\n    return this.array[index * this.itemSize + 1];\n  },\n  setY: function (index, y) {\n    this.array[index * this.itemSize + 1] = y;\n    return this;\n  },\n  getZ: function (index) {\n    return this.array[index * this.itemSize + 2];\n  },\n  setZ: function (index, z) {\n    this.array[index * this.itemSize + 2] = z;\n    return this;\n  },\n  getW: function (index) {\n    return this.array[index * this.itemSize + 3];\n  },\n  setW: function (index, w) {\n    this.array[index * this.itemSize + 3] = w;\n    return this;\n  },\n  setXY: function (index, x, y) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index *= this.itemSize;\n    this.array[index + 0] = x;\n    this.array[index + 1] = y;\n    this.array[index + 2] = z;\n    this.array[index + 3] = w;\n    return this;\n  },\n  onUpload: function (callback) {\n    this.onUploadCallback = callback;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor(this.array, this.itemSize).copy(this);\n  }\n}); //\n\nfunction Int8BufferAttribute(array, itemSize, normalized) {\n  BufferAttribute.call(this, new Int8Array(array), itemSize, normalized);\n}\n\nInt8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\nfunction Uint8BufferAttribute(array, itemSize, normalized) {\n  BufferAttribute.call(this, new Uint8Array(array), itemSize, normalized);\n}\n\nUint8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\nfunction Uint8ClampedBufferAttribute(array, itemSize, normalized) {\n  BufferAttribute.call(this, new Uint8ClampedArray(array), itemSize, normalized);\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\nfunction Int16BufferAttribute(array, itemSize, normalized) {\n  BufferAttribute.call(this, new Int16Array(array), itemSize, normalized);\n}\n\nInt16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\nfunction Uint16BufferAttribute(array, itemSize, normalized) {\n  BufferAttribute.call(this, new Uint16Array(array), itemSize, normalized);\n}\n\nUint16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\nfunction Int32BufferAttribute(array, itemSize, normalized) {\n  BufferAttribute.call(this, new Int32Array(array), itemSize, normalized);\n}\n\nInt32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\nfunction Uint32BufferAttribute(array, itemSize, normalized) {\n  BufferAttribute.call(this, new Uint32Array(array), itemSize, normalized);\n}\n\nUint32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\nfunction Float32BufferAttribute(array, itemSize, normalized) {\n  BufferAttribute.call(this, new Float32Array(array), itemSize, normalized);\n}\n\nFloat32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\nfunction Float64BufferAttribute(array, itemSize, normalized) {\n  BufferAttribute.call(this, new Float64Array(array), itemSize, normalized);\n}\n\nFloat64BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n  this.vertices = [];\n  this.normals = [];\n  this.colors = [];\n  this.uvs = [];\n  this.uvs2 = [];\n  this.groups = [];\n  this.morphTargets = {};\n  this.skinWeights = [];\n  this.skinIndices = []; // this.lineDistances = [];\n\n  this.boundingBox = null;\n  this.boundingSphere = null; // update flags\n\n  this.verticesNeedUpdate = false;\n  this.normalsNeedUpdate = false;\n  this.colorsNeedUpdate = false;\n  this.uvsNeedUpdate = false;\n  this.groupsNeedUpdate = false;\n}\n\nObject.assign(DirectGeometry.prototype, {\n  computeGroups: function (geometry) {\n    var group;\n    var groups = [];\n    var materialIndex = undefined;\n    var faces = geometry.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i]; // materials\n\n      if (face.materialIndex !== materialIndex) {\n        materialIndex = face.materialIndex;\n\n        if (group !== undefined) {\n          group.count = i * 3 - group.start;\n          groups.push(group);\n        }\n\n        group = {\n          start: i * 3,\n          materialIndex: materialIndex\n        };\n      }\n    }\n\n    if (group !== undefined) {\n      group.count = i * 3 - group.start;\n      groups.push(group);\n    }\n\n    this.groups = groups;\n  },\n  fromGeometry: function (geometry) {\n    var faces = geometry.faces;\n    var vertices = geometry.vertices;\n    var faceVertexUvs = geometry.faceVertexUvs;\n    var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n    var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n    var morphTargets = geometry.morphTargets;\n    var morphTargetsLength = morphTargets.length;\n    var morphTargetsPosition;\n\n    if (morphTargetsLength > 0) {\n      morphTargetsPosition = [];\n\n      for (var i = 0; i < morphTargetsLength; i++) {\n        morphTargetsPosition[i] = [];\n      }\n\n      this.morphTargets.position = morphTargetsPosition;\n    }\n\n    var morphNormals = geometry.morphNormals;\n    var morphNormalsLength = morphNormals.length;\n    var morphTargetsNormal;\n\n    if (morphNormalsLength > 0) {\n      morphTargetsNormal = [];\n\n      for (var i = 0; i < morphNormalsLength; i++) {\n        morphTargetsNormal[i] = [];\n      }\n\n      this.morphTargets.normal = morphTargetsNormal;\n    } // skins\n\n\n    var skinIndices = geometry.skinIndices;\n    var skinWeights = geometry.skinWeights;\n    var hasSkinIndices = skinIndices.length === vertices.length;\n    var hasSkinWeights = skinWeights.length === vertices.length; //\n\n    if (vertices.length > 0 && faces.length === 0) {\n      console.error('THREE.DirectGeometry: Faceless geometries are not supported.');\n    }\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n      var vertexNormals = face.vertexNormals;\n\n      if (vertexNormals.length === 3) {\n        this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n      } else {\n        var normal = face.normal;\n        this.normals.push(normal, normal, normal);\n      }\n\n      var vertexColors = face.vertexColors;\n\n      if (vertexColors.length === 3) {\n        this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n      } else {\n        var color = face.color;\n        this.colors.push(color, color, color);\n      }\n\n      if (hasFaceVertexUv === true) {\n        var vertexUvs = faceVertexUvs[0][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n          this.uvs.push(new Vector2(), new Vector2(), new Vector2());\n        }\n      }\n\n      if (hasFaceVertexUv2 === true) {\n        var vertexUvs = faceVertexUvs[1][i];\n\n        if (vertexUvs !== undefined) {\n          this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n        } else {\n          console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n          this.uvs2.push(new Vector2(), new Vector2(), new Vector2());\n        }\n      } // morphs\n\n\n      for (var j = 0; j < morphTargetsLength; j++) {\n        var morphTarget = morphTargets[j].vertices;\n        morphTargetsPosition[j].push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n      }\n\n      for (var j = 0; j < morphNormalsLength; j++) {\n        var morphNormal = morphNormals[j].vertexNormals[i];\n        morphTargetsNormal[j].push(morphNormal.a, morphNormal.b, morphNormal.c);\n      } // skins\n\n\n      if (hasSkinIndices) {\n        this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n      }\n\n      if (hasSkinWeights) {\n        this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n      }\n    }\n\n    this.computeGroups(geometry);\n    this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n    this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n    this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n    this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n    this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax(array) {\n  if (array.length === 0) return -Infinity;\n  var max = array[0];\n\n  for (var i = 1, l = array.length; i < l; ++i) {\n    if (array[i] > max) max = array[i];\n  }\n\n  return max;\n}\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n  Object.defineProperty(this, 'id', {\n    value: bufferGeometryId += 2\n  });\n  this.uuid = _Math.generateUUID();\n  this.name = '';\n  this.type = 'BufferGeometry';\n  this.index = null;\n  this.attributes = {};\n  this.morphAttributes = {};\n  this.groups = [];\n  this.boundingBox = null;\n  this.boundingSphere = null;\n  this.drawRange = {\n    start: 0,\n    count: Infinity\n  };\n  this.userData = {};\n}\n\nBufferGeometry.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n  constructor: BufferGeometry,\n  isBufferGeometry: true,\n  getIndex: function () {\n    return this.index;\n  },\n  setIndex: function (index) {\n    if (Array.isArray(index)) {\n      this.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n    } else {\n      this.index = index;\n    }\n  },\n  addAttribute: function (name, attribute) {\n    if (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n      console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n      return this.addAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n    }\n\n    if (name === 'index') {\n      console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n      this.setIndex(attribute);\n      return this;\n    }\n\n    this.attributes[name] = attribute;\n    return this;\n  },\n  getAttribute: function (name) {\n    return this.attributes[name];\n  },\n  removeAttribute: function (name) {\n    delete this.attributes[name];\n    return this;\n  },\n  addGroup: function (start, count, materialIndex) {\n    this.groups.push({\n      start: start,\n      count: count,\n      materialIndex: materialIndex !== undefined ? materialIndex : 0\n    });\n  },\n  clearGroups: function () {\n    this.groups = [];\n  },\n  setDrawRange: function (start, count) {\n    this.drawRange.start = start;\n    this.drawRange.count = count;\n  },\n  applyMatrix: function (matrix) {\n    var position = this.attributes.position;\n\n    if (position !== undefined) {\n      matrix.applyToBufferAttribute(position);\n      position.needsUpdate = true;\n    }\n\n    var normal = this.attributes.normal;\n\n    if (normal !== undefined) {\n      var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n      normalMatrix.applyToBufferAttribute(normal);\n      normal.needsUpdate = true;\n    }\n\n    if (this.boundingBox !== null) {\n      this.computeBoundingBox();\n    }\n\n    if (this.boundingSphere !== null) {\n      this.computeBoundingSphere();\n    }\n\n    return this;\n  },\n  rotateX: function () {\n    // rotate geometry around world x-axis\n    var m1 = new Matrix4();\n    return function rotateX(angle) {\n      m1.makeRotationX(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateY: function () {\n    // rotate geometry around world y-axis\n    var m1 = new Matrix4();\n    return function rotateY(angle) {\n      m1.makeRotationY(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  rotateZ: function () {\n    // rotate geometry around world z-axis\n    var m1 = new Matrix4();\n    return function rotateZ(angle) {\n      m1.makeRotationZ(angle);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  translate: function () {\n    // translate geometry\n    var m1 = new Matrix4();\n    return function translate(x, y, z) {\n      m1.makeTranslation(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  scale: function () {\n    // scale geometry\n    var m1 = new Matrix4();\n    return function scale(x, y, z) {\n      m1.makeScale(x, y, z);\n      this.applyMatrix(m1);\n      return this;\n    };\n  }(),\n  lookAt: function () {\n    var obj = new Object3D();\n    return function lookAt(vector) {\n      obj.lookAt(vector);\n      obj.updateMatrix();\n      this.applyMatrix(obj.matrix);\n    };\n  }(),\n  center: function () {\n    var offset = new Vector3();\n    return function center() {\n      this.computeBoundingBox();\n      this.boundingBox.getCenter(offset).negate();\n      this.translate(offset.x, offset.y, offset.z);\n      return this;\n    };\n  }(),\n  setFromObject: function (object) {\n    // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n    var geometry = object.geometry;\n\n    if (object.isPoints || object.isLine) {\n      var positions = new Float32BufferAttribute(geometry.vertices.length * 3, 3);\n      var colors = new Float32BufferAttribute(geometry.colors.length * 3, 3);\n      this.addAttribute('position', positions.copyVector3sArray(geometry.vertices));\n      this.addAttribute('color', colors.copyColorsArray(geometry.colors));\n\n      if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n        var lineDistances = new Float32BufferAttribute(geometry.lineDistances.length, 1);\n        this.addAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n    } else if (object.isMesh) {\n      if (geometry && geometry.isGeometry) {\n        this.fromGeometry(geometry);\n      }\n    }\n\n    return this;\n  },\n  setFromPoints: function (points) {\n    var position = [];\n\n    for (var i = 0, l = points.length; i < l; i++) {\n      var point = points[i];\n      position.push(point.x, point.y, point.z || 0);\n    }\n\n    this.addAttribute('position', new Float32BufferAttribute(position, 3));\n    return this;\n  },\n  updateFromObject: function (object) {\n    var geometry = object.geometry;\n\n    if (object.isMesh) {\n      var direct = geometry.__directGeometry;\n\n      if (geometry.elementsNeedUpdate === true) {\n        direct = undefined;\n        geometry.elementsNeedUpdate = false;\n      }\n\n      if (direct === undefined) {\n        return this.fromGeometry(geometry);\n      }\n\n      direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n      geometry.verticesNeedUpdate = false;\n      geometry.normalsNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n      geometry.uvsNeedUpdate = false;\n      geometry.groupsNeedUpdate = false;\n      geometry = direct;\n    }\n\n    var attribute;\n\n    if (geometry.verticesNeedUpdate === true) {\n      attribute = this.attributes.position;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.vertices);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.verticesNeedUpdate = false;\n    }\n\n    if (geometry.normalsNeedUpdate === true) {\n      attribute = this.attributes.normal;\n\n      if (attribute !== undefined) {\n        attribute.copyVector3sArray(geometry.normals);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.normalsNeedUpdate = false;\n    }\n\n    if (geometry.colorsNeedUpdate === true) {\n      attribute = this.attributes.color;\n\n      if (attribute !== undefined) {\n        attribute.copyColorsArray(geometry.colors);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.colorsNeedUpdate = false;\n    }\n\n    if (geometry.uvsNeedUpdate) {\n      attribute = this.attributes.uv;\n\n      if (attribute !== undefined) {\n        attribute.copyVector2sArray(geometry.uvs);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.uvsNeedUpdate = false;\n    }\n\n    if (geometry.lineDistancesNeedUpdate) {\n      attribute = this.attributes.lineDistance;\n\n      if (attribute !== undefined) {\n        attribute.copyArray(geometry.lineDistances);\n        attribute.needsUpdate = true;\n      }\n\n      geometry.lineDistancesNeedUpdate = false;\n    }\n\n    if (geometry.groupsNeedUpdate) {\n      geometry.computeGroups(object.geometry);\n      this.groups = geometry.groups;\n      geometry.groupsNeedUpdate = false;\n    }\n\n    return this;\n  },\n  fromGeometry: function (geometry) {\n    geometry.__directGeometry = new DirectGeometry().fromGeometry(geometry);\n    return this.fromDirectGeometry(geometry.__directGeometry);\n  },\n  fromDirectGeometry: function (geometry) {\n    var positions = new Float32Array(geometry.vertices.length * 3);\n    this.addAttribute('position', new BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n    if (geometry.normals.length > 0) {\n      var normals = new Float32Array(geometry.normals.length * 3);\n      this.addAttribute('normal', new BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n    }\n\n    if (geometry.colors.length > 0) {\n      var colors = new Float32Array(geometry.colors.length * 3);\n      this.addAttribute('color', new BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n    }\n\n    if (geometry.uvs.length > 0) {\n      var uvs = new Float32Array(geometry.uvs.length * 2);\n      this.addAttribute('uv', new BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n    }\n\n    if (geometry.uvs2.length > 0) {\n      var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n      this.addAttribute('uv2', new BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n    } // groups\n\n\n    this.groups = geometry.groups; // morphs\n\n    for (var name in geometry.morphTargets) {\n      var array = [];\n      var morphTargets = geometry.morphTargets[name];\n\n      for (var i = 0, l = morphTargets.length; i < l; i++) {\n        var morphTarget = morphTargets[i];\n        var attribute = new Float32BufferAttribute(morphTarget.length * 3, 3);\n        array.push(attribute.copyVector3sArray(morphTarget));\n      }\n\n      this.morphAttributes[name] = array;\n    } // skinning\n\n\n    if (geometry.skinIndices.length > 0) {\n      var skinIndices = new Float32BufferAttribute(geometry.skinIndices.length * 4, 4);\n      this.addAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n    }\n\n    if (geometry.skinWeights.length > 0) {\n      var skinWeights = new Float32BufferAttribute(geometry.skinWeights.length * 4, 4);\n      this.addAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n    } //\n\n\n    if (geometry.boundingSphere !== null) {\n      this.boundingSphere = geometry.boundingSphere.clone();\n    }\n\n    if (geometry.boundingBox !== null) {\n      this.boundingBox = geometry.boundingBox.clone();\n    }\n\n    return this;\n  },\n  computeBoundingBox: function () {\n    if (this.boundingBox === null) {\n      this.boundingBox = new Box3();\n    }\n\n    var position = this.attributes.position;\n\n    if (position !== undefined) {\n      this.boundingBox.setFromBufferAttribute(position);\n    } else {\n      this.boundingBox.makeEmpty();\n    }\n\n    if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n      console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n    }\n  },\n  computeBoundingSphere: function () {\n    var box = new Box3();\n    var vector = new Vector3();\n    return function computeBoundingSphere() {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n\n      var position = this.attributes.position;\n\n      if (position) {\n        var center = this.boundingSphere.center;\n        box.setFromBufferAttribute(position);\n        box.getCenter(center); // hoping to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = position.count; i < il; i++) {\n          vector.x = position.getX(i);\n          vector.y = position.getY(i);\n          vector.z = position.getZ(i);\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(vector));\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n        }\n      }\n    };\n  }(),\n  computeFaceNormals: function () {// backwards compatibility\n  },\n  computeVertexNormals: function () {\n    var index = this.index;\n    var attributes = this.attributes;\n    var groups = this.groups;\n\n    if (attributes.position) {\n      var positions = attributes.position.array;\n\n      if (attributes.normal === undefined) {\n        this.addAttribute('normal', new BufferAttribute(new Float32Array(positions.length), 3));\n      } else {\n        // reset existing normals to zero\n        var array = attributes.normal.array;\n\n        for (var i = 0, il = array.length; i < il; i++) {\n          array[i] = 0;\n        }\n      }\n\n      var normals = attributes.normal.array;\n      var vA, vB, vC;\n      var pA = new Vector3(),\n          pB = new Vector3(),\n          pC = new Vector3();\n      var cb = new Vector3(),\n          ab = new Vector3(); // indexed elements\n\n      if (index) {\n        var indices = index.array;\n\n        if (groups.length === 0) {\n          this.addGroup(0, indices.length);\n        }\n\n        for (var j = 0, jl = groups.length; j < jl; ++j) {\n          var group = groups[j];\n          var start = group.start;\n          var count = group.count;\n\n          for (var i = start, il = start + count; i < il; i += 3) {\n            vA = indices[i + 0] * 3;\n            vB = indices[i + 1] * 3;\n            vC = indices[i + 2] * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        }\n      } else {\n        // non-indexed elements (unconnected triangle soup)\n        for (var i = 0, il = positions.length; i < il; i += 9) {\n          pA.fromArray(positions, i);\n          pB.fromArray(positions, i + 3);\n          pC.fromArray(positions, i + 6);\n          cb.subVectors(pC, pB);\n          ab.subVectors(pA, pB);\n          cb.cross(ab);\n          normals[i] = cb.x;\n          normals[i + 1] = cb.y;\n          normals[i + 2] = cb.z;\n          normals[i + 3] = cb.x;\n          normals[i + 4] = cb.y;\n          normals[i + 5] = cb.z;\n          normals[i + 6] = cb.x;\n          normals[i + 7] = cb.y;\n          normals[i + 8] = cb.z;\n        }\n      }\n\n      this.normalizeNormals();\n      attributes.normal.needsUpdate = true;\n    }\n  },\n  merge: function (geometry, offset) {\n    if (!(geometry && geometry.isBufferGeometry)) {\n      console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n      return;\n    }\n\n    if (offset === undefined) {\n      offset = 0;\n      console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n    }\n\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      if (geometry.attributes[key] === undefined) continue;\n      var attribute1 = attributes[key];\n      var attributeArray1 = attribute1.array;\n      var attribute2 = geometry.attributes[key];\n      var attributeArray2 = attribute2.array;\n      var attributeSize = attribute2.itemSize;\n\n      for (var i = 0, j = attributeSize * offset; i < attributeArray2.length; i++, j++) {\n        attributeArray1[j] = attributeArray2[i];\n      }\n    }\n\n    return this;\n  },\n  normalizeNormals: function () {\n    var vector = new Vector3();\n    return function normalizeNormals() {\n      var normals = this.attributes.normal;\n\n      for (var i = 0, il = normals.count; i < il; i++) {\n        vector.x = normals.getX(i);\n        vector.y = normals.getY(i);\n        vector.z = normals.getZ(i);\n        vector.normalize();\n        normals.setXYZ(i, vector.x, vector.y, vector.z);\n      }\n    };\n  }(),\n  toNonIndexed: function () {\n    if (this.index === null) {\n      console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');\n      return this;\n    }\n\n    var geometry2 = new BufferGeometry();\n    var indices = this.index.array;\n    var attributes = this.attributes;\n\n    for (var name in attributes) {\n      var attribute = attributes[name];\n      var array = attribute.array;\n      var itemSize = attribute.itemSize;\n      var array2 = new array.constructor(indices.length * itemSize);\n      var index = 0,\n          index2 = 0;\n\n      for (var i = 0, l = indices.length; i < l; i++) {\n        index = indices[i] * itemSize;\n\n        for (var j = 0; j < itemSize; j++) {\n          array2[index2++] = array[index++];\n        }\n      }\n\n      geometry2.addAttribute(name, new BufferAttribute(array2, itemSize));\n    }\n\n    var groups = this.groups;\n\n    for (var i = 0, l = groups.length; i < l; i++) {\n      var group = groups[i];\n      geometry2.addGroup(group.start, group.count, group.materialIndex);\n    }\n\n    return geometry2;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.5,\n        type: 'BufferGeometry',\n        generator: 'BufferGeometry.toJSON'\n      }\n    }; // standard BufferGeometry serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n    if (this.parameters !== undefined) {\n      var parameters = this.parameters;\n\n      for (var key in parameters) {\n        if (parameters[key] !== undefined) data[key] = parameters[key];\n      }\n\n      return data;\n    }\n\n    data.data = {\n      attributes: {}\n    };\n    var index = this.index;\n\n    if (index !== null) {\n      var array = Array.prototype.slice.call(index.array);\n      data.data.index = {\n        type: index.array.constructor.name,\n        array: array\n      };\n    }\n\n    var attributes = this.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var array = Array.prototype.slice.call(attribute.array);\n      data.data.attributes[key] = {\n        itemSize: attribute.itemSize,\n        type: attribute.array.constructor.name,\n        array: array,\n        normalized: attribute.normalized\n      };\n    }\n\n    var groups = this.groups;\n\n    if (groups.length > 0) {\n      data.data.groups = JSON.parse(JSON.stringify(groups));\n    }\n\n    var boundingSphere = this.boundingSphere;\n\n    if (boundingSphere !== null) {\n      data.data.boundingSphere = {\n        center: boundingSphere.center.toArray(),\n        radius: boundingSphere.radius\n      };\n    }\n\n    return data;\n  },\n  clone: function () {\n    /*\n     // Handle primitives\n    \t var parameters = this.parameters;\n    \t if ( parameters !== undefined ) {\n    \t var values = [];\n    \t for ( var key in parameters ) {\n    \t values.push( parameters[ key ] );\n    \t }\n    \t var geometry = Object.create( this.constructor.prototype );\n     this.constructor.apply( geometry, values );\n     return geometry;\n    \t }\n    \t return new this.constructor().copy( this );\n     */\n    return new BufferGeometry().copy(this);\n  },\n  copy: function (source) {\n    var name, i, l; // reset\n\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null; // name\n\n    this.name = source.name; // index\n\n    var index = source.index;\n\n    if (index !== null) {\n      this.setIndex(index.clone());\n    } // attributes\n\n\n    var attributes = source.attributes;\n\n    for (name in attributes) {\n      var attribute = attributes[name];\n      this.addAttribute(name, attribute.clone());\n    } // morph attributes\n\n\n    var morphAttributes = source.morphAttributes;\n\n    for (name in morphAttributes) {\n      var array = [];\n      var morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n      for (i = 0, l = morphAttribute.length; i < l; i++) {\n        array.push(morphAttribute[i].clone());\n      }\n\n      this.morphAttributes[name] = array;\n    } // groups\n\n\n    var groups = source.groups;\n\n    for (i = 0, l = groups.length; i < l; i++) {\n      var group = groups[i];\n      this.addGroup(group.start, group.count, group.materialIndex);\n    } // bounding box\n\n\n    var boundingBox = source.boundingBox;\n\n    if (boundingBox !== null) {\n      this.boundingBox = boundingBox.clone();\n    } // bounding sphere\n\n\n    var boundingSphere = source.boundingSphere;\n\n    if (boundingSphere !== null) {\n      this.boundingSphere = boundingSphere.clone();\n    } // draw range\n\n\n    this.drawRange.start = source.drawRange.start;\n    this.drawRange.count = source.drawRange.count; // user data\n\n    this.userData = source.userData;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n// BoxGeometry\n\nfunction BoxGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n  Geometry.call(this);\n  this.type = 'BoxGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    depth: depth,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    depthSegments: depthSegments\n  };\n  this.fromBufferGeometry(new BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments));\n  this.mergeVertices();\n}\n\nBoxGeometry.prototype = Object.create(Geometry.prototype);\nBoxGeometry.prototype.constructor = BoxGeometry; // BoxBufferGeometry\n\nfunction BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n  BufferGeometry.call(this);\n  this.type = 'BoxBufferGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    depth: depth,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    depthSegments: depthSegments\n  };\n  var scope = this;\n  width = width || 1;\n  height = height || 1;\n  depth = depth || 1; // segments\n\n  widthSegments = Math.floor(widthSegments) || 1;\n  heightSegments = Math.floor(heightSegments) || 1;\n  depthSegments = Math.floor(depthSegments) || 1; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var numberOfVertices = 0;\n  var groupStart = 0; // build each side of the box geometry\n\n  buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n  buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n  buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n  buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n  buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n  buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n  // build geometry\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n  function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n    var segmentWidth = width / gridX;\n    var segmentHeight = height / gridY;\n    var widthHalf = width / 2;\n    var heightHalf = height / 2;\n    var depthHalf = depth / 2;\n    var gridX1 = gridX + 1;\n    var gridY1 = gridY + 1;\n    var vertexCounter = 0;\n    var groupCount = 0;\n    var ix, iy;\n    var vector = new Vector3(); // generate vertices, normals and uvs\n\n    for (iy = 0; iy < gridY1; iy++) {\n      var y = iy * segmentHeight - heightHalf;\n\n      for (ix = 0; ix < gridX1; ix++) {\n        var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n        vector[u] = x * udir;\n        vector[v] = y * vdir;\n        vector[w] = depthHalf; // now apply vector to vertex buffer\n\n        vertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n        vector[u] = 0;\n        vector[v] = 0;\n        vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n        normals.push(vector.x, vector.y, vector.z); // uvs\n\n        uvs.push(ix / gridX);\n        uvs.push(1 - iy / gridY); // counters\n\n        vertexCounter += 1;\n      }\n    } // indices\n    // 1. you need three indices to draw a single face\n    // 2. a single segment consists of two faces\n    // 3. so we need to generate six (2*3) indices per segment\n\n\n    for (iy = 0; iy < gridY; iy++) {\n      for (ix = 0; ix < gridX; ix++) {\n        var a = numberOfVertices + ix + gridX1 * iy;\n        var b = numberOfVertices + ix + gridX1 * (iy + 1);\n        var c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n        var d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d); // increase counter\n\n        groupCount += 6;\n      }\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n    groupStart += groupCount; // update total number of vertices\n\n    numberOfVertices += vertexCounter;\n  }\n}\n\nBoxBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n// PlaneGeometry\n\nfunction PlaneGeometry(width, height, widthSegments, heightSegments) {\n  Geometry.call(this);\n  this.type = 'PlaneGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  this.fromBufferGeometry(new PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n  this.mergeVertices();\n}\n\nPlaneGeometry.prototype = Object.create(Geometry.prototype);\nPlaneGeometry.prototype.constructor = PlaneGeometry; // PlaneBufferGeometry\n\nfunction PlaneBufferGeometry(width, height, widthSegments, heightSegments) {\n  BufferGeometry.call(this);\n  this.type = 'PlaneBufferGeometry';\n  this.parameters = {\n    width: width,\n    height: height,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments\n  };\n  width = width || 1;\n  height = height || 1;\n  var width_half = width / 2;\n  var height_half = height / 2;\n  var gridX = Math.floor(widthSegments) || 1;\n  var gridY = Math.floor(heightSegments) || 1;\n  var gridX1 = gridX + 1;\n  var gridY1 = gridY + 1;\n  var segment_width = width / gridX;\n  var segment_height = height / gridY;\n  var ix, iy; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // generate vertices, normals and uvs\n\n  for (iy = 0; iy < gridY1; iy++) {\n    var y = iy * segment_height - height_half;\n\n    for (ix = 0; ix < gridX1; ix++) {\n      var x = ix * segment_width - width_half;\n      vertices.push(x, -y, 0);\n      normals.push(0, 0, 1);\n      uvs.push(ix / gridX);\n      uvs.push(1 - iy / gridY);\n    }\n  } // indices\n\n\n  for (iy = 0; iy < gridY; iy++) {\n    for (ix = 0; ix < gridX; ix++) {\n      var a = ix + gridX1 * iy;\n      var b = ix + gridX1 * (iy + 1);\n      var c = ix + 1 + gridX1 * (iy + 1);\n      var d = ix + 1 + gridX1 * iy; // faces\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nPlaneBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n  Object.defineProperty(this, 'id', {\n    value: materialId++\n  });\n  this.uuid = _Math.generateUUID();\n  this.name = '';\n  this.type = 'Material';\n  this.fog = true;\n  this.lights = true;\n  this.blending = NormalBlending;\n  this.side = FrontSide;\n  this.flatShading = false;\n  this.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n  this.opacity = 1;\n  this.transparent = false;\n  this.blendSrc = SrcAlphaFactor;\n  this.blendDst = OneMinusSrcAlphaFactor;\n  this.blendEquation = AddEquation;\n  this.blendSrcAlpha = null;\n  this.blendDstAlpha = null;\n  this.blendEquationAlpha = null;\n  this.depthFunc = LessEqualDepth;\n  this.depthTest = true;\n  this.depthWrite = true;\n  this.clippingPlanes = null;\n  this.clipIntersection = false;\n  this.clipShadows = false;\n  this.shadowSide = null;\n  this.colorWrite = true;\n  this.precision = null; // override the renderer's default precision for this material\n\n  this.polygonOffset = false;\n  this.polygonOffsetFactor = 0;\n  this.polygonOffsetUnits = 0;\n  this.dithering = false;\n  this.alphaTest = 0;\n  this.premultipliedAlpha = false;\n  this.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n  this.visible = true;\n  this.userData = {};\n  this.needsUpdate = true;\n}\n\nMaterial.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n  constructor: Material,\n  isMaterial: true,\n  onBeforeCompile: function () {},\n  setValues: function (values) {\n    if (values === undefined) return;\n\n    for (var key in values) {\n      var newValue = values[key];\n\n      if (newValue === undefined) {\n        console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n        continue;\n      } // for backward compatability if shading is set in the constructor\n\n\n      if (key === 'shading') {\n        console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n        this.flatShading = newValue === FlatShading ? true : false;\n        continue;\n      }\n\n      var currentValue = this[key];\n\n      if (currentValue === undefined) {\n        console.warn(\"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\");\n        continue;\n      }\n\n      if (currentValue && currentValue.isColor) {\n        currentValue.set(newValue);\n      } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n        currentValue.copy(newValue);\n      } else if (key === 'overdraw') {\n        // ensure overdraw is backwards-compatible with legacy boolean type\n        this[key] = Number(newValue);\n      } else {\n        this[key] = newValue;\n      }\n    }\n  },\n  toJSON: function (meta) {\n    var isRoot = meta === undefined || typeof meta === 'string';\n\n    if (isRoot) {\n      meta = {\n        textures: {},\n        images: {}\n      };\n    }\n\n    var data = {\n      metadata: {\n        version: 4.5,\n        type: 'Material',\n        generator: 'Material.toJSON'\n      }\n    }; // standard Material serialization\n\n    data.uuid = this.uuid;\n    data.type = this.type;\n    if (this.name !== '') data.name = this.name;\n    if (this.color && this.color.isColor) data.color = this.color.getHex();\n    if (this.roughness !== undefined) data.roughness = this.roughness;\n    if (this.metalness !== undefined) data.metalness = this.metalness;\n    if (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n    if (this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n    if (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n    if (this.shininess !== undefined) data.shininess = this.shininess;\n    if (this.clearCoat !== undefined) data.clearCoat = this.clearCoat;\n    if (this.clearCoatRoughness !== undefined) data.clearCoatRoughness = this.clearCoatRoughness;\n    if (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n    if (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n    if (this.lightMap && this.lightMap.isTexture) data.lightMap = this.lightMap.toJSON(meta).uuid;\n\n    if (this.aoMap && this.aoMap.isTexture) {\n      data.aoMap = this.aoMap.toJSON(meta).uuid;\n      data.aoMapIntensity = this.aoMapIntensity;\n    }\n\n    if (this.bumpMap && this.bumpMap.isTexture) {\n      data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n      data.bumpScale = this.bumpScale;\n    }\n\n    if (this.normalMap && this.normalMap.isTexture) {\n      data.normalMap = this.normalMap.toJSON(meta).uuid;\n      data.normalMapType = this.normalMapType;\n      data.normalScale = this.normalScale.toArray();\n    }\n\n    if (this.displacementMap && this.displacementMap.isTexture) {\n      data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n      data.displacementScale = this.displacementScale;\n      data.displacementBias = this.displacementBias;\n    }\n\n    if (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n    if (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n    if (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n    if (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n    if (this.envMap && this.envMap.isTexture) {\n      data.envMap = this.envMap.toJSON(meta).uuid;\n      data.reflectivity = this.reflectivity; // Scale behind envMap\n    }\n\n    if (this.gradientMap && this.gradientMap.isTexture) {\n      data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n    }\n\n    if (this.size !== undefined) data.size = this.size;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== NormalBlending) data.blending = this.blending;\n    if (this.flatShading === true) data.flatShading = this.flatShading;\n    if (this.side !== FrontSide) data.side = this.side;\n    if (this.vertexColors !== NoColors) data.vertexColors = this.vertexColors;\n    if (this.opacity < 1) data.opacity = this.opacity;\n    if (this.transparent === true) data.transparent = this.transparent;\n    data.depthFunc = this.depthFunc;\n    data.depthTest = this.depthTest;\n    data.depthWrite = this.depthWrite; // rotation (SpriteMaterial)\n\n    if (this.rotation !== 0) data.rotation = this.rotation;\n    if (this.linewidth !== 1) data.linewidth = this.linewidth;\n    if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n    if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n    if (this.scale !== undefined) data.scale = this.scale;\n    if (this.dithering === true) data.dithering = true;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n    if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n    if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n    if (this.morphTargets === true) data.morphTargets = true;\n    if (this.skinning === true) data.skinning = true;\n    if (this.visible === false) data.visible = false;\n    if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n    function extractFromCache(cache) {\n      var values = [];\n\n      for (var key in cache) {\n        var data = cache[key];\n        delete data.metadata;\n        values.push(data);\n      }\n\n      return values;\n    }\n\n    if (isRoot) {\n      var textures = extractFromCache(meta.textures);\n      var images = extractFromCache(meta.images);\n      if (textures.length > 0) data.textures = textures;\n      if (images.length > 0) data.images = images;\n    }\n\n    return data;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.name = source.name;\n    this.fog = source.fog;\n    this.lights = source.lights;\n    this.blending = source.blending;\n    this.side = source.side;\n    this.flatShading = source.flatShading;\n    this.vertexColors = source.vertexColors;\n    this.opacity = source.opacity;\n    this.transparent = source.transparent;\n    this.blendSrc = source.blendSrc;\n    this.blendDst = source.blendDst;\n    this.blendEquation = source.blendEquation;\n    this.blendSrcAlpha = source.blendSrcAlpha;\n    this.blendDstAlpha = source.blendDstAlpha;\n    this.blendEquationAlpha = source.blendEquationAlpha;\n    this.depthFunc = source.depthFunc;\n    this.depthTest = source.depthTest;\n    this.depthWrite = source.depthWrite;\n    this.colorWrite = source.colorWrite;\n    this.precision = source.precision;\n    this.polygonOffset = source.polygonOffset;\n    this.polygonOffsetFactor = source.polygonOffsetFactor;\n    this.polygonOffsetUnits = source.polygonOffsetUnits;\n    this.dithering = source.dithering;\n    this.alphaTest = source.alphaTest;\n    this.premultipliedAlpha = source.premultipliedAlpha;\n    this.overdraw = source.overdraw;\n    this.visible = source.visible;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    this.clipShadows = source.clipShadows;\n    this.clipIntersection = source.clipIntersection;\n    var srcPlanes = source.clippingPlanes,\n        dstPlanes = null;\n\n    if (srcPlanes !== null) {\n      var n = srcPlanes.length;\n      dstPlanes = new Array(n);\n\n      for (var i = 0; i !== n; ++i) dstPlanes[i] = srcPlanes[i].clone();\n    }\n\n    this.clippingPlanes = dstPlanes;\n    this.shadowSide = source.shadowSide;\n    return this;\n  },\n  dispose: function () {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshBasicMaterial';\n  this.color = new Color(0xffffff); // emissive\n\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nMeshBasicMaterial.prototype = Object.create(Material.prototype);\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  return this;\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\n\nfunction ShaderMaterial(parameters) {\n  Material.call(this);\n  this.type = 'ShaderMaterial';\n  this.defines = {};\n  this.uniforms = {};\n  this.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n  this.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n  this.linewidth = 1;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false; // set to use scene fog\n\n  this.lights = false; // set to use scene lights\n\n  this.clipping = false; // set to use user-defined clipping planes\n\n  this.skinning = false; // set to use skinning attribute streams\n\n  this.morphTargets = false; // set to use morph targets\n\n  this.morphNormals = false; // set to use morph normals\n\n  this.extensions = {\n    derivatives: false,\n    // set to use derivatives\n    fragDepth: false,\n    // set to use fragment depth values\n    drawBuffers: false,\n    // set to use draw buffers\n    shaderTextureLOD: false // set to use shader texture LOD\n\n  }; // When rendered geometry doesn't include these attributes but the material does,\n  // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n  this.defaultAttributeValues = {\n    'color': [1, 1, 1],\n    'uv': [0, 0],\n    'uv2': [0, 0]\n  };\n  this.index0AttributeName = undefined;\n  this.uniformsNeedUpdate = false;\n\n  if (parameters !== undefined) {\n    if (parameters.attributes !== undefined) {\n      console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n    }\n\n    this.setValues(parameters);\n  }\n}\n\nShaderMaterial.prototype = Object.create(Material.prototype);\nShaderMaterial.prototype.constructor = ShaderMaterial;\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.fragmentShader = source.fragmentShader;\n  this.vertexShader = source.vertexShader;\n  this.uniforms = UniformsUtils.clone(source.uniforms);\n  this.defines = Object.assign({}, source.defines);\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.lights = source.lights;\n  this.clipping = source.clipping;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  this.extensions = source.extensions;\n  return this;\n};\n\nShaderMaterial.prototype.toJSON = function (meta) {\n  var data = Material.prototype.toJSON.call(this, meta);\n  data.uniforms = this.uniforms;\n  data.vertexShader = this.vertexShader;\n  data.fragmentShader = this.fragmentShader;\n  return data;\n};\n/**\n * @author bhouston / http://clara.io\n */\n\n\nfunction Ray(origin, direction) {\n  this.origin = origin !== undefined ? origin : new Vector3();\n  this.direction = direction !== undefined ? direction : new Vector3();\n}\n\nObject.assign(Ray.prototype, {\n  set: function (origin, direction) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (ray) {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n    return this;\n  },\n  at: function (t, target) {\n    if (target === undefined) {\n      console.warn('THREE.Ray: .at() target is now required');\n      target = new Vector3();\n    }\n\n    return target.copy(this.direction).multiplyScalar(t).add(this.origin);\n  },\n  lookAt: function (v) {\n    this.direction.copy(v).sub(this.origin).normalize();\n    return this;\n  },\n  recast: function () {\n    var v1 = new Vector3();\n    return function recast(t) {\n      this.origin.copy(this.at(t, v1));\n      return this;\n    };\n  }(),\n  closestPointToPoint: function (point, target) {\n    if (target === undefined) {\n      console.warn('THREE.Ray: .closestPointToPoint() target is now required');\n      target = new Vector3();\n    }\n\n    target.subVectors(point, this.origin);\n    var directionDistance = target.dot(this.direction);\n\n    if (directionDistance < 0) {\n      return target.copy(this.origin);\n    }\n\n    return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n  },\n  distanceToPoint: function (point) {\n    return Math.sqrt(this.distanceSqToPoint(point));\n  },\n  distanceSqToPoint: function () {\n    var v1 = new Vector3();\n    return function distanceSqToPoint(point) {\n      var directionDistance = v1.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n      if (directionDistance < 0) {\n        return this.origin.distanceToSquared(point);\n      }\n\n      v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n      return v1.distanceToSquared(point);\n    };\n  }(),\n  distanceSqToSegment: function () {\n    var segCenter = new Vector3();\n    var segDir = new Vector3();\n    var diff = new Vector3();\n    return function distanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n      // It returns the min distance between the ray and the segment\n      // defined by v0 and v1\n      // It can also set two optional targets :\n      // - The closest point on the ray\n      // - The closest point on the segment\n      segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n      segDir.copy(v1).sub(v0).normalize();\n      diff.copy(this.origin).sub(segCenter);\n      var segExtent = v0.distanceTo(v1) * 0.5;\n      var a01 = -this.direction.dot(segDir);\n      var b0 = diff.dot(this.direction);\n      var b1 = -diff.dot(segDir);\n      var c = diff.lengthSq();\n      var det = Math.abs(1 - a01 * a01);\n      var s0, s1, sqrDist, extDet;\n\n      if (det > 0) {\n        // The ray and segment are not parallel.\n        s0 = a01 * b1 - b0;\n        s1 = a01 * b0 - b1;\n        extDet = segExtent * det;\n\n        if (s0 >= 0) {\n          if (s1 >= -extDet) {\n            if (s1 <= extDet) {\n              // region 0\n              // Minimum at interior points of ray and segment.\n              var invDet = 1 / det;\n              s0 *= invDet;\n              s1 *= invDet;\n              sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n            } else {\n              // region 1\n              s1 = segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            // region 5\n            s1 = -segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          if (s1 <= -extDet) {\n            // region 4\n            s0 = Math.max(0, -(-a01 * segExtent + b0));\n            s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          } else if (s1 <= extDet) {\n            // region 3\n            s0 = 0;\n            s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = s1 * (s1 + 2 * b1) + c;\n          } else {\n            // region 2\n            s0 = Math.max(0, -(a01 * segExtent + b0));\n            s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        }\n      } else {\n        // Ray and segment are parallel.\n        s1 = a01 > 0 ? -segExtent : segExtent;\n        s0 = Math.max(0, -(a01 * s1 + b0));\n        sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n      }\n\n      if (optionalPointOnRay) {\n        optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n      }\n\n      if (optionalPointOnSegment) {\n        optionalPointOnSegment.copy(segDir).multiplyScalar(s1).add(segCenter);\n      }\n\n      return sqrDist;\n    };\n  }(),\n  intersectSphere: function () {\n    var v1 = new Vector3();\n    return function intersectSphere(sphere, target) {\n      v1.subVectors(sphere.center, this.origin);\n      var tca = v1.dot(this.direction);\n      var d2 = v1.dot(v1) - tca * tca;\n      var radius2 = sphere.radius * sphere.radius;\n      if (d2 > radius2) return null;\n      var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n      var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n      var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n      if (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n\n      if (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n      return this.at(t0, target);\n    };\n  }(),\n  intersectsSphere: function (sphere) {\n    return this.distanceToPoint(sphere.center) <= sphere.radius;\n  },\n  distanceToPlane: function (plane) {\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator === 0) {\n      // line is coplanar, return origin\n      if (plane.distanceToPoint(this.origin) === 0) {\n        return 0;\n      } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n      return null;\n    }\n\n    var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n    return t >= 0 ? t : null;\n  },\n  intersectPlane: function (plane, target) {\n    var t = this.distanceToPlane(plane);\n\n    if (t === null) {\n      return null;\n    }\n\n    return this.at(t, target);\n  },\n  intersectsPlane: function (plane) {\n    // check if the ray lies on the plane first\n    var distToPoint = plane.distanceToPoint(this.origin);\n\n    if (distToPoint === 0) {\n      return true;\n    }\n\n    var denominator = plane.normal.dot(this.direction);\n\n    if (denominator * distToPoint < 0) {\n      return true;\n    } // ray origin is behind the plane (and is pointing behind it)\n\n\n    return false;\n  },\n  intersectBox: function (box, target) {\n    var tmin, tmax, tymin, tymax, tzmin, tzmax;\n    var invdirx = 1 / this.direction.x,\n        invdiry = 1 / this.direction.y,\n        invdirz = 1 / this.direction.z;\n    var origin = this.origin;\n\n    if (invdirx >= 0) {\n      tmin = (box.min.x - origin.x) * invdirx;\n      tmax = (box.max.x - origin.x) * invdirx;\n    } else {\n      tmin = (box.max.x - origin.x) * invdirx;\n      tmax = (box.min.x - origin.x) * invdirx;\n    }\n\n    if (invdiry >= 0) {\n      tymin = (box.min.y - origin.y) * invdiry;\n      tymax = (box.max.y - origin.y) * invdiry;\n    } else {\n      tymin = (box.max.y - origin.y) * invdiry;\n      tymax = (box.min.y - origin.y) * invdiry;\n    }\n\n    if (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n    // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n    if (tymin > tmin || tmin !== tmin) tmin = tymin;\n    if (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n    if (invdirz >= 0) {\n      tzmin = (box.min.z - origin.z) * invdirz;\n      tzmax = (box.max.z - origin.z) * invdirz;\n    } else {\n      tzmin = (box.max.z - origin.z) * invdirz;\n      tzmax = (box.min.z - origin.z) * invdirz;\n    }\n\n    if (tmin > tzmax || tzmin > tmax) return null;\n    if (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n    if (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n    if (tmax < 0) return null;\n    return this.at(tmin >= 0 ? tmin : tmax, target);\n  },\n  intersectsBox: function () {\n    var v = new Vector3();\n    return function intersectsBox(box) {\n      return this.intersectBox(box, v) !== null;\n    };\n  }(),\n  intersectTriangle: function () {\n    // Compute the offset origin, edges, and normal.\n    var diff = new Vector3();\n    var edge1 = new Vector3();\n    var edge2 = new Vector3();\n    var normal = new Vector3();\n    return function intersectTriangle(a, b, c, backfaceCulling, target) {\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n      edge1.subVectors(b, a);\n      edge2.subVectors(c, a);\n      normal.crossVectors(edge1, edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n      var DdN = this.direction.dot(normal);\n      var sign;\n\n      if (DdN > 0) {\n        if (backfaceCulling) return null;\n        sign = 1;\n      } else if (DdN < 0) {\n        sign = -1;\n        DdN = -DdN;\n      } else {\n        return null;\n      }\n\n      diff.subVectors(this.origin, a);\n      var DdQxE2 = sign * this.direction.dot(edge2.crossVectors(diff, edge2)); // b1 < 0, no intersection\n\n      if (DdQxE2 < 0) {\n        return null;\n      }\n\n      var DdE1xQ = sign * this.direction.dot(edge1.cross(diff)); // b2 < 0, no intersection\n\n      if (DdE1xQ < 0) {\n        return null;\n      } // b1+b2 > 1, no intersection\n\n\n      if (DdQxE2 + DdE1xQ > DdN) {\n        return null;\n      } // Line intersects triangle, check if ray does.\n\n\n      var QdN = -sign * diff.dot(normal); // t < 0, no intersection\n\n      if (QdN < 0) {\n        return null;\n      } // Ray intersects triangle.\n\n\n      return this.at(QdN / DdN, target);\n    };\n  }(),\n  applyMatrix4: function (matrix4) {\n    this.origin.applyMatrix4(matrix4);\n    this.direction.transformDirection(matrix4);\n    return this;\n  },\n  equals: function (ray) {\n    return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n  }\n});\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3(start, end) {\n  this.start = start !== undefined ? start : new Vector3();\n  this.end = end !== undefined ? end : new Vector3();\n}\n\nObject.assign(Line3.prototype, {\n  set: function (start, end) {\n    this.start.copy(start);\n    this.end.copy(end);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (line) {\n    this.start.copy(line.start);\n    this.end.copy(line.end);\n    return this;\n  },\n  getCenter: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Line3: .getCenter() target is now required');\n      target = new Vector3();\n    }\n\n    return target.addVectors(this.start, this.end).multiplyScalar(0.5);\n  },\n  delta: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Line3: .delta() target is now required');\n      target = new Vector3();\n    }\n\n    return target.subVectors(this.end, this.start);\n  },\n  distanceSq: function () {\n    return this.start.distanceToSquared(this.end);\n  },\n  distance: function () {\n    return this.start.distanceTo(this.end);\n  },\n  at: function (t, target) {\n    if (target === undefined) {\n      console.warn('THREE.Line3: .at() target is now required');\n      target = new Vector3();\n    }\n\n    return this.delta(target).multiplyScalar(t).add(this.start);\n  },\n  closestPointToPointParameter: function () {\n    var startP = new Vector3();\n    var startEnd = new Vector3();\n    return function closestPointToPointParameter(point, clampToLine) {\n      startP.subVectors(point, this.start);\n      startEnd.subVectors(this.end, this.start);\n      var startEnd2 = startEnd.dot(startEnd);\n      var startEnd_startP = startEnd.dot(startP);\n      var t = startEnd_startP / startEnd2;\n\n      if (clampToLine) {\n        t = _Math.clamp(t, 0, 1);\n      }\n\n      return t;\n    };\n  }(),\n  closestPointToPoint: function (point, clampToLine, target) {\n    var t = this.closestPointToPointParameter(point, clampToLine);\n\n    if (target === undefined) {\n      console.warn('THREE.Line3: .closestPointToPoint() target is now required');\n      target = new Vector3();\n    }\n\n    return this.delta(target).multiplyScalar(t).add(this.start);\n  },\n  applyMatrix4: function (matrix) {\n    this.start.applyMatrix4(matrix);\n    this.end.applyMatrix4(matrix);\n    return this;\n  },\n  equals: function (line) {\n    return line.start.equals(this.start) && line.end.equals(this.end);\n  }\n});\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle(a, b, c) {\n  this.a = a !== undefined ? a : new Vector3();\n  this.b = b !== undefined ? b : new Vector3();\n  this.c = c !== undefined ? c : new Vector3();\n}\n\nObject.assign(Triangle, {\n  getNormal: function () {\n    var v0 = new Vector3();\n    return function getNormal(a, b, c, target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getNormal() target is now required');\n        target = new Vector3();\n      }\n\n      target.subVectors(c, b);\n      v0.subVectors(a, b);\n      target.cross(v0);\n      var targetLengthSq = target.lengthSq();\n\n      if (targetLengthSq > 0) {\n        return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n      }\n\n      return target.set(0, 0, 0);\n    };\n  }(),\n  // static/instance method to calculate barycentric coordinates\n  // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n  getBarycoord: function () {\n    var v0 = new Vector3();\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    return function getBarycoord(point, a, b, c, target) {\n      v0.subVectors(c, a);\n      v1.subVectors(b, a);\n      v2.subVectors(point, a);\n      var dot00 = v0.dot(v0);\n      var dot01 = v0.dot(v1);\n      var dot02 = v0.dot(v2);\n      var dot11 = v1.dot(v1);\n      var dot12 = v1.dot(v2);\n      var denom = dot00 * dot11 - dot01 * dot01;\n\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getBarycoord() target is now required');\n        target = new Vector3();\n      } // collinear or singular triangle\n\n\n      if (denom === 0) {\n        // arbitrary location outside of triangle?\n        // not sure if this is the best idea, maybe should be returning undefined\n        return target.set(-2, -1, -1);\n      }\n\n      var invDenom = 1 / denom;\n      var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n      var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n      return target.set(1 - u - v, v, u);\n    };\n  }(),\n  containsPoint: function () {\n    var v1 = new Vector3();\n    return function containsPoint(point, a, b, c) {\n      Triangle.getBarycoord(point, a, b, c, v1);\n      return v1.x >= 0 && v1.y >= 0 && v1.x + v1.y <= 1;\n    };\n  }()\n});\nObject.assign(Triangle.prototype, {\n  set: function (a, b, c) {\n    this.a.copy(a);\n    this.b.copy(b);\n    this.c.copy(c);\n    return this;\n  },\n  setFromPointsAndIndices: function (points, i0, i1, i2) {\n    this.a.copy(points[i0]);\n    this.b.copy(points[i1]);\n    this.c.copy(points[i2]);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (triangle) {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n    return this;\n  },\n  getArea: function () {\n    var v0 = new Vector3();\n    var v1 = new Vector3();\n    return function getArea() {\n      v0.subVectors(this.c, this.b);\n      v1.subVectors(this.a, this.b);\n      return v0.cross(v1).length() * 0.5;\n    };\n  }(),\n  getMidpoint: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Triangle: .getMidpoint() target is now required');\n      target = new Vector3();\n    }\n\n    return target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n  },\n  getNormal: function (target) {\n    return Triangle.getNormal(this.a, this.b, this.c, target);\n  },\n  getPlane: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Triangle: .getPlane() target is now required');\n      target = new Vector3();\n    }\n\n    return target.setFromCoplanarPoints(this.a, this.b, this.c);\n  },\n  getBarycoord: function (point, target) {\n    return Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n  },\n  containsPoint: function (point) {\n    return Triangle.containsPoint(point, this.a, this.b, this.c);\n  },\n  intersectsBox: function (box) {\n    return box.intersectsTriangle(this);\n  },\n  closestPointToPoint: function () {\n    var plane = new Plane();\n    var edgeList = [new Line3(), new Line3(), new Line3()];\n    var projectedPoint = new Vector3();\n    var closestPoint = new Vector3();\n    return function closestPointToPoint(point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .closestPointToPoint() target is now required');\n        target = new Vector3();\n      }\n\n      var minDistance = Infinity; // project the point onto the plane of the triangle\n\n      plane.setFromCoplanarPoints(this.a, this.b, this.c);\n      plane.projectPoint(point, projectedPoint); // check if the projection lies within the triangle\n\n      if (this.containsPoint(projectedPoint) === true) {\n        // if so, this is the closest point\n        target.copy(projectedPoint);\n      } else {\n        // if not, the point falls outside the triangle. the target is the closest point to the triangle's edges or vertices\n        edgeList[0].set(this.a, this.b);\n        edgeList[1].set(this.b, this.c);\n        edgeList[2].set(this.c, this.a);\n\n        for (var i = 0; i < edgeList.length; i++) {\n          edgeList[i].closestPointToPoint(projectedPoint, true, closestPoint);\n          var distance = projectedPoint.distanceToSquared(closestPoint);\n\n          if (distance < minDistance) {\n            minDistance = distance;\n            target.copy(closestPoint);\n          }\n        }\n      }\n\n      return target;\n    };\n  }(),\n  equals: function (triangle) {\n    return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh(geometry, material) {\n  Object3D.call(this);\n  this.type = 'Mesh';\n  this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n  this.material = material !== undefined ? material : new MeshBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n  this.drawMode = TrianglesDrawMode;\n  this.updateMorphTargets();\n}\n\nMesh.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Mesh,\n  isMesh: true,\n  setDrawMode: function (value) {\n    this.drawMode = value;\n  },\n  copy: function (source) {\n    Object3D.prototype.copy.call(this, source);\n    this.drawMode = source.drawMode;\n\n    if (source.morphTargetInfluences !== undefined) {\n      this.morphTargetInfluences = source.morphTargetInfluences.slice();\n    }\n\n    if (source.morphTargetDictionary !== undefined) {\n      this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n    }\n\n    return this;\n  },\n  updateMorphTargets: function () {\n    var geometry = this.geometry;\n    var m, ml, name;\n\n    if (geometry.isBufferGeometry) {\n      var morphAttributes = geometry.morphAttributes;\n      var keys = Object.keys(morphAttributes);\n\n      if (keys.length > 0) {\n        var morphAttribute = morphAttributes[keys[0]];\n\n        if (morphAttribute !== undefined) {\n          this.morphTargetInfluences = [];\n          this.morphTargetDictionary = {};\n\n          for (m = 0, ml = morphAttribute.length; m < ml; m++) {\n            name = morphAttribute[m].name || String(m);\n            this.morphTargetInfluences.push(0);\n            this.morphTargetDictionary[name] = m;\n          }\n        }\n      }\n    } else {\n      var morphTargets = geometry.morphTargets;\n\n      if (morphTargets !== undefined && morphTargets.length > 0) {\n        this.morphTargetInfluences = [];\n        this.morphTargetDictionary = {};\n\n        for (m = 0, ml = morphTargets.length; m < ml; m++) {\n          name = morphTargets[m].name || String(m);\n          this.morphTargetInfluences.push(0);\n          this.morphTargetDictionary[name] = m;\n        }\n      }\n    }\n  },\n  raycast: function () {\n    var inverseMatrix = new Matrix4();\n    var ray = new Ray();\n    var sphere = new Sphere();\n    var vA = new Vector3();\n    var vB = new Vector3();\n    var vC = new Vector3();\n    var tempA = new Vector3();\n    var tempB = new Vector3();\n    var tempC = new Vector3();\n    var uvA = new Vector2();\n    var uvB = new Vector2();\n    var uvC = new Vector2();\n    var barycoord = new Vector3();\n    var intersectionPoint = new Vector3();\n    var intersectionPointWorld = new Vector3();\n\n    function uvIntersection(point, p1, p2, p3, uv1, uv2, uv3) {\n      Triangle.getBarycoord(point, p1, p2, p3, barycoord);\n      uv1.multiplyScalar(barycoord.x);\n      uv2.multiplyScalar(barycoord.y);\n      uv3.multiplyScalar(barycoord.z);\n      uv1.add(uv2).add(uv3);\n      return uv1.clone();\n    }\n\n    function checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n      var intersect;\n\n      if (material.side === BackSide) {\n        intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n      } else {\n        intersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n      }\n\n      if (intersect === null) return null;\n      intersectionPointWorld.copy(point);\n      intersectionPointWorld.applyMatrix4(object.matrixWorld);\n      var distance = raycaster.ray.origin.distanceTo(intersectionPointWorld);\n      if (distance < raycaster.near || distance > raycaster.far) return null;\n      return {\n        distance: distance,\n        point: intersectionPointWorld.clone(),\n        object: object\n      };\n    }\n\n    function checkBufferGeometryIntersection(object, material, raycaster, ray, position, uv, a, b, c) {\n      vA.fromBufferAttribute(position, a);\n      vB.fromBufferAttribute(position, b);\n      vC.fromBufferAttribute(position, c);\n      var intersection = checkIntersection(object, material, raycaster, ray, vA, vB, vC, intersectionPoint);\n\n      if (intersection) {\n        if (uv) {\n          uvA.fromBufferAttribute(uv, a);\n          uvB.fromBufferAttribute(uv, b);\n          uvC.fromBufferAttribute(uv, c);\n          intersection.uv = uvIntersection(intersectionPoint, vA, vB, vC, uvA, uvB, uvC);\n        }\n\n        var face = new Face3(a, b, c);\n        Triangle.getNormal(vA, vB, vC, face.normal);\n        intersection.face = face;\n      }\n\n      return intersection;\n    }\n\n    return function raycast(raycaster, intersects) {\n      var geometry = this.geometry;\n      var material = this.material;\n      var matrixWorld = this.matrixWorld;\n      if (material === undefined) return; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix); // Check boundingBox before continuing\n\n      if (geometry.boundingBox !== null) {\n        if (ray.intersectsBox(geometry.boundingBox) === false) return;\n      }\n\n      var intersection;\n\n      if (geometry.isBufferGeometry) {\n        var a, b, c;\n        var index = geometry.index;\n        var position = geometry.attributes.position;\n        var uv = geometry.attributes.uv;\n        var groups = geometry.groups;\n        var drawRange = geometry.drawRange;\n        var i, j, il, jl;\n        var group, groupMaterial;\n        var start, end;\n\n        if (index !== null) {\n          // indexed buffer geometry\n          if (Array.isArray(material)) {\n            for (i = 0, il = groups.length; i < il; i++) {\n              group = groups[i];\n              groupMaterial = material[group.materialIndex];\n              start = Math.max(group.start, drawRange.start);\n              end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n              for (j = start, jl = end; j < jl; j += 3) {\n                a = index.getX(i);\n                b = index.getX(i + 1);\n                c = index.getX(i + 2);\n                intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, ray, position, uv, a, b, c);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n                  intersects.push(intersection);\n                }\n              }\n            }\n          } else {\n            start = Math.max(0, drawRange.start);\n            end = Math.min(index.count, drawRange.start + drawRange.count);\n\n            for (i = start, il = end; i < il; i += 3) {\n              a = index.getX(i);\n              b = index.getX(i + 1);\n              c = index.getX(i + 2);\n              intersection = checkBufferGeometryIntersection(this, material, raycaster, ray, position, uv, a, b, c);\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n                intersects.push(intersection);\n              }\n            }\n          }\n        } else if (position !== undefined) {\n          // non-indexed buffer geometry\n          if (Array.isArray(material)) {\n            for (i = 0, il = groups.length; i < il; i++) {\n              group = groups[i];\n              groupMaterial = material[group.materialIndex];\n              start = Math.max(group.start, drawRange.start);\n              end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n              for (j = start, jl = end; j < jl; j += 3) {\n                a = j;\n                b = j + 1;\n                c = j + 2;\n                intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, ray, position, uv, a, b, c);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n                  intersects.push(intersection);\n                }\n              }\n            }\n          } else {\n            start = Math.max(0, drawRange.start);\n            end = Math.min(position.count, drawRange.start + drawRange.count);\n\n            for (i = start, il = end; i < il; i += 3) {\n              a = i;\n              b = i + 1;\n              c = i + 2;\n              intersection = checkBufferGeometryIntersection(this, material, raycaster, ray, position, uv, a, b, c);\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n                intersects.push(intersection);\n              }\n            }\n          }\n        }\n      } else if (geometry.isGeometry) {\n        var fvA, fvB, fvC;\n        var isMultiMaterial = Array.isArray(material);\n        var vertices = geometry.vertices;\n        var faces = geometry.faces;\n        var uvs;\n        var faceVertexUvs = geometry.faceVertexUvs[0];\n        if (faceVertexUvs.length > 0) uvs = faceVertexUvs;\n\n        for (var f = 0, fl = faces.length; f < fl; f++) {\n          var face = faces[f];\n          var faceMaterial = isMultiMaterial ? material[face.materialIndex] : material;\n          if (faceMaterial === undefined) continue;\n          fvA = vertices[face.a];\n          fvB = vertices[face.b];\n          fvC = vertices[face.c];\n\n          if (faceMaterial.morphTargets === true) {\n            var morphTargets = geometry.morphTargets;\n            var morphInfluences = this.morphTargetInfluences;\n            vA.set(0, 0, 0);\n            vB.set(0, 0, 0);\n            vC.set(0, 0, 0);\n\n            for (var t = 0, tl = morphTargets.length; t < tl; t++) {\n              var influence = morphInfluences[t];\n              if (influence === 0) continue;\n              var targets = morphTargets[t].vertices;\n              vA.addScaledVector(tempA.subVectors(targets[face.a], fvA), influence);\n              vB.addScaledVector(tempB.subVectors(targets[face.b], fvB), influence);\n              vC.addScaledVector(tempC.subVectors(targets[face.c], fvC), influence);\n            }\n\n            vA.add(fvA);\n            vB.add(fvB);\n            vC.add(fvC);\n            fvA = vA;\n            fvB = vB;\n            fvC = vC;\n          }\n\n          intersection = checkIntersection(this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint);\n\n          if (intersection) {\n            if (uvs && uvs[f]) {\n              var uvs_f = uvs[f];\n              uvA.copy(uvs_f[0]);\n              uvB.copy(uvs_f[1]);\n              uvC.copy(uvs_f[2]);\n              intersection.uv = uvIntersection(intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC);\n            }\n\n            intersection.face = face;\n            intersection.faceIndex = f;\n            intersects.push(intersection);\n          }\n        }\n      }\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground(renderer, state, objects, premultipliedAlpha) {\n  var clearColor = new Color(0x000000);\n  var clearAlpha = 0;\n  var planeCamera, planeMesh;\n  var boxMesh;\n\n  function render(renderList, scene, camera, forceClear) {\n    var background = scene.background;\n\n    if (background === null) {\n      setClear(clearColor, clearAlpha);\n    } else if (background && background.isColor) {\n      setClear(background, 1);\n      forceClear = true;\n    }\n\n    if (renderer.autoClear || forceClear) {\n      renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n    }\n\n    if (background && background.isCubeTexture) {\n      if (boxMesh === undefined) {\n        boxMesh = new Mesh(new BoxBufferGeometry(1, 1, 1), new ShaderMaterial({\n          uniforms: ShaderLib.cube.uniforms,\n          vertexShader: ShaderLib.cube.vertexShader,\n          fragmentShader: ShaderLib.cube.fragmentShader,\n          side: BackSide,\n          depthTest: true,\n          depthWrite: false,\n          fog: false\n        }));\n        boxMesh.geometry.removeAttribute('normal');\n        boxMesh.geometry.removeAttribute('uv');\n\n        boxMesh.onBeforeRender = function (renderer, scene, camera) {\n          this.matrixWorld.copyPosition(camera.matrixWorld);\n        };\n\n        objects.update(boxMesh);\n      }\n\n      boxMesh.material.uniforms.tCube.value = background;\n      renderList.push(boxMesh, boxMesh.geometry, boxMesh.material, 0, null);\n    } else if (background && background.isTexture) {\n      if (planeCamera === undefined) {\n        planeCamera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n        planeMesh = new Mesh(new PlaneBufferGeometry(2, 2), new MeshBasicMaterial({\n          depthTest: false,\n          depthWrite: false,\n          fog: false\n        }));\n        objects.update(planeMesh);\n      }\n\n      planeMesh.material.map = background; // TODO Push this to renderList\n\n      renderer.renderBufferDirect(planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null);\n    }\n  }\n\n  function setClear(color, alpha) {\n    state.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n  }\n\n  return {\n    getClearColor: function () {\n      return clearColor;\n    },\n    setClearColor: function (color, alpha) {\n      clearColor.set(color);\n      clearAlpha = alpha !== undefined ? alpha : 1;\n      setClear(clearColor, clearAlpha);\n    },\n    getClearAlpha: function () {\n      return clearAlpha;\n    },\n    setClearAlpha: function (alpha) {\n      clearAlpha = alpha;\n      setClear(clearColor, clearAlpha);\n    },\n    render: render\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLBufferRenderer(gl, extensions, info) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  function render(start, count) {\n    gl.drawArrays(mode, start, count);\n    info.update(count, mode);\n  }\n\n  function renderInstances(geometry, start, count) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n\n    extension.drawArraysInstancedANGLE(mode, start, count, geometry.maxInstancedCount);\n    info.update(count, mode, geometry.maxInstancedCount);\n  } //\n\n\n  this.setMode = setMode;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLCapabilities(gl, extensions, parameters) {\n  var maxAnisotropy;\n\n  function getMaxAnisotropy() {\n    if (maxAnisotropy !== undefined) return maxAnisotropy;\n    var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n    if (extension !== null) {\n      maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n    } else {\n      maxAnisotropy = 0;\n    }\n\n    return maxAnisotropy;\n  }\n\n  function getMaxPrecision(precision) {\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n        return 'highp';\n      }\n\n      precision = 'mediump';\n    }\n\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n        return 'mediump';\n      }\n    }\n\n    return 'lowp';\n  }\n\n  var precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n  var maxPrecision = getMaxPrecision(precision);\n\n  if (maxPrecision !== precision) {\n    console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n    precision = maxPrecision;\n  }\n\n  var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n  var maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  var maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n  var maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  var maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n  var maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  var maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n  var maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n  var maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n  var vertexTextures = maxVertexTextures > 0;\n  var floatFragmentTextures = !!extensions.get('OES_texture_float');\n  var floatVertexTextures = vertexTextures && floatFragmentTextures;\n  return {\n    getMaxAnisotropy: getMaxAnisotropy,\n    getMaxPrecision: getMaxPrecision,\n    precision: precision,\n    logarithmicDepthBuffer: logarithmicDepthBuffer,\n    maxTextures: maxTextures,\n    maxVertexTextures: maxVertexTextures,\n    maxTextureSize: maxTextureSize,\n    maxCubemapSize: maxCubemapSize,\n    maxAttributes: maxAttributes,\n    maxVertexUniforms: maxVertexUniforms,\n    maxVaryings: maxVaryings,\n    maxFragmentUniforms: maxFragmentUniforms,\n    vertexTextures: vertexTextures,\n    floatFragmentTextures: floatFragmentTextures,\n    floatVertexTextures: floatVertexTextures\n  };\n}\n/**\n * @author tschw\n */\n\n\nfunction WebGLClipping() {\n  var scope = this,\n      globalState = null,\n      numGlobalPlanes = 0,\n      localClippingEnabled = false,\n      renderingShadows = false,\n      plane = new Plane(),\n      viewNormalMatrix = new Matrix3(),\n      uniform = {\n    value: null,\n    needsUpdate: false\n  };\n  this.uniform = uniform;\n  this.numPlanes = 0;\n  this.numIntersection = 0;\n\n  this.init = function (planes, enableLocalClipping, camera) {\n    var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n    // run another frame in order to reset the state:\n    numGlobalPlanes !== 0 || localClippingEnabled;\n    localClippingEnabled = enableLocalClipping;\n    globalState = projectPlanes(planes, camera, 0);\n    numGlobalPlanes = planes.length;\n    return enabled;\n  };\n\n  this.beginShadows = function () {\n    renderingShadows = true;\n    projectPlanes(null);\n  };\n\n  this.endShadows = function () {\n    renderingShadows = false;\n    resetGlobalState();\n  };\n\n  this.setState = function (planes, clipIntersection, clipShadows, camera, cache, fromCache) {\n    if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n      // there's no local clipping\n      if (renderingShadows) {\n        // there's no global clipping\n        projectPlanes(null);\n      } else {\n        resetGlobalState();\n      }\n    } else {\n      var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n          lGlobal = nGlobal * 4,\n          dstArray = cache.clippingState || null;\n      uniform.value = dstArray; // ensure unique state\n\n      dstArray = projectPlanes(planes, camera, lGlobal, fromCache);\n\n      for (var i = 0; i !== lGlobal; ++i) {\n        dstArray[i] = globalState[i];\n      }\n\n      cache.clippingState = dstArray;\n      this.numIntersection = clipIntersection ? this.numPlanes : 0;\n      this.numPlanes += nGlobal;\n    }\n  };\n\n  function resetGlobalState() {\n    if (uniform.value !== globalState) {\n      uniform.value = globalState;\n      uniform.needsUpdate = numGlobalPlanes > 0;\n    }\n\n    scope.numPlanes = numGlobalPlanes;\n    scope.numIntersection = 0;\n  }\n\n  function projectPlanes(planes, camera, dstOffset, skipTransform) {\n    var nPlanes = planes !== null ? planes.length : 0,\n        dstArray = null;\n\n    if (nPlanes !== 0) {\n      dstArray = uniform.value;\n\n      if (skipTransform !== true || dstArray === null) {\n        var flatSize = dstOffset + nPlanes * 4,\n            viewMatrix = camera.matrixWorldInverse;\n        viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n        if (dstArray === null || dstArray.length < flatSize) {\n          dstArray = new Float32Array(flatSize);\n        }\n\n        for (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n          plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n          plane.normal.toArray(dstArray, i4);\n          dstArray[i4 + 3] = plane.constant;\n        }\n      }\n\n      uniform.value = dstArray;\n      uniform.needsUpdate = true;\n    }\n\n    scope.numPlanes = nPlanes;\n    return dstArray;\n  }\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLExtensions(gl) {\n  var extensions = {};\n  return {\n    get: function (name) {\n      if (extensions[name] !== undefined) {\n        return extensions[name];\n      }\n\n      var extension;\n\n      switch (name) {\n        case 'WEBGL_depth_texture':\n          extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n          break;\n\n        case 'EXT_texture_filter_anisotropic':\n          extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n          break;\n\n        case 'WEBGL_compressed_texture_s3tc':\n          extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n          break;\n\n        case 'WEBGL_compressed_texture_pvrtc':\n          extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n          break;\n\n        default:\n          extension = gl.getExtension(name);\n      }\n\n      if (extension === null) {\n        console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n      }\n\n      extensions[name] = extension;\n      return extension;\n    }\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLGeometries(gl, attributes, info) {\n  var geometries = {};\n  var wireframeAttributes = {};\n\n  function onGeometryDispose(event) {\n    var geometry = event.target;\n    var buffergeometry = geometries[geometry.id];\n\n    if (buffergeometry.index !== null) {\n      attributes.remove(buffergeometry.index);\n    }\n\n    for (var name in buffergeometry.attributes) {\n      attributes.remove(buffergeometry.attributes[name]);\n    }\n\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    delete geometries[geometry.id]; // TODO Remove duplicate code\n\n    var attribute = wireframeAttributes[geometry.id];\n\n    if (attribute) {\n      attributes.remove(attribute);\n      delete wireframeAttributes[geometry.id];\n    }\n\n    attribute = wireframeAttributes[buffergeometry.id];\n\n    if (attribute) {\n      attributes.remove(attribute);\n      delete wireframeAttributes[buffergeometry.id];\n    } //\n\n\n    info.memory.geometries--;\n  }\n\n  function get(object, geometry) {\n    var buffergeometry = geometries[geometry.id];\n    if (buffergeometry) return buffergeometry;\n    geometry.addEventListener('dispose', onGeometryDispose);\n\n    if (geometry.isBufferGeometry) {\n      buffergeometry = geometry;\n    } else if (geometry.isGeometry) {\n      if (geometry._bufferGeometry === undefined) {\n        geometry._bufferGeometry = new BufferGeometry().setFromObject(object);\n      }\n\n      buffergeometry = geometry._bufferGeometry;\n    }\n\n    geometries[geometry.id] = buffergeometry;\n    info.memory.geometries++;\n    return buffergeometry;\n  }\n\n  function update(geometry) {\n    var index = geometry.index;\n    var geometryAttributes = geometry.attributes;\n\n    if (index !== null) {\n      attributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n    }\n\n    for (var name in geometryAttributes) {\n      attributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n    } // morph targets\n\n\n    var morphAttributes = geometry.morphAttributes;\n\n    for (var name in morphAttributes) {\n      var array = morphAttributes[name];\n\n      for (var i = 0, l = array.length; i < l; i++) {\n        attributes.update(array[i], gl.ARRAY_BUFFER);\n      }\n    }\n  }\n\n  function getWireframeAttribute(geometry) {\n    var attribute = wireframeAttributes[geometry.id];\n    if (attribute) return attribute;\n    var indices = [];\n    var geometryIndex = geometry.index;\n    var geometryAttributes = geometry.attributes; // console.time( 'wireframe' );\n\n    if (geometryIndex !== null) {\n      var array = geometryIndex.array;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var a = array[i + 0];\n        var b = array[i + 1];\n        var c = array[i + 2];\n        indices.push(a, b, b, c, c, a);\n      }\n    } else {\n      var array = geometryAttributes.position.array;\n\n      for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n        var a = i + 0;\n        var b = i + 1;\n        var c = i + 2;\n        indices.push(a, b, b, c, c, a);\n      }\n    } // console.timeEnd( 'wireframe' );\n\n\n    attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n    attributes.update(attribute, gl.ELEMENT_ARRAY_BUFFER);\n    wireframeAttributes[geometry.id] = attribute;\n    return attribute;\n  }\n\n  return {\n    get: get,\n    update: update,\n    getWireframeAttribute: getWireframeAttribute\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLIndexedBufferRenderer(gl, extensions, info) {\n  var mode;\n\n  function setMode(value) {\n    mode = value;\n  }\n\n  var type, bytesPerElement;\n\n  function setIndex(value) {\n    type = value.type;\n    bytesPerElement = value.bytesPerElement;\n  }\n\n  function render(start, count) {\n    gl.drawElements(mode, count, type, start * bytesPerElement);\n    info.update(count, mode);\n  }\n\n  function renderInstances(geometry, start, count) {\n    var extension = extensions.get('ANGLE_instanced_arrays');\n\n    if (extension === null) {\n      console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n      return;\n    }\n\n    extension.drawElementsInstancedANGLE(mode, count, type, start * bytesPerElement, geometry.maxInstancedCount);\n    info.update(count, mode, geometry.maxInstancedCount);\n  } //\n\n\n  this.setMode = setMode;\n  this.setIndex = setIndex;\n  this.render = render;\n  this.renderInstances = renderInstances;\n}\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n\nfunction WebGLInfo(gl) {\n  var memory = {\n    geometries: 0,\n    textures: 0\n  };\n  var render = {\n    frame: 0,\n    calls: 0,\n    triangles: 0,\n    points: 0,\n    lines: 0\n  };\n\n  function update(count, mode, instanceCount) {\n    instanceCount = instanceCount || 1;\n    render.calls++;\n\n    switch (mode) {\n      case gl.TRIANGLES:\n        render.triangles += instanceCount * (count / 3);\n        break;\n\n      case gl.TRIANGLE_STRIP:\n      case gl.TRIANGLE_FAN:\n        render.triangles += instanceCount * (count - 2);\n        break;\n\n      case gl.LINES:\n        render.lines += instanceCount * (count / 2);\n        break;\n\n      case gl.LINE_STRIP:\n        render.lines += instanceCount * (count - 1);\n        break;\n\n      case gl.LINE_LOOP:\n        render.lines += instanceCount * count;\n        break;\n\n      case gl.POINTS:\n        render.points += instanceCount * count;\n        break;\n\n      default:\n        console.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n        break;\n    }\n  }\n\n  function reset() {\n    render.frame++;\n    render.calls = 0;\n    render.triangles = 0;\n    render.points = 0;\n    render.lines = 0;\n  }\n\n  return {\n    memory: memory,\n    render: render,\n    programs: null,\n    autoReset: true,\n    reset: reset,\n    update: update\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction absNumericalSort(a, b) {\n  return Math.abs(b[1]) - Math.abs(a[1]);\n}\n\nfunction WebGLMorphtargets(gl) {\n  var influencesList = {};\n  var morphInfluences = new Float32Array(8);\n\n  function update(object, geometry, material, program) {\n    var objectInfluences = object.morphTargetInfluences;\n    var length = objectInfluences.length;\n    var influences = influencesList[geometry.id];\n\n    if (influences === undefined) {\n      // initialise list\n      influences = [];\n\n      for (var i = 0; i < length; i++) {\n        influences[i] = [i, 0];\n      }\n\n      influencesList[geometry.id] = influences;\n    }\n\n    var morphTargets = material.morphTargets && geometry.morphAttributes.position;\n    var morphNormals = material.morphNormals && geometry.morphAttributes.normal; // Remove current morphAttributes\n\n    for (var i = 0; i < length; i++) {\n      var influence = influences[i];\n\n      if (influence[1] !== 0) {\n        if (morphTargets) geometry.removeAttribute('morphTarget' + i);\n        if (morphNormals) geometry.removeAttribute('morphNormal' + i);\n      }\n    } // Collect influences\n\n\n    for (var i = 0; i < length; i++) {\n      var influence = influences[i];\n      influence[0] = i;\n      influence[1] = objectInfluences[i];\n    }\n\n    influences.sort(absNumericalSort); // Add morphAttributes\n\n    for (var i = 0; i < 8; i++) {\n      var influence = influences[i];\n\n      if (influence) {\n        var index = influence[0];\n        var value = influence[1];\n\n        if (value) {\n          if (morphTargets) geometry.addAttribute('morphTarget' + i, morphTargets[index]);\n          if (morphNormals) geometry.addAttribute('morphNormal' + i, morphNormals[index]);\n          morphInfluences[i] = value;\n          continue;\n        }\n      }\n\n      morphInfluences[i] = 0;\n    }\n\n    program.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n  }\n\n  return {\n    update: update\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLObjects(geometries, info) {\n  var updateList = {};\n\n  function update(object) {\n    var frame = info.render.frame;\n    var geometry = object.geometry;\n    var buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n    if (updateList[buffergeometry.id] !== frame) {\n      if (geometry.isGeometry) {\n        buffergeometry.updateFromObject(object);\n      }\n\n      geometries.update(buffergeometry);\n      updateList[buffergeometry.id] = frame;\n    }\n\n    return buffergeometry;\n  }\n\n  function dispose() {\n    updateList = {};\n  }\n\n  return {\n    update: update,\n    dispose: dispose\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTexture(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n  images = images !== undefined ? images : [];\n  mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n  Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.flipY = false;\n}\n\nCubeTexture.prototype = Object.create(Texture.prototype);\nCubeTexture.prototype.constructor = CubeTexture;\nCubeTexture.prototype.isCubeTexture = true;\nObject.defineProperty(CubeTexture.prototype, 'images', {\n  get: function () {\n    return this.image;\n  },\n  set: function (value) {\n    this.image = value;\n  }\n});\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture(); // --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n  this.seq = [];\n  this.map = {};\n} // --- Utilities ---\n// Array Caches (provide typed arrays for temporary by size)\n\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array(16);\nvar mat3array = new Float32Array(9);\nvar mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\nfunction flatten(array, nBlocks, blockSize) {\n  var firstElem = array[0];\n  if (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n  // see http://jacksondunstan.com/articles/983\n\n  var n = nBlocks * blockSize,\n      r = arrayCacheF32[n];\n\n  if (r === undefined) {\n    r = new Float32Array(n);\n    arrayCacheF32[n] = r;\n  }\n\n  if (nBlocks !== 0) {\n    firstElem.toArray(r, 0);\n\n    for (var i = 1, offset = 0; i !== nBlocks; ++i) {\n      offset += blockSize;\n      array[i].toArray(r, offset);\n    }\n  }\n\n  return r;\n}\n\nfunction arraysEqual(a, b) {\n  if (a.length !== b.length) return false;\n\n  for (var i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n}\n\nfunction copyArray(a, b) {\n  for (var i = 0, l = b.length; i < l; i++) {\n    a[i] = b[i];\n  }\n} // Texture unit allocation\n\n\nfunction allocTexUnits(renderer, n) {\n  var r = arrayCacheI32[n];\n\n  if (r === undefined) {\n    r = new Int32Array(n);\n    arrayCacheI32[n] = r;\n  }\n\n  for (var i = 0; i !== n; ++i) r[i] = renderer.allocTextureUnit();\n\n  return r;\n} // --- Setters ---\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n// Single scalar\n\n\nfunction setValue1f(gl, v) {\n  var cache = this.cache;\n  if (cache[0] === v) return;\n  gl.uniform1f(this.addr, v);\n  cache[0] = v;\n}\n\nfunction setValue1i(gl, v) {\n  var cache = this.cache;\n  if (cache[0] === v) return;\n  gl.uniform1i(this.addr, v);\n  cache[0] = v;\n} // Single float vector (from flat array or THREE.VectorN)\n\n\nfunction setValue2fv(gl, v) {\n  var cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y) {\n      gl.uniform2f(this.addr, v.x, v.y);\n      cache[0] = v.x;\n      cache[1] = v.y;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform2fv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\n\nfunction setValue3fv(gl, v) {\n  var cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n      gl.uniform3f(this.addr, v.x, v.y, v.z);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n    }\n  } else if (v.r !== undefined) {\n    if (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n      gl.uniform3f(this.addr, v.r, v.g, v.b);\n      cache[0] = v.r;\n      cache[1] = v.g;\n      cache[2] = v.b;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform3fv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\n\nfunction setValue4fv(gl, v) {\n  var cache = this.cache;\n\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n      gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n      cache[3] = v.w;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform4fv(this.addr, v);\n    copyArray(cache, v);\n  }\n} // Single matrix (from flat array or MatrixN)\n\n\nfunction setValue2fm(gl, v) {\n  var cache = this.cache;\n  var elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix2fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat2array.set(elements);\n    gl.uniformMatrix2fv(this.addr, false, mat2array);\n    copyArray(cache, elements);\n  }\n}\n\nfunction setValue3fm(gl, v) {\n  var cache = this.cache;\n  var elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix3fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat3array.set(elements);\n    gl.uniformMatrix3fv(this.addr, false, mat3array);\n    copyArray(cache, elements);\n  }\n}\n\nfunction setValue4fm(gl, v) {\n  var cache = this.cache;\n  var elements = v.elements;\n\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix4fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat4array.set(elements);\n    gl.uniformMatrix4fv(this.addr, false, mat4array);\n    copyArray(cache, elements);\n  }\n} // Single texture (2D / Cube)\n\n\nfunction setValueT1(gl, v, renderer) {\n  var cache = this.cache;\n  var unit = renderer.allocTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  renderer.setTexture2D(v || emptyTexture, unit);\n}\n\nfunction setValueT6(gl, v, renderer) {\n  var cache = this.cache;\n  var unit = renderer.allocTextureUnit();\n\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n\n  renderer.setTextureCube(v || emptyCubeTexture, unit);\n} // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\nfunction setValue2iv(gl, v) {\n  var cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform2iv(this.addr, v);\n  copyArray(cache, v);\n}\n\nfunction setValue3iv(gl, v) {\n  var cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform3iv(this.addr, v);\n  copyArray(cache, v);\n}\n\nfunction setValue4iv(gl, v) {\n  var cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform4iv(this.addr, v);\n  copyArray(cache, v);\n} // Helper to pick the right setter for the singular case\n\n\nfunction getSingularSetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValue1f;\n    // FLOAT\n\n    case 0x8b50:\n      return setValue2fv;\n    // _VEC2\n\n    case 0x8b51:\n      return setValue3fv;\n    // _VEC3\n\n    case 0x8b52:\n      return setValue4fv;\n    // _VEC4\n\n    case 0x8b5a:\n      return setValue2fm;\n    // _MAT2\n\n    case 0x8b5b:\n      return setValue3fm;\n    // _MAT3\n\n    case 0x8b5c:\n      return setValue4fm;\n    // _MAT4\n\n    case 0x8b5e:\n    case 0x8d66:\n      return setValueT1;\n    // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\n    case 0x8b60:\n      return setValueT6;\n    // SAMPLER_CUBE\n\n    case 0x1404:\n    case 0x8b56:\n      return setValue1i;\n    // INT, BOOL\n\n    case 0x8b53:\n    case 0x8b57:\n      return setValue2iv;\n    // _VEC2\n\n    case 0x8b54:\n    case 0x8b58:\n      return setValue3iv;\n    // _VEC3\n\n    case 0x8b55:\n    case 0x8b59:\n      return setValue4iv;\n    // _VEC4\n  }\n} // Array of scalars\n\n\nfunction setValue1fv(gl, v) {\n  var cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform1fv(this.addr, v);\n  copyArray(cache, v);\n}\n\nfunction setValue1iv(gl, v) {\n  var cache = this.cache;\n  if (arraysEqual(cache, v)) return;\n  gl.uniform1iv(this.addr, v);\n  copyArray(cache, v);\n} // Array of vectors (flat or from THREE classes)\n\n\nfunction setValueV2a(gl, v) {\n  var cache = this.cache;\n  var data = flatten(v, this.size, 2);\n  if (arraysEqual(cache, data)) return;\n  gl.uniform2fv(this.addr, data);\n  this.updateCache(data);\n}\n\nfunction setValueV3a(gl, v) {\n  var cache = this.cache;\n  var data = flatten(v, this.size, 3);\n  if (arraysEqual(cache, data)) return;\n  gl.uniform3fv(this.addr, data);\n  this.updateCache(data);\n}\n\nfunction setValueV4a(gl, v) {\n  var cache = this.cache;\n  var data = flatten(v, this.size, 4);\n  if (arraysEqual(cache, data)) return;\n  gl.uniform4fv(this.addr, data);\n  this.updateCache(data);\n} // Array of matrices (flat or from THREE clases)\n\n\nfunction setValueM2a(gl, v) {\n  var cache = this.cache;\n  var data = flatten(v, this.size, 4);\n  if (arraysEqual(cache, data)) return;\n  gl.uniformMatrix2fv(this.addr, false, data);\n  this.updateCache(data);\n}\n\nfunction setValueM3a(gl, v) {\n  var cache = this.cache;\n  var data = flatten(v, this.size, 9);\n  if (arraysEqual(cache, data)) return;\n  gl.uniformMatrix3fv(this.addr, false, data);\n  this.updateCache(data);\n}\n\nfunction setValueM4a(gl, v) {\n  var cache = this.cache;\n  var data = flatten(v, this.size, 16);\n  if (arraysEqual(cache, data)) return;\n  gl.uniformMatrix4fv(this.addr, false, data);\n  this.updateCache(data);\n} // Array of textures (2D / Cube)\n\n\nfunction setValueT1a(gl, v, renderer) {\n  var cache = this.cache;\n  var n = v.length;\n  var units = allocTexUnits(renderer, n);\n\n  if (arraysEqual(cache, units) === false) {\n    gl.uniform1iv(this.addr, units);\n    copyArray(cache, units);\n  }\n\n  for (var i = 0; i !== n; ++i) {\n    renderer.setTexture2D(v[i] || emptyTexture, units[i]);\n  }\n}\n\nfunction setValueT6a(gl, v, renderer) {\n  var cache = this.cache;\n  var n = v.length;\n  var units = allocTexUnits(renderer, n);\n\n  if (arraysEqual(cache, units) === false) {\n    gl.uniform1iv(this.addr, units);\n    copyArray(cache, units);\n  }\n\n  for (var i = 0; i !== n; ++i) {\n    renderer.setTextureCube(v[i] || emptyCubeTexture, units[i]);\n  }\n} // Helper to pick the right setter for a pure (bottom-level) array\n\n\nfunction getPureArraySetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValue1fv;\n    // FLOAT\n\n    case 0x8b50:\n      return setValueV2a;\n    // _VEC2\n\n    case 0x8b51:\n      return setValueV3a;\n    // _VEC3\n\n    case 0x8b52:\n      return setValueV4a;\n    // _VEC4\n\n    case 0x8b5a:\n      return setValueM2a;\n    // _MAT2\n\n    case 0x8b5b:\n      return setValueM3a;\n    // _MAT3\n\n    case 0x8b5c:\n      return setValueM4a;\n    // _MAT4\n\n    case 0x8b5e:\n      return setValueT1a;\n    // SAMPLER_2D\n\n    case 0x8b60:\n      return setValueT6a;\n    // SAMPLER_CUBE\n\n    case 0x1404:\n    case 0x8b56:\n      return setValue1iv;\n    // INT, BOOL\n\n    case 0x8b53:\n    case 0x8b57:\n      return setValue2iv;\n    // _VEC2\n\n    case 0x8b54:\n    case 0x8b58:\n      return setValue3iv;\n    // _VEC3\n\n    case 0x8b55:\n    case 0x8b59:\n      return setValue4iv;\n    // _VEC4\n  }\n} // --- Uniform Classes ---\n\n\nfunction SingleUniform(id, activeInfo, addr) {\n  this.id = id;\n  this.addr = addr;\n  this.cache = [];\n  this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n}\n\nfunction PureArrayUniform(id, activeInfo, addr) {\n  this.id = id;\n  this.addr = addr;\n  this.cache = [];\n  this.size = activeInfo.size;\n  this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n}\n\nPureArrayUniform.prototype.updateCache = function (data) {\n  var cache = this.cache;\n\n  if (data instanceof Float32Array && cache.length !== data.length) {\n    this.cache = new Float32Array(data.length);\n  }\n\n  copyArray(cache, data);\n};\n\nfunction StructuredUniform(id) {\n  this.id = id;\n  UniformContainer.call(this); // mix-in\n}\n\nStructuredUniform.prototype.setValue = function (gl, value) {\n  // Note: Don't need an extra 'renderer' parameter, since samplers\n  // are not allowed in structured uniforms.\n  var seq = this.seq;\n\n  for (var i = 0, n = seq.length; i !== n; ++i) {\n    var u = seq[i];\n    u.setValue(gl, value[u.id]);\n  }\n}; // --- Top-level ---\n// Parser - builds up the property tree from the path strings\n\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g; // extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform(container, uniformObject) {\n  container.seq.push(uniformObject);\n  container.map[uniformObject.id] = uniformObject;\n}\n\nfunction parseUniform(activeInfo, addr, container) {\n  var path = activeInfo.name,\n      pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n  RePathPart.lastIndex = 0;\n\n  while (true) {\n    var match = RePathPart.exec(path),\n        matchEnd = RePathPart.lastIndex,\n        id = match[1],\n        idIsIndex = match[2] === ']',\n        subscript = match[3];\n    if (idIsIndex) id = id | 0; // convert to integer\n\n    if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n      // bare name or \"pure\" bottom-level array \"[0]\" suffix\n      addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n      break;\n    } else {\n      // step into inner node / create it in case it doesn't exist\n      var map = container.map,\n          next = map[id];\n\n      if (next === undefined) {\n        next = new StructuredUniform(id);\n        addUniform(container, next);\n      }\n\n      container = next;\n    }\n  }\n} // Root Container\n\n\nfunction WebGLUniforms(gl, program, renderer) {\n  UniformContainer.call(this);\n  this.renderer = renderer;\n  var n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (var i = 0; i < n; ++i) {\n    var info = gl.getActiveUniform(program, i),\n        addr = gl.getUniformLocation(program, info.name);\n    parseUniform(info, addr, this);\n  }\n}\n\nWebGLUniforms.prototype.setValue = function (gl, name, value) {\n  var u = this.map[name];\n  if (u !== undefined) u.setValue(gl, value, this.renderer);\n};\n\nWebGLUniforms.prototype.setOptional = function (gl, object, name) {\n  var v = object[name];\n  if (v !== undefined) this.setValue(gl, name, v);\n}; // Static interface\n\n\nWebGLUniforms.upload = function (gl, seq, values, renderer) {\n  for (var i = 0, n = seq.length; i !== n; ++i) {\n    var u = seq[i],\n        v = values[u.id];\n\n    if (v.needsUpdate !== false) {\n      // note: always updating when .needsUpdate is undefined\n      u.setValue(gl, v.value, renderer);\n    }\n  }\n};\n\nWebGLUniforms.seqWithValue = function (seq, values) {\n  var r = [];\n\n  for (var i = 0, n = seq.length; i !== n; ++i) {\n    var u = seq[i];\n    if (u.id in values) r.push(u);\n  }\n\n  return r;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction addLineNumbers(string) {\n  var lines = string.split('\\n');\n\n  for (var i = 0; i < lines.length; i++) {\n    lines[i] = i + 1 + ': ' + lines[i];\n  }\n\n  return lines.join('\\n');\n}\n\nfunction WebGLShader(gl, type, string) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, string);\n  gl.compileShader(shader);\n\n  if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n    console.error('THREE.WebGLShader: Shader couldn\\'t compile.');\n  }\n\n  if (gl.getShaderInfoLog(shader) !== '') {\n    console.warn('THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog(shader), addLineNumbers(string));\n  } // --enable-privileged-webgl-extension\n  // console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n  return shader;\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents(encoding) {\n  switch (encoding) {\n    case LinearEncoding:\n      return ['Linear', '( value )'];\n\n    case sRGBEncoding:\n      return ['sRGB', '( value )'];\n\n    case RGBEEncoding:\n      return ['RGBE', '( value )'];\n\n    case RGBM7Encoding:\n      return ['RGBM', '( value, 7.0 )'];\n\n    case RGBM16Encoding:\n      return ['RGBM', '( value, 16.0 )'];\n\n    case RGBDEncoding:\n      return ['RGBD', '( value, 256.0 )'];\n\n    case GammaEncoding:\n      return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n    default:\n      throw new Error('unsupported encoding: ' + encoding);\n  }\n}\n\nfunction getTexelDecodingFunction(functionName, encoding) {\n  var components = getEncodingComponents(encoding);\n  return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n}\n\nfunction getTexelEncodingFunction(functionName, encoding) {\n  var components = getEncodingComponents(encoding);\n  return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n}\n\nfunction getToneMappingFunction(functionName, toneMapping) {\n  var toneMappingName;\n\n  switch (toneMapping) {\n    case LinearToneMapping:\n      toneMappingName = 'Linear';\n      break;\n\n    case ReinhardToneMapping:\n      toneMappingName = 'Reinhard';\n      break;\n\n    case Uncharted2ToneMapping:\n      toneMappingName = 'Uncharted2';\n      break;\n\n    case CineonToneMapping:\n      toneMappingName = 'OptimizedCineon';\n      break;\n\n    default:\n      throw new Error('unsupported toneMapping: ' + toneMapping);\n  }\n\n  return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n}\n\nfunction generateExtensions(extensions, parameters, rendererExtensions) {\n  extensions = extensions || {};\n  var chunks = [extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap && !parameters.objectSpaceNormalMap || parameters.flatShading ? '#extension GL_OES_standard_derivatives : enable' : '', (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', extensions.drawBuffers && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '', (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n  return chunks.filter(filterEmptyLine).join('\\n');\n}\n\nfunction generateDefines(defines) {\n  var chunks = [];\n\n  for (var name in defines) {\n    var value = defines[name];\n    if (value === false) continue;\n    chunks.push('#define ' + name + ' ' + value);\n  }\n\n  return chunks.join('\\n');\n}\n\nfunction fetchAttributeLocations(gl, program) {\n  var attributes = {};\n  var n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (var i = 0; i < n; i++) {\n    var info = gl.getActiveAttrib(program, i);\n    var name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n    attributes[name] = gl.getAttribLocation(program, name);\n  }\n\n  return attributes;\n}\n\nfunction filterEmptyLine(string) {\n  return string !== '';\n}\n\nfunction replaceLightNums(string, parameters) {\n  return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights);\n}\n\nfunction replaceClippingPlaneNums(string, parameters) {\n  return string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n}\n\nfunction parseIncludes(string) {\n  var pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n  function replace(match, include) {\n    var replace = ShaderChunk[include];\n\n    if (replace === undefined) {\n      throw new Error('Can not resolve #include <' + include + '>');\n    }\n\n    return parseIncludes(replace);\n  }\n\n  return string.replace(pattern, replace);\n}\n\nfunction unrollLoops(string) {\n  var pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n  function replace(match, start, end, snippet) {\n    var unroll = '';\n\n    for (var i = parseInt(start); i < parseInt(end); i++) {\n      unroll += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]');\n    }\n\n    return unroll;\n  }\n\n  return string.replace(pattern, replace);\n}\n\nfunction WebGLProgram(renderer, extensions, code, material, shader, parameters) {\n  var gl = renderer.context;\n  var defines = material.defines;\n  var vertexShader = shader.vertexShader;\n  var fragmentShader = shader.fragmentShader;\n  var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n  if (parameters.shadowMapType === PCFShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n  } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n  }\n\n  var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n  var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n  var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n  if (parameters.envMap) {\n    switch (material.envMap.mapping) {\n      case CubeReflectionMapping:\n      case CubeRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n        break;\n\n      case CubeUVReflectionMapping:\n      case CubeUVRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n        break;\n\n      case EquirectangularReflectionMapping:\n      case EquirectangularRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n        break;\n\n      case SphericalReflectionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n        break;\n    }\n\n    switch (material.envMap.mapping) {\n      case CubeRefractionMapping:\n      case EquirectangularRefractionMapping:\n        envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n        break;\n    }\n\n    switch (material.combine) {\n      case MultiplyOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n        break;\n\n      case MixOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n        break;\n\n      case AddOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n        break;\n    }\n  }\n\n  var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0; // console.log( 'building new program ' );\n  //\n\n  var customExtensions = generateExtensions(material.extensions, parameters, extensions);\n  var customDefines = generateDefines(defines); //\n\n  var program = gl.createProgram();\n  var prefixVertex, prefixFragment;\n\n  if (material.isRawShaderMaterial) {\n    prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n    if (prefixVertex.length > 0) {\n      prefixVertex += '\\n';\n    }\n\n    prefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n    if (prefixFragment.length > 0) {\n      prefixFragment += '\\n';\n    }\n  } else {\n    prefixVertex = ['precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n    prefixFragment = [customExtensions, 'precision ' + parameters.precision + ' float;', 'precision ' + parameters.precision + ' int;', '#define SHADER_NAME ' + shader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0') : '', // add '.0' if integer\n    '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && extensions.get('EXT_frag_depth') ? '#define USE_LOGDEPTHBUF_EXT' : '', parameters.envMap && extensions.get('EXT_shader_texture_lod') ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n    parameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ? ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n    parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.outputEncoding ? getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding) : '', parameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n  }\n\n  vertexShader = parseIncludes(vertexShader);\n  vertexShader = replaceLightNums(vertexShader, parameters);\n  vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n  fragmentShader = parseIncludes(fragmentShader);\n  fragmentShader = replaceLightNums(fragmentShader, parameters);\n  fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n  vertexShader = unrollLoops(vertexShader);\n  fragmentShader = unrollLoops(fragmentShader);\n  var vertexGlsl = prefixVertex + vertexShader;\n  var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n  // console.log( '*FRAGMENT*', fragmentGlsl );\n\n  var glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n  var glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n  gl.attachShader(program, glVertexShader);\n  gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n  if (material.index0AttributeName !== undefined) {\n    gl.bindAttribLocation(program, 0, material.index0AttributeName);\n  } else if (parameters.morphTargets === true) {\n    // programs with morphTargets displace position out of attribute 0\n    gl.bindAttribLocation(program, 0, 'position');\n  }\n\n  gl.linkProgram(program);\n  var programLog = gl.getProgramInfoLog(program).trim();\n  var vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n  var fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n  var runnable = true;\n  var haveDiagnostics = true; // console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n  // console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n  if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n    runnable = false;\n    console.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog);\n  } else if (programLog !== '') {\n    console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n  } else if (vertexLog === '' || fragmentLog === '') {\n    haveDiagnostics = false;\n  }\n\n  if (haveDiagnostics) {\n    this.diagnostics = {\n      runnable: runnable,\n      material: material,\n      programLog: programLog,\n      vertexShader: {\n        log: vertexLog,\n        prefix: prefixVertex\n      },\n      fragmentShader: {\n        log: fragmentLog,\n        prefix: prefixFragment\n      }\n    };\n  } // clean up\n\n\n  gl.deleteShader(glVertexShader);\n  gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n  var cachedUniforms;\n\n  this.getUniforms = function () {\n    if (cachedUniforms === undefined) {\n      cachedUniforms = new WebGLUniforms(gl, program, renderer);\n    }\n\n    return cachedUniforms;\n  }; // set up caching for attribute locations\n\n\n  var cachedAttributes;\n\n  this.getAttributes = function () {\n    if (cachedAttributes === undefined) {\n      cachedAttributes = fetchAttributeLocations(gl, program);\n    }\n\n    return cachedAttributes;\n  }; // free resource\n\n\n  this.destroy = function () {\n    gl.deleteProgram(program);\n    this.program = undefined;\n  }; // DEPRECATED\n\n\n  Object.defineProperties(this, {\n    uniforms: {\n      get: function () {\n        console.warn('THREE.WebGLProgram: .uniforms is now .getUniforms().');\n        return this.getUniforms();\n      }\n    },\n    attributes: {\n      get: function () {\n        console.warn('THREE.WebGLProgram: .attributes is now .getAttributes().');\n        return this.getAttributes();\n      }\n    }\n  }); //\n\n  this.name = shader.name;\n  this.id = programIdCount++;\n  this.code = code;\n  this.usedTimes = 1;\n  this.program = program;\n  this.vertexShader = glVertexShader;\n  this.fragmentShader = glFragmentShader;\n  return this;\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLPrograms(renderer, extensions, capabilities) {\n  var programs = [];\n  var shaderIDs = {\n    MeshDepthMaterial: 'depth',\n    MeshDistanceMaterial: 'distanceRGBA',\n    MeshNormalMaterial: 'normal',\n    MeshBasicMaterial: 'basic',\n    MeshLambertMaterial: 'lambert',\n    MeshPhongMaterial: 'phong',\n    MeshToonMaterial: 'phong',\n    MeshStandardMaterial: 'physical',\n    MeshPhysicalMaterial: 'physical',\n    LineBasicMaterial: 'basic',\n    LineDashedMaterial: 'dashed',\n    PointsMaterial: 'points',\n    ShadowMaterial: 'shadow'\n  };\n  var parameterNames = [\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"gradientMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\", \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights', \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"];\n\n  function allocateBones(object) {\n    var skeleton = object.skeleton;\n    var bones = skeleton.bones;\n\n    if (capabilities.floatVertexTextures) {\n      return 1024;\n    } else {\n      // default for when object is not specified\n      // ( for example when prebuilding shader to be used with multiple objects )\n      //\n      //  - leave some extra space for other uniforms\n      //  - limit here is ANGLE's 254 max uniform vectors\n      //    (up to 54 should be safe)\n      var nVertexUniforms = capabilities.maxVertexUniforms;\n      var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n      var maxBones = Math.min(nVertexMatrices, bones.length);\n\n      if (maxBones < bones.length) {\n        console.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n        return 0;\n      }\n\n      return maxBones;\n    }\n  }\n\n  function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n    var encoding;\n\n    if (!map) {\n      encoding = LinearEncoding;\n    } else if (map.isTexture) {\n      encoding = map.encoding;\n    } else if (map.isWebGLRenderTarget) {\n      console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n      encoding = map.texture.encoding;\n    } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\n\n    if (encoding === LinearEncoding && gammaOverrideLinear) {\n      encoding = GammaEncoding;\n    }\n\n    return encoding;\n  }\n\n  this.getParameters = function (material, lights, shadows, fog, nClipPlanes, nClipIntersection, object) {\n    var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n    var maxBones = object.isSkinnedMesh ? allocateBones(object) : 0;\n    var precision = capabilities.precision;\n\n    if (material.precision !== null) {\n      precision = capabilities.getMaxPrecision(material.precision);\n\n      if (precision !== material.precision) {\n        console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n      }\n    }\n\n    var currentRenderTarget = renderer.getRenderTarget();\n    var parameters = {\n      shaderID: shaderID,\n      precision: precision,\n      supportsVertexTextures: capabilities.vertexTextures,\n      outputEncoding: getTextureEncodingFromMap(!currentRenderTarget ? null : currentRenderTarget.texture, renderer.gammaOutput),\n      map: !!material.map,\n      mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n      envMap: !!material.envMap,\n      envMapMode: material.envMap && material.envMap.mapping,\n      envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n      envMapCubeUV: !!material.envMap && (material.envMap.mapping === CubeUVReflectionMapping || material.envMap.mapping === CubeUVRefractionMapping),\n      lightMap: !!material.lightMap,\n      aoMap: !!material.aoMap,\n      emissiveMap: !!material.emissiveMap,\n      emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n      bumpMap: !!material.bumpMap,\n      normalMap: !!material.normalMap,\n      objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n      displacementMap: !!material.displacementMap,\n      roughnessMap: !!material.roughnessMap,\n      metalnessMap: !!material.metalnessMap,\n      specularMap: !!material.specularMap,\n      alphaMap: !!material.alphaMap,\n      gradientMap: !!material.gradientMap,\n      combine: material.combine,\n      vertexColors: material.vertexColors,\n      fog: !!fog,\n      useFog: material.fog,\n      fogExp: fog && fog.isFogExp2,\n      flatShading: material.flatShading,\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n      skinning: material.skinning && maxBones > 0,\n      maxBones: maxBones,\n      useVertexTexture: capabilities.floatVertexTextures,\n      morphTargets: material.morphTargets,\n      morphNormals: material.morphNormals,\n      maxMorphTargets: renderer.maxMorphTargets,\n      maxMorphNormals: renderer.maxMorphNormals,\n      numDirLights: lights.directional.length,\n      numPointLights: lights.point.length,\n      numSpotLights: lights.spot.length,\n      numRectAreaLights: lights.rectArea.length,\n      numHemiLights: lights.hemi.length,\n      numClippingPlanes: nClipPlanes,\n      numClipIntersection: nClipIntersection,\n      dithering: material.dithering,\n      shadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n      shadowMapType: renderer.shadowMap.type,\n      toneMapping: renderer.toneMapping,\n      physicallyCorrectLights: renderer.physicallyCorrectLights,\n      premultipliedAlpha: material.premultipliedAlpha,\n      alphaTest: material.alphaTest,\n      doubleSided: material.side === DoubleSide,\n      flipSided: material.side === BackSide,\n      depthPacking: material.depthPacking !== undefined ? material.depthPacking : false\n    };\n    return parameters;\n  };\n\n  this.getProgramCode = function (material, parameters) {\n    var array = [];\n\n    if (parameters.shaderID) {\n      array.push(parameters.shaderID);\n    } else {\n      array.push(material.fragmentShader);\n      array.push(material.vertexShader);\n    }\n\n    if (material.defines !== undefined) {\n      for (var name in material.defines) {\n        array.push(name);\n        array.push(material.defines[name]);\n      }\n    }\n\n    for (var i = 0; i < parameterNames.length; i++) {\n      array.push(parameters[parameterNames[i]]);\n    }\n\n    array.push(material.onBeforeCompile.toString());\n    array.push(renderer.gammaOutput);\n    return array.join();\n  };\n\n  this.acquireProgram = function (material, shader, parameters, code) {\n    var program; // Check if code has been already compiled\n\n    for (var p = 0, pl = programs.length; p < pl; p++) {\n      var programInfo = programs[p];\n\n      if (programInfo.code === code) {\n        program = programInfo;\n        ++program.usedTimes;\n        break;\n      }\n    }\n\n    if (program === undefined) {\n      program = new WebGLProgram(renderer, extensions, code, material, shader, parameters);\n      programs.push(program);\n    }\n\n    return program;\n  };\n\n  this.releaseProgram = function (program) {\n    if (--program.usedTimes === 0) {\n      // Remove from unordered set\n      var i = programs.indexOf(program);\n      programs[i] = programs[programs.length - 1];\n      programs.pop(); // Free WebGL resources\n\n      program.destroy();\n    }\n  }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n  this.programs = programs;\n}\n/**\n * @author fordacious / fordacious.github.io\n */\n\n\nfunction WebGLProperties() {\n  var properties = new WeakMap();\n\n  function get(object) {\n    var map = properties.get(object);\n\n    if (map === undefined) {\n      map = {};\n      properties.set(object, map);\n    }\n\n    return map;\n  }\n\n  function remove(object) {\n    properties.delete(object);\n  }\n\n  function update(object, key, value) {\n    properties.get(object)[key] = value;\n  }\n\n  function dispose() {\n    properties = new WeakMap();\n  }\n\n  return {\n    get: get,\n    remove: remove,\n    update: update,\n    dispose: dispose\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction painterSortStable(a, b) {\n  if (a.renderOrder !== b.renderOrder) {\n    return a.renderOrder - b.renderOrder;\n  } else if (a.program && b.program && a.program !== b.program) {\n    return a.program.id - b.program.id;\n  } else if (a.material.id !== b.material.id) {\n    return a.material.id - b.material.id;\n  } else if (a.z !== b.z) {\n    return a.z - b.z;\n  } else {\n    return a.id - b.id;\n  }\n}\n\nfunction reversePainterSortStable(a, b) {\n  if (a.renderOrder !== b.renderOrder) {\n    return a.renderOrder - b.renderOrder;\n  }\n\n  if (a.z !== b.z) {\n    return b.z - a.z;\n  } else {\n    return a.id - b.id;\n  }\n}\n\nfunction WebGLRenderList() {\n  var renderItems = [];\n  var renderItemsIndex = 0;\n  var opaque = [];\n  var transparent = [];\n\n  function init() {\n    renderItemsIndex = 0;\n    opaque.length = 0;\n    transparent.length = 0;\n  }\n\n  function push(object, geometry, material, z, group) {\n    var renderItem = renderItems[renderItemsIndex];\n\n    if (renderItem === undefined) {\n      renderItem = {\n        id: object.id,\n        object: object,\n        geometry: geometry,\n        material: material,\n        program: material.program,\n        renderOrder: object.renderOrder,\n        z: z,\n        group: group\n      };\n      renderItems[renderItemsIndex] = renderItem;\n    } else {\n      renderItem.id = object.id;\n      renderItem.object = object;\n      renderItem.geometry = geometry;\n      renderItem.material = material;\n      renderItem.program = material.program;\n      renderItem.renderOrder = object.renderOrder;\n      renderItem.z = z;\n      renderItem.group = group;\n    }\n\n    (material.transparent === true ? transparent : opaque).push(renderItem);\n    renderItemsIndex++;\n  }\n\n  function sort() {\n    if (opaque.length > 1) opaque.sort(painterSortStable);\n    if (transparent.length > 1) transparent.sort(reversePainterSortStable);\n  }\n\n  return {\n    opaque: opaque,\n    transparent: transparent,\n    init: init,\n    push: push,\n    sort: sort\n  };\n}\n\nfunction WebGLRenderLists() {\n  var lists = {};\n\n  function get(scene, camera) {\n    var hash = scene.id + ',' + camera.id;\n    var list = lists[hash];\n\n    if (list === undefined) {\n      // console.log( 'THREE.WebGLRenderLists:', hash );\n      list = new WebGLRenderList();\n      lists[hash] = list;\n    }\n\n    return list;\n  }\n\n  function dispose() {\n    lists = {};\n  }\n\n  return {\n    get: get,\n    dispose: dispose\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction UniformsCache() {\n  var lights = {};\n  return {\n    get: function (light) {\n      if (lights[light.id] !== undefined) {\n        return lights[light.id];\n      }\n\n      var uniforms;\n\n      switch (light.type) {\n        case 'DirectionalLight':\n          uniforms = {\n            direction: new Vector3(),\n            color: new Color(),\n            shadow: false,\n            shadowBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2()\n          };\n          break;\n\n        case 'SpotLight':\n          uniforms = {\n            position: new Vector3(),\n            direction: new Vector3(),\n            color: new Color(),\n            distance: 0,\n            coneCos: 0,\n            penumbraCos: 0,\n            decay: 0,\n            shadow: false,\n            shadowBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2()\n          };\n          break;\n\n        case 'PointLight':\n          uniforms = {\n            position: new Vector3(),\n            color: new Color(),\n            distance: 0,\n            decay: 0,\n            shadow: false,\n            shadowBias: 0,\n            shadowRadius: 1,\n            shadowMapSize: new Vector2(),\n            shadowCameraNear: 1,\n            shadowCameraFar: 1000\n          };\n          break;\n\n        case 'HemisphereLight':\n          uniforms = {\n            direction: new Vector3(),\n            skyColor: new Color(),\n            groundColor: new Color()\n          };\n          break;\n\n        case 'RectAreaLight':\n          uniforms = {\n            color: new Color(),\n            position: new Vector3(),\n            halfWidth: new Vector3(),\n            halfHeight: new Vector3() // TODO (abelnation): set RectAreaLight shadow uniforms\n\n          };\n          break;\n      }\n\n      lights[light.id] = uniforms;\n      return uniforms;\n    }\n  };\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n  var cache = new UniformsCache();\n  var state = {\n    id: count++,\n    hash: '',\n    ambient: [0, 0, 0],\n    directional: [],\n    directionalShadowMap: [],\n    directionalShadowMatrix: [],\n    spot: [],\n    spotShadowMap: [],\n    spotShadowMatrix: [],\n    rectArea: [],\n    point: [],\n    pointShadowMap: [],\n    pointShadowMatrix: [],\n    hemi: []\n  };\n  var vector3 = new Vector3();\n  var matrix4 = new Matrix4();\n  var matrix42 = new Matrix4();\n\n  function setup(lights, shadows, camera) {\n    var r = 0,\n        g = 0,\n        b = 0;\n    var directionalLength = 0;\n    var pointLength = 0;\n    var spotLength = 0;\n    var rectAreaLength = 0;\n    var hemiLength = 0;\n    var viewMatrix = camera.matrixWorldInverse;\n\n    for (var i = 0, l = lights.length; i < l; i++) {\n      var light = lights[i];\n      var color = light.color;\n      var intensity = light.intensity;\n      var distance = light.distance;\n      var shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n      if (light.isAmbientLight) {\n        r += color.r * intensity;\n        g += color.g * intensity;\n        b += color.b * intensity;\n      } else if (light.isDirectionalLight) {\n        var uniforms = cache.get(light);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          var shadow = light.shadow;\n          uniforms.shadowBias = shadow.bias;\n          uniforms.shadowRadius = shadow.radius;\n          uniforms.shadowMapSize = shadow.mapSize;\n        }\n\n        state.directionalShadowMap[directionalLength] = shadowMap;\n        state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n        state.directional[directionalLength] = uniforms;\n        directionalLength++;\n      } else if (light.isSpotLight) {\n        var uniforms = cache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(color).multiplyScalar(intensity);\n        uniforms.distance = distance;\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        vector3.setFromMatrixPosition(light.target.matrixWorld);\n        uniforms.direction.sub(vector3);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.coneCos = Math.cos(light.angle);\n        uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          var shadow = light.shadow;\n          uniforms.shadowBias = shadow.bias;\n          uniforms.shadowRadius = shadow.radius;\n          uniforms.shadowMapSize = shadow.mapSize;\n        }\n\n        state.spotShadowMap[spotLength] = shadowMap;\n        state.spotShadowMatrix[spotLength] = light.shadow.matrix;\n        state.spot[spotLength] = uniforms;\n        spotLength++;\n      } else if (light.isRectAreaLight) {\n        var uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n        //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n        // (b) intensity is the brightness of the light\n\n        uniforms.color.copy(color).multiplyScalar(intensity);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n        matrix42.identity();\n        matrix4.copy(light.matrixWorld);\n        matrix4.premultiply(viewMatrix);\n        matrix42.extractRotation(matrix4);\n        uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n        uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n        uniforms.halfWidth.applyMatrix4(matrix42);\n        uniforms.halfHeight.applyMatrix4(matrix42); // TODO (abelnation): RectAreaLight distance?\n        // uniforms.distance = distance;\n\n        state.rectArea[rectAreaLength] = uniforms;\n        rectAreaLength++;\n      } else if (light.isPointLight) {\n        var uniforms = cache.get(light);\n        uniforms.position.setFromMatrixPosition(light.matrixWorld);\n        uniforms.position.applyMatrix4(viewMatrix);\n        uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n        uniforms.distance = light.distance;\n        uniforms.decay = light.distance === 0 ? 0.0 : light.decay;\n        uniforms.shadow = light.castShadow;\n\n        if (light.castShadow) {\n          var shadow = light.shadow;\n          uniforms.shadowBias = shadow.bias;\n          uniforms.shadowRadius = shadow.radius;\n          uniforms.shadowMapSize = shadow.mapSize;\n          uniforms.shadowCameraNear = shadow.camera.near;\n          uniforms.shadowCameraFar = shadow.camera.far;\n        }\n\n        state.pointShadowMap[pointLength] = shadowMap;\n        state.pointShadowMatrix[pointLength] = light.shadow.matrix;\n        state.point[pointLength] = uniforms;\n        pointLength++;\n      } else if (light.isHemisphereLight) {\n        var uniforms = cache.get(light);\n        uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n        uniforms.direction.transformDirection(viewMatrix);\n        uniforms.direction.normalize();\n        uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n        uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n        state.hemi[hemiLength] = uniforms;\n        hemiLength++;\n      }\n    }\n\n    state.ambient[0] = r;\n    state.ambient[1] = g;\n    state.ambient[2] = b;\n    state.directional.length = directionalLength;\n    state.spot.length = spotLength;\n    state.rectArea.length = rectAreaLength;\n    state.point.length = pointLength;\n    state.hemi.length = hemiLength;\n    state.hash = state.id + ',' + directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n  }\n\n  return {\n    setup: setup,\n    state: state\n  };\n}\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n\nfunction WebGLRenderState() {\n  var lights = new WebGLLights();\n  var lightsArray = [];\n  var shadowsArray = [];\n  var spritesArray = [];\n\n  function init() {\n    lightsArray.length = 0;\n    shadowsArray.length = 0;\n    spritesArray.length = 0;\n  }\n\n  function pushLight(light) {\n    lightsArray.push(light);\n  }\n\n  function pushShadow(shadowLight) {\n    shadowsArray.push(shadowLight);\n  }\n\n  function pushSprite(sprite) {\n    spritesArray.push(sprite);\n  }\n\n  function setupLights(camera) {\n    lights.setup(lightsArray, shadowsArray, camera);\n  }\n\n  var state = {\n    lightsArray: lightsArray,\n    shadowsArray: shadowsArray,\n    spritesArray: spritesArray,\n    lights: lights\n  };\n  return {\n    init: init,\n    state: state,\n    setupLights: setupLights,\n    pushLight: pushLight,\n    pushShadow: pushShadow,\n    pushSprite: pushSprite\n  };\n}\n\nfunction WebGLRenderStates() {\n  var renderStates = {};\n\n  function get(scene, camera) {\n    var hash = scene.id + ',' + camera.id;\n    var renderState = renderStates[hash];\n\n    if (renderState === undefined) {\n      renderState = new WebGLRenderState();\n      renderStates[hash] = renderState;\n    }\n\n    return renderState;\n  }\n\n  function dispose() {\n    renderStates = {};\n  }\n\n  return {\n    get: get,\n    dispose: dispose\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\n\nfunction MeshDepthMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshDepthMaterial';\n  this.depthPacking = BasicDepthPacking;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.map = null;\n  this.alphaMap = null;\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false;\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nMeshDepthMaterial.prototype = Object.create(Material.prototype);\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.depthPacking = source.depthPacking;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.map = source.map;\n  this.alphaMap = source.alphaMap;\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  return this;\n};\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\n\nfunction MeshDistanceMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshDistanceMaterial';\n  this.referencePosition = new Vector3();\n  this.nearDistance = 1;\n  this.farDistance = 1000;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.map = null;\n  this.alphaMap = null;\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.fog = false;\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nMeshDistanceMaterial.prototype = Object.create(Material.prototype);\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.referencePosition.copy(source.referencePosition);\n  this.nearDistance = source.nearDistance;\n  this.farDistance = source.farDistance;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.map = source.map;\n  this.alphaMap = source.alphaMap;\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  return this;\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLShadowMap(_renderer, _objects, maxTextureSize) {\n  var _frustum = new Frustum(),\n      _projScreenMatrix = new Matrix4(),\n      _shadowMapSize = new Vector2(),\n      _maxShadowMapSize = new Vector2(maxTextureSize, maxTextureSize),\n      _lookTarget = new Vector3(),\n      _lightPositionWorld = new Vector3(),\n      _MorphingFlag = 1,\n      _SkinningFlag = 2,\n      _NumberOfMaterialVariants = (_MorphingFlag | _SkinningFlag) + 1,\n      _depthMaterials = new Array(_NumberOfMaterialVariants),\n      _distanceMaterials = new Array(_NumberOfMaterialVariants),\n      _materialCache = {};\n\n  var shadowSide = {\n    0: BackSide,\n    1: FrontSide,\n    2: DoubleSide\n  };\n  var cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n  var cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n  var cube2DViewPorts = [new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4(), new Vector4()]; // init\n\n  for (var i = 0; i !== _NumberOfMaterialVariants; ++i) {\n    var useMorphing = (i & _MorphingFlag) !== 0;\n    var useSkinning = (i & _SkinningFlag) !== 0;\n    var depthMaterial = new MeshDepthMaterial({\n      depthPacking: RGBADepthPacking,\n      morphTargets: useMorphing,\n      skinning: useSkinning\n    });\n    _depthMaterials[i] = depthMaterial; //\n\n    var distanceMaterial = new MeshDistanceMaterial({\n      morphTargets: useMorphing,\n      skinning: useSkinning\n    });\n    _distanceMaterials[i] = distanceMaterial;\n  } //\n\n\n  var scope = this;\n  this.enabled = false;\n  this.autoUpdate = true;\n  this.needsUpdate = false;\n  this.type = PCFShadowMap;\n\n  this.render = function (lights, scene, camera) {\n    if (scope.enabled === false) return;\n    if (scope.autoUpdate === false && scope.needsUpdate === false) return;\n    if (lights.length === 0) return; // TODO Clean up (needed in case of contextlost)\n\n    var _gl = _renderer.context;\n    var _state = _renderer.state; // Set GL state for depth map.\n\n    _state.disable(_gl.BLEND);\n\n    _state.buffers.color.setClear(1, 1, 1, 1);\n\n    _state.buffers.depth.setTest(true);\n\n    _state.setScissorTest(false); // render depth map\n\n\n    var faceCount;\n\n    for (var i = 0, il = lights.length; i < il; i++) {\n      var light = lights[i];\n      var shadow = light.shadow;\n      var isPointLight = light && light.isPointLight;\n\n      if (shadow === undefined) {\n        console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n        continue;\n      }\n\n      var shadowCamera = shadow.camera;\n\n      _shadowMapSize.copy(shadow.mapSize);\n\n      _shadowMapSize.min(_maxShadowMapSize);\n\n      if (isPointLight) {\n        var vpWidth = _shadowMapSize.x;\n        var vpHeight = _shadowMapSize.y; // These viewports map a cube-map onto a 2D texture with the\n        // following orientation:\n        //\n        //  xzXZ\n        //   y Y\n        //\n        // X - Positive x direction\n        // x - Negative x direction\n        // Y - Positive y direction\n        // y - Negative y direction\n        // Z - Positive z direction\n        // z - Negative z direction\n        // positive X\n\n        cube2DViewPorts[0].set(vpWidth * 2, vpHeight, vpWidth, vpHeight); // negative X\n\n        cube2DViewPorts[1].set(0, vpHeight, vpWidth, vpHeight); // positive Z\n\n        cube2DViewPorts[2].set(vpWidth * 3, vpHeight, vpWidth, vpHeight); // negative Z\n\n        cube2DViewPorts[3].set(vpWidth, vpHeight, vpWidth, vpHeight); // positive Y\n\n        cube2DViewPorts[4].set(vpWidth * 3, 0, vpWidth, vpHeight); // negative Y\n\n        cube2DViewPorts[5].set(vpWidth, 0, vpWidth, vpHeight);\n        _shadowMapSize.x *= 4.0;\n        _shadowMapSize.y *= 2.0;\n      }\n\n      if (shadow.map === null) {\n        var pars = {\n          minFilter: NearestFilter,\n          magFilter: NearestFilter,\n          format: RGBAFormat\n        };\n        shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n        shadow.map.texture.name = light.name + \".shadowMap\";\n        shadowCamera.updateProjectionMatrix();\n      }\n\n      if (shadow.isSpotLightShadow) {\n        shadow.update(light);\n      }\n\n      var shadowMap = shadow.map;\n      var shadowMatrix = shadow.matrix;\n\n      _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n      shadowCamera.position.copy(_lightPositionWorld);\n\n      if (isPointLight) {\n        faceCount = 6; // for point lights we set the shadow matrix to be a translation-only matrix\n        // equal to inverse of the light's position\n\n        shadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n      } else {\n        faceCount = 1;\n\n        _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n\n        shadowCamera.lookAt(_lookTarget);\n        shadowCamera.updateMatrixWorld(); // compute shadow matrix\n\n        shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n        shadowMatrix.multiply(shadowCamera.projectionMatrix);\n        shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n      }\n\n      _renderer.setRenderTarget(shadowMap);\n\n      _renderer.clear(); // render shadow map for each cube face (if omni-directional) or\n      // run a single pass if not\n\n\n      for (var face = 0; face < faceCount; face++) {\n        if (isPointLight) {\n          _lookTarget.copy(shadowCamera.position);\n\n          _lookTarget.add(cubeDirections[face]);\n\n          shadowCamera.up.copy(cubeUps[face]);\n          shadowCamera.lookAt(_lookTarget);\n          shadowCamera.updateMatrixWorld();\n          var vpDimensions = cube2DViewPorts[face];\n\n          _state.viewport(vpDimensions);\n        } // update camera matrices and frustum\n\n\n        _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n        _frustum.setFromMatrix(_projScreenMatrix); // set object matrices & frustum culling\n\n\n        renderObject(scene, camera, shadowCamera, isPointLight);\n      }\n    }\n\n    scope.needsUpdate = false;\n  };\n\n  function getDepthMaterial(object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar) {\n    var geometry = object.geometry;\n    var result = null;\n    var materialVariants = _depthMaterials;\n    var customMaterial = object.customDepthMaterial;\n\n    if (isPointLight) {\n      materialVariants = _distanceMaterials;\n      customMaterial = object.customDistanceMaterial;\n    }\n\n    if (!customMaterial) {\n      var useMorphing = false;\n\n      if (material.morphTargets) {\n        if (geometry && geometry.isBufferGeometry) {\n          useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n        } else if (geometry && geometry.isGeometry) {\n          useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n        }\n      }\n\n      if (object.isSkinnedMesh && material.skinning === false) {\n        console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object);\n      }\n\n      var useSkinning = object.isSkinnedMesh && material.skinning;\n      var variantIndex = 0;\n      if (useMorphing) variantIndex |= _MorphingFlag;\n      if (useSkinning) variantIndex |= _SkinningFlag;\n      result = materialVariants[variantIndex];\n    } else {\n      result = customMaterial;\n    }\n\n    if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n      // in this case we need a unique material instance reflecting the\n      // appropriate state\n      var keyA = result.uuid,\n          keyB = material.uuid;\n      var materialsForVariant = _materialCache[keyA];\n\n      if (materialsForVariant === undefined) {\n        materialsForVariant = {};\n        _materialCache[keyA] = materialsForVariant;\n      }\n\n      var cachedMaterial = materialsForVariant[keyB];\n\n      if (cachedMaterial === undefined) {\n        cachedMaterial = result.clone();\n        materialsForVariant[keyB] = cachedMaterial;\n      }\n\n      result = cachedMaterial;\n    }\n\n    result.visible = material.visible;\n    result.wireframe = material.wireframe;\n    result.side = material.shadowSide != null ? material.shadowSide : shadowSide[material.side];\n    result.clipShadows = material.clipShadows;\n    result.clippingPlanes = material.clippingPlanes;\n    result.clipIntersection = material.clipIntersection;\n    result.wireframeLinewidth = material.wireframeLinewidth;\n    result.linewidth = material.linewidth;\n\n    if (isPointLight && result.isMeshDistanceMaterial) {\n      result.referencePosition.copy(lightPositionWorld);\n      result.nearDistance = shadowCameraNear;\n      result.farDistance = shadowCameraFar;\n    }\n\n    return result;\n  }\n\n  function renderObject(object, camera, shadowCamera, isPointLight) {\n    if (object.visible === false) return;\n    var visible = object.layers.test(camera.layers);\n\n    if (visible && (object.isMesh || object.isLine || object.isPoints)) {\n      if (object.castShadow && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n        object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n        var geometry = _objects.update(object);\n\n        var material = object.material;\n\n        if (Array.isArray(material)) {\n          var groups = geometry.groups;\n\n          for (var k = 0, kl = groups.length; k < kl; k++) {\n            var group = groups[k];\n            var groupMaterial = material[group.materialIndex];\n\n            if (groupMaterial && groupMaterial.visible) {\n              var depthMaterial = getDepthMaterial(object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far);\n\n              _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n            }\n          }\n        } else if (material.visible) {\n          var depthMaterial = getDepthMaterial(object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far);\n\n          _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      renderObject(children[i], camera, shadowCamera, isPointLight);\n    }\n  }\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CanvasTexture(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  Texture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.needsUpdate = true;\n}\n\nCanvasTexture.prototype = Object.create(Texture.prototype);\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLSpriteRenderer(renderer, gl, state, textures, capabilities) {\n  var vertexBuffer, elementBuffer;\n  var program, attributes, uniforms;\n  var texture; // decompose matrixWorld\n\n  var spritePosition = new Vector3();\n  var spriteRotation = new Quaternion();\n  var spriteScale = new Vector3();\n\n  function init() {\n    var vertices = new Float32Array([-0.5, -0.5, 0, 0, 0.5, -0.5, 1, 0, 0.5, 0.5, 1, 1, -0.5, 0.5, 0, 1]);\n    var faces = new Uint16Array([0, 1, 2, 0, 2, 3]);\n    vertexBuffer = gl.createBuffer();\n    elementBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW);\n    program = createProgram();\n    attributes = {\n      position: gl.getAttribLocation(program, 'position'),\n      uv: gl.getAttribLocation(program, 'uv')\n    };\n    uniforms = {\n      uvOffset: gl.getUniformLocation(program, 'uvOffset'),\n      uvScale: gl.getUniformLocation(program, 'uvScale'),\n      rotation: gl.getUniformLocation(program, 'rotation'),\n      center: gl.getUniformLocation(program, 'center'),\n      scale: gl.getUniformLocation(program, 'scale'),\n      color: gl.getUniformLocation(program, 'color'),\n      map: gl.getUniformLocation(program, 'map'),\n      opacity: gl.getUniformLocation(program, 'opacity'),\n      modelViewMatrix: gl.getUniformLocation(program, 'modelViewMatrix'),\n      projectionMatrix: gl.getUniformLocation(program, 'projectionMatrix'),\n      fogType: gl.getUniformLocation(program, 'fogType'),\n      fogDensity: gl.getUniformLocation(program, 'fogDensity'),\n      fogNear: gl.getUniformLocation(program, 'fogNear'),\n      fogFar: gl.getUniformLocation(program, 'fogFar'),\n      fogColor: gl.getUniformLocation(program, 'fogColor'),\n      fogDepth: gl.getUniformLocation(program, 'fogDepth'),\n      alphaTest: gl.getUniformLocation(program, 'alphaTest')\n    };\n    var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n    canvas.width = 8;\n    canvas.height = 8;\n    var context = canvas.getContext('2d');\n    context.fillStyle = 'white';\n    context.fillRect(0, 0, 8, 8);\n    texture = new CanvasTexture(canvas);\n  }\n\n  this.render = function (sprites, scene, camera) {\n    if (sprites.length === 0) return; // setup gl\n\n    if (program === undefined) {\n      init();\n    }\n\n    state.useProgram(program);\n    state.initAttributes();\n    state.enableAttribute(attributes.position);\n    state.enableAttribute(attributes.uv);\n    state.disableUnusedAttributes();\n    state.disable(gl.CULL_FACE);\n    state.enable(gl.BLEND);\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.vertexAttribPointer(attributes.position, 2, gl.FLOAT, false, 2 * 8, 0);\n    gl.vertexAttribPointer(attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, elementBuffer);\n    gl.uniformMatrix4fv(uniforms.projectionMatrix, false, camera.projectionMatrix.elements);\n    state.activeTexture(gl.TEXTURE0);\n    gl.uniform1i(uniforms.map, 0);\n    var oldFogType = 0;\n    var sceneFogType = 0;\n    var fog = scene.fog;\n\n    if (fog) {\n      gl.uniform3f(uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b);\n\n      if (fog.isFog) {\n        gl.uniform1f(uniforms.fogNear, fog.near);\n        gl.uniform1f(uniforms.fogFar, fog.far);\n        gl.uniform1i(uniforms.fogType, 1);\n        oldFogType = 1;\n        sceneFogType = 1;\n      } else if (fog.isFogExp2) {\n        gl.uniform1f(uniforms.fogDensity, fog.density);\n        gl.uniform1i(uniforms.fogType, 2);\n        oldFogType = 2;\n        sceneFogType = 2;\n      }\n    } else {\n      gl.uniform1i(uniforms.fogType, 0);\n      oldFogType = 0;\n      sceneFogType = 0;\n    } // update positions and sort\n\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      sprite.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, sprite.matrixWorld);\n      sprite.z = -sprite.modelViewMatrix.elements[14];\n    }\n\n    sprites.sort(painterSortStable); // render all sprites\n\n    var scale = [];\n    var center = [];\n\n    for (var i = 0, l = sprites.length; i < l; i++) {\n      var sprite = sprites[i];\n      var material = sprite.material;\n      if (material.visible === false) continue;\n      sprite.onBeforeRender(renderer, scene, camera, undefined, material, undefined);\n      gl.uniform1f(uniforms.alphaTest, material.alphaTest);\n      gl.uniformMatrix4fv(uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements);\n      sprite.matrixWorld.decompose(spritePosition, spriteRotation, spriteScale);\n      scale[0] = spriteScale.x;\n      scale[1] = spriteScale.y;\n      center[0] = sprite.center.x - 0.5;\n      center[1] = sprite.center.y - 0.5;\n      var fogType = 0;\n\n      if (scene.fog && material.fog) {\n        fogType = sceneFogType;\n      }\n\n      if (oldFogType !== fogType) {\n        gl.uniform1i(uniforms.fogType, fogType);\n        oldFogType = fogType;\n      }\n\n      if (material.map !== null) {\n        gl.uniform2f(uniforms.uvOffset, material.map.offset.x, material.map.offset.y);\n        gl.uniform2f(uniforms.uvScale, material.map.repeat.x, material.map.repeat.y);\n      } else {\n        gl.uniform2f(uniforms.uvOffset, 0, 0);\n        gl.uniform2f(uniforms.uvScale, 1, 1);\n      }\n\n      gl.uniform1f(uniforms.opacity, material.opacity);\n      gl.uniform3f(uniforms.color, material.color.r, material.color.g, material.color.b);\n      gl.uniform1f(uniforms.rotation, material.rotation);\n      gl.uniform2fv(uniforms.center, center);\n      gl.uniform2fv(uniforms.scale, scale);\n      state.setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n      state.buffers.depth.setTest(material.depthTest);\n      state.buffers.depth.setMask(material.depthWrite);\n      state.buffers.color.setMask(material.colorWrite);\n      textures.setTexture2D(material.map || texture, 0);\n      gl.drawElements(gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0);\n      sprite.onAfterRender(renderer, scene, camera, undefined, material, undefined);\n    } // restore gl\n\n\n    state.enable(gl.CULL_FACE);\n    state.reset();\n  };\n\n  function createProgram() {\n    var program = gl.createProgram();\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(vertexShader, ['precision ' + capabilities.precision + ' float;', '#define SHADER_NAME ' + 'SpriteMaterial', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform float rotation;', 'uniform vec2 center;', 'uniform vec2 scale;', 'uniform vec2 uvOffset;', 'uniform vec2 uvScale;', 'attribute vec2 position;', 'attribute vec2 uv;', 'varying vec2 vUV;', 'varying float fogDepth;', 'void main() {', '\tvUV = uvOffset + uv * uvScale;', '\tvec2 alignedPosition = ( position - center ) * scale;', '\tvec2 rotatedPosition;', '\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;', '\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;', '\tvec4 mvPosition;', '\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );', '\tmvPosition.xy += rotatedPosition;', '\tgl_Position = projectionMatrix * mvPosition;', '\tfogDepth = - mvPosition.z;', '}'].join('\\n'));\n    gl.shaderSource(fragmentShader, ['precision ' + capabilities.precision + ' float;', '#define SHADER_NAME ' + 'SpriteMaterial', 'uniform vec3 color;', 'uniform sampler2D map;', 'uniform float opacity;', 'uniform int fogType;', 'uniform vec3 fogColor;', 'uniform float fogDensity;', 'uniform float fogNear;', 'uniform float fogFar;', 'uniform float alphaTest;', 'varying vec2 vUV;', 'varying float fogDepth;', 'void main() {', '\tvec4 texture = texture2D( map, vUV );', '\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );', '\tif ( gl_FragColor.a < alphaTest ) discard;', '\tif ( fogType > 0 ) {', '\t\tfloat fogFactor = 0.0;', '\t\tif ( fogType == 1 ) {', '\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );', '\t\t} else {', '\t\t\tconst float LOG2 = 1.442695;', '\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );', '\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );', '\t\t}', '\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );', '\t}', '}'].join('\\n'));\n    gl.compileShader(vertexShader);\n    gl.compileShader(fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    return program;\n  }\n\n  function painterSortStable(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return b.id - a.id;\n    }\n  }\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLState(gl, extensions, utils) {\n  function ColorBuffer() {\n    var locked = false;\n    var color = new Vector4();\n    var currentColorMask = null;\n    var currentColorClear = new Vector4(0, 0, 0, 0);\n    return {\n      setMask: function (colorMask) {\n        if (currentColorMask !== colorMask && !locked) {\n          gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n          currentColorMask = colorMask;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (r, g, b, a, premultipliedAlpha) {\n        if (premultipliedAlpha === true) {\n          r *= a;\n          g *= a;\n          b *= a;\n        }\n\n        color.set(r, g, b, a);\n\n        if (currentColorClear.equals(color) === false) {\n          gl.clearColor(r, g, b, a);\n          currentColorClear.copy(color);\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentColorMask = null;\n        currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n      }\n    };\n  }\n\n  function DepthBuffer() {\n    var locked = false;\n    var currentDepthMask = null;\n    var currentDepthFunc = null;\n    var currentDepthClear = null;\n    return {\n      setTest: function (depthTest) {\n        if (depthTest) {\n          enable(gl.DEPTH_TEST);\n        } else {\n          disable(gl.DEPTH_TEST);\n        }\n      },\n      setMask: function (depthMask) {\n        if (currentDepthMask !== depthMask && !locked) {\n          gl.depthMask(depthMask);\n          currentDepthMask = depthMask;\n        }\n      },\n      setFunc: function (depthFunc) {\n        if (currentDepthFunc !== depthFunc) {\n          if (depthFunc) {\n            switch (depthFunc) {\n              case NeverDepth:\n                gl.depthFunc(gl.NEVER);\n                break;\n\n              case AlwaysDepth:\n                gl.depthFunc(gl.ALWAYS);\n                break;\n\n              case LessDepth:\n                gl.depthFunc(gl.LESS);\n                break;\n\n              case LessEqualDepth:\n                gl.depthFunc(gl.LEQUAL);\n                break;\n\n              case EqualDepth:\n                gl.depthFunc(gl.EQUAL);\n                break;\n\n              case GreaterEqualDepth:\n                gl.depthFunc(gl.GEQUAL);\n                break;\n\n              case GreaterDepth:\n                gl.depthFunc(gl.GREATER);\n                break;\n\n              case NotEqualDepth:\n                gl.depthFunc(gl.NOTEQUAL);\n                break;\n\n              default:\n                gl.depthFunc(gl.LEQUAL);\n            }\n          } else {\n            gl.depthFunc(gl.LEQUAL);\n          }\n\n          currentDepthFunc = depthFunc;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (depth) {\n        if (currentDepthClear !== depth) {\n          gl.clearDepth(depth);\n          currentDepthClear = depth;\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentDepthMask = null;\n        currentDepthFunc = null;\n        currentDepthClear = null;\n      }\n    };\n  }\n\n  function StencilBuffer() {\n    var locked = false;\n    var currentStencilMask = null;\n    var currentStencilFunc = null;\n    var currentStencilRef = null;\n    var currentStencilFuncMask = null;\n    var currentStencilFail = null;\n    var currentStencilZFail = null;\n    var currentStencilZPass = null;\n    var currentStencilClear = null;\n    return {\n      setTest: function (stencilTest) {\n        if (stencilTest) {\n          enable(gl.STENCIL_TEST);\n        } else {\n          disable(gl.STENCIL_TEST);\n        }\n      },\n      setMask: function (stencilMask) {\n        if (currentStencilMask !== stencilMask && !locked) {\n          gl.stencilMask(stencilMask);\n          currentStencilMask = stencilMask;\n        }\n      },\n      setFunc: function (stencilFunc, stencilRef, stencilMask) {\n        if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n          gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n          currentStencilFunc = stencilFunc;\n          currentStencilRef = stencilRef;\n          currentStencilFuncMask = stencilMask;\n        }\n      },\n      setOp: function (stencilFail, stencilZFail, stencilZPass) {\n        if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n          gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n          currentStencilFail = stencilFail;\n          currentStencilZFail = stencilZFail;\n          currentStencilZPass = stencilZPass;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (stencil) {\n        if (currentStencilClear !== stencil) {\n          gl.clearStencil(stencil);\n          currentStencilClear = stencil;\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentStencilMask = null;\n        currentStencilFunc = null;\n        currentStencilRef = null;\n        currentStencilFuncMask = null;\n        currentStencilFail = null;\n        currentStencilZFail = null;\n        currentStencilZPass = null;\n        currentStencilClear = null;\n      }\n    };\n  } //\n\n\n  var colorBuffer = new ColorBuffer();\n  var depthBuffer = new DepthBuffer();\n  var stencilBuffer = new StencilBuffer();\n  var maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  var newAttributes = new Uint8Array(maxVertexAttributes);\n  var enabledAttributes = new Uint8Array(maxVertexAttributes);\n  var attributeDivisors = new Uint8Array(maxVertexAttributes);\n  var capabilities = {};\n  var compressedTextureFormats = null;\n  var currentProgram = null;\n  var currentBlending = null;\n  var currentBlendEquation = null;\n  var currentBlendSrc = null;\n  var currentBlendDst = null;\n  var currentBlendEquationAlpha = null;\n  var currentBlendSrcAlpha = null;\n  var currentBlendDstAlpha = null;\n  var currentPremultipledAlpha = false;\n  var currentFlipSided = null;\n  var currentCullFace = null;\n  var currentLineWidth = null;\n  var currentPolygonOffsetFactor = null;\n  var currentPolygonOffsetUnits = null;\n  var maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n  var lineWidthAvailable = false;\n  var version = 0;\n  var glVersion = gl.getParameter(gl.VERSION);\n\n  if (glVersion.indexOf('WebGL') !== -1) {\n    version = parseFloat(/^WebGL\\ ([0-9])/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 1.0;\n  } else if (glVersion.indexOf('OpenGL ES') !== -1) {\n    version = parseFloat(/^OpenGL\\ ES\\ ([0-9])/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 2.0;\n  }\n\n  var currentTextureSlot = null;\n  var currentBoundTextures = {};\n  var currentScissor = new Vector4();\n  var currentViewport = new Vector4();\n\n  function createTexture(type, target, count) {\n    var data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n    var texture = gl.createTexture();\n    gl.bindTexture(type, texture);\n    gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    for (var i = 0; i < count; i++) {\n      gl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    }\n\n    return texture;\n  }\n\n  var emptyTextures = {};\n  emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n  emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n  colorBuffer.setClear(0, 0, 0, 1);\n  depthBuffer.setClear(1);\n  stencilBuffer.setClear(0);\n  enable(gl.DEPTH_TEST);\n  depthBuffer.setFunc(LessEqualDepth);\n  setFlipSided(false);\n  setCullFace(CullFaceBack);\n  enable(gl.CULL_FACE);\n  enable(gl.BLEND);\n  setBlending(NormalBlending); //\n\n  function initAttributes() {\n    for (var i = 0, l = newAttributes.length; i < l; i++) {\n      newAttributes[i] = 0;\n    }\n  }\n\n  function enableAttribute(attribute) {\n    enableAttributeAndDivisor(attribute, 0);\n  }\n\n  function enableAttributeAndDivisor(attribute, meshPerAttribute) {\n    newAttributes[attribute] = 1;\n\n    if (enabledAttributes[attribute] === 0) {\n      gl.enableVertexAttribArray(attribute);\n      enabledAttributes[attribute] = 1;\n    }\n\n    if (attributeDivisors[attribute] !== meshPerAttribute) {\n      var extension = extensions.get('ANGLE_instanced_arrays');\n      extension.vertexAttribDivisorANGLE(attribute, meshPerAttribute);\n      attributeDivisors[attribute] = meshPerAttribute;\n    }\n  }\n\n  function disableUnusedAttributes() {\n    for (var i = 0, l = enabledAttributes.length; i !== l; ++i) {\n      if (enabledAttributes[i] !== newAttributes[i]) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n  }\n\n  function enable(id) {\n    if (capabilities[id] !== true) {\n      gl.enable(id);\n      capabilities[id] = true;\n    }\n  }\n\n  function disable(id) {\n    if (capabilities[id] !== false) {\n      gl.disable(id);\n      capabilities[id] = false;\n    }\n  }\n\n  function getCompressedTextureFormats() {\n    if (compressedTextureFormats === null) {\n      compressedTextureFormats = [];\n\n      if (extensions.get('WEBGL_compressed_texture_pvrtc') || extensions.get('WEBGL_compressed_texture_s3tc') || extensions.get('WEBGL_compressed_texture_etc1') || extensions.get('WEBGL_compressed_texture_astc')) {\n        var formats = gl.getParameter(gl.COMPRESSED_TEXTURE_FORMATS);\n\n        for (var i = 0; i < formats.length; i++) {\n          compressedTextureFormats.push(formats[i]);\n        }\n      }\n    }\n\n    return compressedTextureFormats;\n  }\n\n  function useProgram(program) {\n    if (currentProgram !== program) {\n      gl.useProgram(program);\n      currentProgram = program;\n      return true;\n    }\n\n    return false;\n  }\n\n  function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n    if (blending !== NoBlending) {\n      enable(gl.BLEND);\n    } else {\n      disable(gl.BLEND);\n    }\n\n    if (blending !== CustomBlending) {\n      if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n        switch (blending) {\n          case AdditiveBlending:\n            if (premultipliedAlpha) {\n              gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n              gl.blendFuncSeparate(gl.ONE, gl.ONE, gl.ONE, gl.ONE);\n            } else {\n              gl.blendEquation(gl.FUNC_ADD);\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n            }\n\n            break;\n\n          case SubtractiveBlending:\n            if (premultipliedAlpha) {\n              gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n              gl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n              gl.blendEquation(gl.FUNC_ADD);\n              gl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n            }\n\n            break;\n\n          case MultiplyBlending:\n            if (premultipliedAlpha) {\n              gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n              gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n            } else {\n              gl.blendEquation(gl.FUNC_ADD);\n              gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n            }\n\n            break;\n\n          default:\n            if (premultipliedAlpha) {\n              gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n              gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            } else {\n              gl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\n              gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            }\n\n        }\n      }\n\n      currentBlendEquation = null;\n      currentBlendSrc = null;\n      currentBlendDst = null;\n      currentBlendEquationAlpha = null;\n      currentBlendSrcAlpha = null;\n      currentBlendDstAlpha = null;\n    } else {\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(utils.convert(blendEquation), utils.convert(blendEquationAlpha));\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(utils.convert(blendSrc), utils.convert(blendDst), utils.convert(blendSrcAlpha), utils.convert(blendDstAlpha));\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n    }\n\n    currentBlending = blending;\n    currentPremultipledAlpha = premultipliedAlpha;\n  }\n\n  function setMaterial(material, frontFaceCW) {\n    material.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n    var flipSided = material.side === BackSide;\n    if (frontFaceCW) flipSided = !flipSided;\n    setFlipSided(flipSided);\n    material.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n    depthBuffer.setFunc(material.depthFunc);\n    depthBuffer.setTest(material.depthTest);\n    depthBuffer.setMask(material.depthWrite);\n    colorBuffer.setMask(material.colorWrite);\n    setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n  } //\n\n\n  function setFlipSided(flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(gl.CW);\n      } else {\n        gl.frontFace(gl.CCW);\n      }\n\n      currentFlipSided = flipSided;\n    }\n  }\n\n  function setCullFace(cullFace) {\n    if (cullFace !== CullFaceNone) {\n      enable(gl.CULL_FACE);\n\n      if (cullFace !== currentCullFace) {\n        if (cullFace === CullFaceBack) {\n          gl.cullFace(gl.BACK);\n        } else if (cullFace === CullFaceFront) {\n          gl.cullFace(gl.FRONT);\n        } else {\n          gl.cullFace(gl.FRONT_AND_BACK);\n        }\n      }\n    } else {\n      disable(gl.CULL_FACE);\n    }\n\n    currentCullFace = cullFace;\n  }\n\n  function setLineWidth(width) {\n    if (width !== currentLineWidth) {\n      if (lineWidthAvailable) gl.lineWidth(width);\n      currentLineWidth = width;\n    }\n  }\n\n  function setPolygonOffset(polygonOffset, factor, units) {\n    if (polygonOffset) {\n      enable(gl.POLYGON_OFFSET_FILL);\n\n      if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n        gl.polygonOffset(factor, units);\n        currentPolygonOffsetFactor = factor;\n        currentPolygonOffsetUnits = units;\n      }\n    } else {\n      disable(gl.POLYGON_OFFSET_FILL);\n    }\n  }\n\n  function setScissorTest(scissorTest) {\n    if (scissorTest) {\n      enable(gl.SCISSOR_TEST);\n    } else {\n      disable(gl.SCISSOR_TEST);\n    }\n  } // texture\n\n\n  function activeTexture(webglSlot) {\n    if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  }\n\n  function bindTexture(webglType, webglTexture) {\n    if (currentTextureSlot === null) {\n      activeTexture();\n    }\n\n    var boundTexture = currentBoundTextures[currentTextureSlot];\n\n    if (boundTexture === undefined) {\n      boundTexture = {\n        type: undefined,\n        texture: undefined\n      };\n      currentBoundTextures[currentTextureSlot] = boundTexture;\n    }\n\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  }\n\n  function compressedTexImage2D() {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  function texImage2D() {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  } //\n\n\n  function scissor(scissor) {\n    if (currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      currentScissor.copy(scissor);\n    }\n  }\n\n  function viewport(viewport) {\n    if (currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      currentViewport.copy(viewport);\n    }\n  } //\n\n\n  function reset() {\n    for (var i = 0; i < enabledAttributes.length; i++) {\n      if (enabledAttributes[i] === 1) {\n        gl.disableVertexAttribArray(i);\n        enabledAttributes[i] = 0;\n      }\n    }\n\n    capabilities = {};\n    compressedTextureFormats = null;\n    currentTextureSlot = null;\n    currentBoundTextures = {};\n    currentProgram = null;\n    currentBlending = null;\n    currentFlipSided = null;\n    currentCullFace = null;\n    colorBuffer.reset();\n    depthBuffer.reset();\n    stencilBuffer.reset();\n  }\n\n  return {\n    buffers: {\n      color: colorBuffer,\n      depth: depthBuffer,\n      stencil: stencilBuffer\n    },\n    initAttributes: initAttributes,\n    enableAttribute: enableAttribute,\n    enableAttributeAndDivisor: enableAttributeAndDivisor,\n    disableUnusedAttributes: disableUnusedAttributes,\n    enable: enable,\n    disable: disable,\n    getCompressedTextureFormats: getCompressedTextureFormats,\n    useProgram: useProgram,\n    setBlending: setBlending,\n    setMaterial: setMaterial,\n    setFlipSided: setFlipSided,\n    setCullFace: setCullFace,\n    setLineWidth: setLineWidth,\n    setPolygonOffset: setPolygonOffset,\n    setScissorTest: setScissorTest,\n    activeTexture: activeTexture,\n    bindTexture: bindTexture,\n    compressedTexImage2D: compressedTexImage2D,\n    texImage2D: texImage2D,\n    scissor: scissor,\n    viewport: viewport,\n    reset: reset\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n  var _isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext;\n  /* global WebGL2RenderingContext */\n\n\n  var _videoTextures = {};\n\n  var _canvas; //\n\n\n  function clampToMaxSize(image, maxSize) {\n    if (image.width > maxSize || image.height > maxSize) {\n      if ('data' in image) {\n        console.warn('THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n        return;\n      } // Warning: Scaling through the canvas will only work with images that use\n      // premultiplied alpha.\n\n\n      var scale = maxSize / Math.max(image.width, image.height);\n      var canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n      canvas.width = Math.floor(image.width * scale);\n      canvas.height = Math.floor(image.height * scale);\n      var context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height);\n      console.warn('THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image);\n      return canvas;\n    }\n\n    return image;\n  }\n\n  function isPowerOfTwo(image) {\n    return _Math.isPowerOfTwo(image.width) && _Math.isPowerOfTwo(image.height);\n  }\n\n  function makePowerOfTwo(image) {\n    if (image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap) {\n      if (_canvas === undefined) _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n      _canvas.width = _Math.floorPowerOfTwo(image.width);\n      _canvas.height = _Math.floorPowerOfTwo(image.height);\n\n      var context = _canvas.getContext('2d');\n\n      context.drawImage(image, 0, 0, _canvas.width, _canvas.height);\n      console.warn('THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height, image);\n      return _canvas;\n    }\n\n    return image;\n  }\n\n  function textureNeedsPowerOfTwo(texture) {\n    return texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n  }\n\n  function textureNeedsGenerateMipmaps(texture, isPowerOfTwo) {\n    return texture.generateMipmaps && isPowerOfTwo && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n  }\n\n  function generateMipmap(target, texture, width, height) {\n    _gl.generateMipmap(target);\n\n    var textureProperties = properties.get(texture); // Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\n    textureProperties.__maxMipLevel = Math.log(Math.max(width, height)) * Math.LOG2E;\n  } // Fallback filters for non-power-of-2 textures\n\n\n  function filterFallback(f) {\n    if (f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter) {\n      return _gl.NEAREST;\n    }\n\n    return _gl.LINEAR;\n  } //\n\n\n  function onTextureDispose(event) {\n    var texture = event.target;\n    texture.removeEventListener('dispose', onTextureDispose);\n    deallocateTexture(texture);\n\n    if (texture.isVideoTexture) {\n      delete _videoTextures[texture.id];\n    }\n\n    info.memory.textures--;\n  }\n\n  function onRenderTargetDispose(event) {\n    var renderTarget = event.target;\n    renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n    deallocateRenderTarget(renderTarget);\n    info.memory.textures--;\n  } //\n\n\n  function deallocateTexture(texture) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image && textureProperties.__image__webglTextureCube) {\n      // cube texture\n      _gl.deleteTexture(textureProperties.__image__webglTextureCube);\n    } else {\n      // 2D texture\n      if (textureProperties.__webglInit === undefined) return;\n\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    } // remove all webgl properties\n\n\n    properties.remove(texture);\n  }\n\n  function deallocateRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    if (!renderTarget) return;\n\n    if (textureProperties.__webglTexture !== undefined) {\n      _gl.deleteTexture(textureProperties.__webglTexture);\n    }\n\n    if (renderTarget.depthTexture) {\n      renderTarget.depthTexture.dispose();\n    }\n\n    if (renderTarget.isWebGLRenderTargetCube) {\n      for (var i = 0; i < 6; i++) {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n        if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n      }\n    } else {\n      _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n      if (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n    }\n\n    properties.remove(renderTarget.texture);\n    properties.remove(renderTarget);\n  } //\n\n\n  function setTexture2D(texture, slot) {\n    var textureProperties = properties.get(texture);\n    if (texture.isVideoTexture) updateVideoTexture(texture);\n\n    if (texture.version > 0 && textureProperties.__version !== texture.version) {\n      var image = texture.image;\n\n      if (image === undefined) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined', texture);\n      } else if (image.complete === false) {\n        console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture);\n      } else {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n  }\n\n  function setTextureCube(texture, slot) {\n    var textureProperties = properties.get(texture);\n\n    if (texture.image.length === 6) {\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        if (!textureProperties.__image__webglTextureCube) {\n          texture.addEventListener('dispose', onTextureDispose);\n          textureProperties.__image__webglTextureCube = _gl.createTexture();\n          info.memory.textures++;\n        }\n\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n\n        _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n        var isCompressed = texture && texture.isCompressedTexture;\n        var isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n        var cubeImage = [];\n\n        for (var i = 0; i < 6; i++) {\n          if (!isCompressed && !isDataTexture) {\n            cubeImage[i] = clampToMaxSize(texture.image[i], capabilities.maxCubemapSize);\n          } else {\n            cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n          }\n        }\n\n        var image = cubeImage[0],\n            isPowerOfTwoImage = isPowerOfTwo(image),\n            glFormat = utils.convert(texture.format),\n            glType = utils.convert(texture.type);\n        setTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage);\n\n        for (var i = 0; i < 6; i++) {\n          if (!isCompressed) {\n            if (isDataTexture) {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n            } else {\n              state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[i]);\n            }\n          } else {\n            var mipmap,\n                mipmaps = cubeImage[i].mipmaps;\n\n            for (var j = 0, jl = mipmaps.length; j < jl; j++) {\n              mipmap = mipmaps[j];\n\n              if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n                if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n                  state.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                } else {\n                  console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n                }\n              } else {\n                state.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n              }\n            }\n          }\n        }\n\n        if (!isCompressed) {\n          textureProperties.__maxMipLevel = 0;\n        } else {\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        }\n\n        if (textureNeedsGenerateMipmaps(texture, isPowerOfTwoImage)) {\n          // We assume images for cube map have the same size.\n          generateMipmap(_gl.TEXTURE_CUBE_MAP, texture, image.width, image.height);\n        }\n\n        textureProperties.__version = texture.version;\n        if (texture.onUpdate) texture.onUpdate(texture);\n      } else {\n        state.activeTexture(_gl.TEXTURE0 + slot);\n        state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube);\n      }\n    }\n  }\n\n  function setTextureCubeDynamic(texture, slot) {\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_CUBE_MAP, properties.get(texture).__webglTexture);\n  }\n\n  function setTextureParameters(textureType, texture, isPowerOfTwoImage) {\n    var extension;\n\n    if (isPowerOfTwoImage) {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, utils.convert(texture.wrapS));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, utils.convert(texture.wrapT));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, utils.convert(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, utils.convert(texture.minFilter));\n    } else {\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n      if (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture);\n      }\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n      _gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n      if (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n        console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture);\n      }\n    }\n\n    extension = extensions.get('EXT_texture_filter_anisotropic');\n\n    if (extension) {\n      if (texture.type === FloatType && extensions.get('OES_texture_float_linear') === null) return;\n      if (texture.type === HalfFloatType && extensions.get('OES_texture_half_float_linear') === null) return;\n\n      if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n        _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n        properties.get(texture).__currentAnisotropy = texture.anisotropy;\n      }\n    }\n  }\n\n  function uploadTexture(textureProperties, texture, slot) {\n    if (textureProperties.__webglInit === undefined) {\n      textureProperties.__webglInit = true;\n      texture.addEventListener('dispose', onTextureDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      info.memory.textures++;\n    }\n\n    state.activeTexture(_gl.TEXTURE0 + slot);\n    state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\n    _gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n    _gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n    _gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n    var image = clampToMaxSize(texture.image, capabilities.maxTextureSize);\n\n    if (textureNeedsPowerOfTwo(texture) && isPowerOfTwo(image) === false) {\n      image = makePowerOfTwo(image);\n    }\n\n    var isPowerOfTwoImage = isPowerOfTwo(image),\n        glFormat = utils.convert(texture.format),\n        glType = utils.convert(texture.type);\n    setTextureParameters(_gl.TEXTURE_2D, texture, isPowerOfTwoImage);\n    var mipmap,\n        mipmaps = texture.mipmaps;\n\n    if (texture.isDepthTexture) {\n      // populate depth texture with dummy data\n      var internalFormat = _gl.DEPTH_COMPONENT;\n\n      if (texture.type === FloatType) {\n        if (!_isWebGL2) throw new Error('Float Depth Texture only supported in WebGL2.0');\n        internalFormat = _gl.DEPTH_COMPONENT32F;\n      } else if (_isWebGL2) {\n        // WebGL 2.0 requires signed internalformat for glTexImage2D\n        internalFormat = _gl.DEPTH_COMPONENT16;\n      }\n\n      if (texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT) {\n        // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n        // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n        // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n        if (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n          console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n          texture.type = UnsignedShortType;\n          glType = utils.convert(texture.type);\n        }\n      } // Depth stencil textures need the DEPTH_STENCIL internal format\n      // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\n      if (texture.format === DepthStencilFormat) {\n        internalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n        // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n        // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n        if (texture.type !== UnsignedInt248Type) {\n          console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n          texture.type = UnsignedInt248Type;\n          glType = utils.convert(texture.type);\n        }\n      }\n\n      state.texImage2D(_gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null);\n    } else if (texture.isDataTexture) {\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n\n        texture.generateMipmaps = false;\n        textureProperties.__maxMipLevel = mipmaps.length - 1;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data);\n        textureProperties.__maxMipLevel = 0;\n      }\n    } else if (texture.isCompressedTexture) {\n      for (var i = 0, il = mipmaps.length; i < il; i++) {\n        mipmap = mipmaps[i];\n\n        if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n          if (state.getCompressedTextureFormats().indexOf(glFormat) > -1) {\n            state.compressedTexImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n          } else {\n            console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n          }\n        } else {\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n        }\n      }\n\n      textureProperties.__maxMipLevel = mipmaps.length - 1;\n    } else {\n      // regular Texture (image, video, canvas)\n      // use manually created mipmaps if available\n      // if there are no manual mipmaps\n      // set 0 level mipmap and then use GL to generate other mipmap levels\n      if (mipmaps.length > 0 && isPowerOfTwoImage) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n          state.texImage2D(_gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap);\n        }\n\n        texture.generateMipmaps = false;\n        textureProperties.__maxMipLevel = mipmaps.length - 1;\n      } else {\n        state.texImage2D(_gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image);\n        textureProperties.__maxMipLevel = 0;\n      }\n    }\n\n    if (textureNeedsGenerateMipmaps(texture, isPowerOfTwoImage)) {\n      generateMipmap(_gl.TEXTURE_2D, texture, image.width, image.height);\n    }\n\n    textureProperties.__version = texture.version;\n    if (texture.onUpdate) texture.onUpdate(texture);\n  } // Render targets\n  // Setup storage for target texture and bind it to correct framebuffer\n\n\n  function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n    var glFormat = utils.convert(renderTarget.texture.format);\n    var glType = utils.convert(renderTarget.texture.type);\n    state.texImage2D(textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    _gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n  function setupRenderBufferStorage(renderbuffer, renderTarget) {\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n    if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\n      _gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n    } else {\n      // FIXME: We don't support !depth !stencil\n      _gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height);\n    }\n\n    _gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n  } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n  function setupDepthTexture(framebuffer, renderTarget) {\n    var isCube = renderTarget && renderTarget.isWebGLRenderTargetCube;\n    if (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n    if (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n      throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n    } // upload an empty depth texture with framebuffer size\n\n\n    if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n      renderTarget.depthTexture.image.width = renderTarget.width;\n      renderTarget.depthTexture.image.height = renderTarget.height;\n      renderTarget.depthTexture.needsUpdate = true;\n    }\n\n    setTexture2D(renderTarget.depthTexture, 0);\n\n    var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n    if (renderTarget.depthTexture.format === DepthFormat) {\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n    } else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n    } else {\n      throw new Error('Unknown depthTexture format');\n    }\n  } // Setup GL resources for a non-texture depth buffer\n\n\n  function setupDepthRenderbuffer(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var isCube = renderTarget.isWebGLRenderTargetCube === true;\n\n    if (renderTarget.depthTexture) {\n      if (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n      setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n    } else {\n      if (isCube) {\n        renderTargetProperties.__webglDepthbuffer = [];\n\n        for (var i = 0; i < 6; i++) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\n          renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n        }\n      } else {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n        renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n        setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n      }\n    }\n\n    _gl.bindFramebuffer(_gl.FRAMEBUFFER, null);\n  } // Set up GL resources for the render target\n\n\n  function setupRenderTarget(renderTarget) {\n    var renderTargetProperties = properties.get(renderTarget);\n    var textureProperties = properties.get(renderTarget.texture);\n    renderTarget.addEventListener('dispose', onRenderTargetDispose);\n    textureProperties.__webglTexture = _gl.createTexture();\n    info.memory.textures++;\n    var isCube = renderTarget.isWebGLRenderTargetCube === true;\n    var isTargetPowerOfTwo = isPowerOfTwo(renderTarget); // Setup framebuffer\n\n    if (isCube) {\n      renderTargetProperties.__webglFramebuffer = [];\n\n      for (var i = 0; i < 6; i++) {\n        renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n      }\n    } else {\n      renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n    } // Setup color buffer\n\n\n    if (isCube) {\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo);\n\n      for (var i = 0; i < 6; i++) {\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n      }\n\n      if (textureNeedsGenerateMipmaps(renderTarget.texture, isTargetPowerOfTwo)) {\n        generateMipmap(_gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height);\n      }\n\n      state.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n    } else {\n      state.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n      setTextureParameters(_gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo);\n      setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D);\n\n      if (textureNeedsGenerateMipmaps(renderTarget.texture, isTargetPowerOfTwo)) {\n        generateMipmap(_gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height);\n      }\n\n      state.bindTexture(_gl.TEXTURE_2D, null);\n    } // Setup depth and stencil buffers\n\n\n    if (renderTarget.depthBuffer) {\n      setupDepthRenderbuffer(renderTarget);\n    }\n  }\n\n  function updateRenderTargetMipmap(renderTarget) {\n    var texture = renderTarget.texture;\n    var isTargetPowerOfTwo = isPowerOfTwo(renderTarget);\n\n    if (textureNeedsGenerateMipmaps(texture, isTargetPowerOfTwo)) {\n      var target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n      var webglTexture = properties.get(texture).__webglTexture;\n\n      state.bindTexture(target, webglTexture);\n      generateMipmap(target, texture, renderTarget.width, renderTarget.height);\n      state.bindTexture(target, null);\n    }\n  }\n\n  function updateVideoTexture(texture) {\n    var id = texture.id;\n    var frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n    if (_videoTextures[id] !== frame) {\n      _videoTextures[id] = frame;\n      texture.update();\n    }\n  }\n\n  this.setTexture2D = setTexture2D;\n  this.setTextureCube = setTextureCube;\n  this.setTextureCubeDynamic = setTextureCubeDynamic;\n  this.setupRenderTarget = setupRenderTarget;\n  this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n}\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\n\nfunction WebGLUtils(gl, extensions) {\n  function convert(p) {\n    var extension;\n    if (p === RepeatWrapping) return gl.REPEAT;\n    if (p === ClampToEdgeWrapping) return gl.CLAMP_TO_EDGE;\n    if (p === MirroredRepeatWrapping) return gl.MIRRORED_REPEAT;\n    if (p === NearestFilter) return gl.NEAREST;\n    if (p === NearestMipMapNearestFilter) return gl.NEAREST_MIPMAP_NEAREST;\n    if (p === NearestMipMapLinearFilter) return gl.NEAREST_MIPMAP_LINEAR;\n    if (p === LinearFilter) return gl.LINEAR;\n    if (p === LinearMipMapNearestFilter) return gl.LINEAR_MIPMAP_NEAREST;\n    if (p === LinearMipMapLinearFilter) return gl.LINEAR_MIPMAP_LINEAR;\n    if (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n    if (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\n    if (p === ByteType) return gl.BYTE;\n    if (p === ShortType) return gl.SHORT;\n    if (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n    if (p === IntType) return gl.INT;\n    if (p === UnsignedIntType) return gl.UNSIGNED_INT;\n    if (p === FloatType) return gl.FLOAT;\n\n    if (p === HalfFloatType) {\n      extension = extensions.get('OES_texture_half_float');\n      if (extension !== null) return extension.HALF_FLOAT_OES;\n    }\n\n    if (p === AlphaFormat) return gl.ALPHA;\n    if (p === RGBFormat) return gl.RGB;\n    if (p === RGBAFormat) return gl.RGBA;\n    if (p === LuminanceFormat) return gl.LUMINANCE;\n    if (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n    if (p === DepthFormat) return gl.DEPTH_COMPONENT;\n    if (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n    if (p === AddEquation) return gl.FUNC_ADD;\n    if (p === SubtractEquation) return gl.FUNC_SUBTRACT;\n    if (p === ReverseSubtractEquation) return gl.FUNC_REVERSE_SUBTRACT;\n    if (p === ZeroFactor) return gl.ZERO;\n    if (p === OneFactor) return gl.ONE;\n    if (p === SrcColorFactor) return gl.SRC_COLOR;\n    if (p === OneMinusSrcColorFactor) return gl.ONE_MINUS_SRC_COLOR;\n    if (p === SrcAlphaFactor) return gl.SRC_ALPHA;\n    if (p === OneMinusSrcAlphaFactor) return gl.ONE_MINUS_SRC_ALPHA;\n    if (p === DstAlphaFactor) return gl.DST_ALPHA;\n    if (p === OneMinusDstAlphaFactor) return gl.ONE_MINUS_DST_ALPHA;\n    if (p === DstColorFactor) return gl.DST_COLOR;\n    if (p === OneMinusDstColorFactor) return gl.ONE_MINUS_DST_COLOR;\n    if (p === SrcAlphaSaturateFactor) return gl.SRC_ALPHA_SATURATE;\n\n    if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n      if (extension !== null) {\n        if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n        if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n        if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n        if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n      }\n    }\n\n    if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n      if (extension !== null) {\n        if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n        if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n        if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n        if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n      }\n    }\n\n    if (p === RGB_ETC1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_etc1');\n      if (extension !== null) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n    }\n\n    if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_astc');\n\n      if (extension !== null) {\n        return p;\n      }\n    }\n\n    if (p === MinEquation || p === MaxEquation) {\n      extension = extensions.get('EXT_blend_minmax');\n\n      if (extension !== null) {\n        if (p === MinEquation) return extension.MIN_EXT;\n        if (p === MaxEquation) return extension.MAX_EXT;\n      }\n    }\n\n    if (p === UnsignedInt248Type) {\n      extension = extensions.get('WEBGL_depth_texture');\n      if (extension !== null) return extension.UNSIGNED_INT_24_8_WEBGL;\n    }\n\n    return 0;\n  }\n\n  return {\n    convert: convert\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Group() {\n  Object3D.call(this);\n  this.type = 'Group';\n}\n\nGroup.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Group,\n  isGroup: true\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera(fov, aspect, near, far) {\n  Camera.call(this);\n  this.type = 'PerspectiveCamera';\n  this.fov = fov !== undefined ? fov : 50;\n  this.zoom = 1;\n  this.near = near !== undefined ? near : 0.1;\n  this.far = far !== undefined ? far : 2000;\n  this.focus = 10;\n  this.aspect = aspect !== undefined ? aspect : 1;\n  this.view = null;\n  this.filmGauge = 35; // width of the film (default in millimeters)\n\n  this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n  this.updateProjectionMatrix();\n}\n\nPerspectiveCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n  constructor: PerspectiveCamera,\n  isPerspectiveCamera: true,\n  copy: function (source, recursive) {\n    Camera.prototype.copy.call(this, source, recursive);\n    this.fov = source.fov;\n    this.zoom = source.zoom;\n    this.near = source.near;\n    this.far = source.far;\n    this.focus = source.focus;\n    this.aspect = source.aspect;\n    this.view = source.view === null ? null : Object.assign({}, source.view);\n    this.filmGauge = source.filmGauge;\n    this.filmOffset = source.filmOffset;\n    return this;\n  },\n\n  /**\n   * Sets the FOV by focal length in respect to the current .filmGauge.\n   *\n   * The default film gauge is 35, so that the focal length can be specified for\n   * a 35mm (full frame) camera.\n   *\n   * Values for focal length and film gauge must have the same unit.\n   */\n  setFocalLength: function (focalLength) {\n    // see http://www.bobatkins.com/photography/technical/field_of_view.html\n    var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n    this.fov = _Math.RAD2DEG * 2 * Math.atan(vExtentSlope);\n    this.updateProjectionMatrix();\n  },\n\n  /**\n   * Calculates the focal length from the current .fov and .filmGauge.\n   */\n  getFocalLength: function () {\n    var vExtentSlope = Math.tan(_Math.DEG2RAD * 0.5 * this.fov);\n    return 0.5 * this.getFilmHeight() / vExtentSlope;\n  },\n  getEffectiveFOV: function () {\n    return _Math.RAD2DEG * 2 * Math.atan(Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom);\n  },\n  getFilmWidth: function () {\n    // film not completely covered in portrait format (aspect < 1)\n    return this.filmGauge * Math.min(this.aspect, 1);\n  },\n  getFilmHeight: function () {\n    // film not completely covered in landscape format (aspect > 1)\n    return this.filmGauge / Math.max(this.aspect, 1);\n  },\n\n  /**\n   * Sets an offset in a larger frustum. This is useful for multi-window or\n   * multi-monitor/multi-machine setups.\n   *\n   * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n   * the monitors are in grid like this\n   *\n   *   +---+---+---+\n   *   | A | B | C |\n   *   +---+---+---+\n   *   | D | E | F |\n   *   +---+---+---+\n   *\n   * then for each monitor you would call it like this\n   *\n   *   var w = 1920;\n   *   var h = 1080;\n   *   var fullWidth = w * 3;\n   *   var fullHeight = h * 2;\n   *\n   *   --A--\n   *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n   *   --B--\n   *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n   *   --C--\n   *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n   *   --D--\n   *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n   *   --E--\n   *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n   *   --F--\n   *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n   *\n   *   Note there is no reason monitors have to be the same size or in a grid.\n   */\n  setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n    this.aspect = fullWidth / fullHeight;\n\n    if (this.view === null) {\n      this.view = {\n        enabled: true,\n        fullWidth: 1,\n        fullHeight: 1,\n        offsetX: 0,\n        offsetY: 0,\n        width: 1,\n        height: 1\n      };\n    }\n\n    this.view.enabled = true;\n    this.view.fullWidth = fullWidth;\n    this.view.fullHeight = fullHeight;\n    this.view.offsetX = x;\n    this.view.offsetY = y;\n    this.view.width = width;\n    this.view.height = height;\n    this.updateProjectionMatrix();\n  },\n  clearViewOffset: function () {\n    if (this.view !== null) {\n      this.view.enabled = false;\n    }\n\n    this.updateProjectionMatrix();\n  },\n  updateProjectionMatrix: function () {\n    var near = this.near,\n        top = near * Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom,\n        height = 2 * top,\n        width = this.aspect * height,\n        left = -0.5 * width,\n        view = this.view;\n\n    if (this.view !== null && this.view.enabled) {\n      var fullWidth = view.fullWidth,\n          fullHeight = view.fullHeight;\n      left += view.offsetX * width / fullWidth;\n      top -= view.offsetY * height / fullHeight;\n      width *= view.width / fullWidth;\n      height *= view.height / fullHeight;\n    }\n\n    var skew = this.filmOffset;\n    if (skew !== 0) left += near * skew / this.getFilmWidth();\n    this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n  },\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    data.object.fov = this.fov;\n    data.object.zoom = this.zoom;\n    data.object.near = this.near;\n    data.object.far = this.far;\n    data.object.focus = this.focus;\n    data.object.aspect = this.aspect;\n    if (this.view !== null) data.object.view = Object.assign({}, this.view);\n    data.object.filmGauge = this.filmGauge;\n    data.object.filmOffset = this.filmOffset;\n    return data;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera(array) {\n  PerspectiveCamera.call(this);\n  this.cameras = array || [];\n}\n\nArrayCamera.prototype = Object.assign(Object.create(PerspectiveCamera.prototype), {\n  constructor: ArrayCamera,\n  isArrayCamera: true\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager(renderer) {\n  var scope = this;\n  var device = null;\n  var frameData = null;\n  var poseTarget = null;\n  var controllers = [];\n  var standingMatrix = new Matrix4();\n  var standingMatrixInverse = new Matrix4();\n\n  if (typeof window !== 'undefined' && 'VRFrameData' in window) {\n    frameData = new window.VRFrameData();\n    window.addEventListener('vrdisplaypresentchange', onVRDisplayPresentChange, false);\n  }\n\n  var matrixWorldInverse = new Matrix4();\n  var tempQuaternion = new Quaternion();\n  var tempPosition = new Vector3();\n  var cameraL = new PerspectiveCamera();\n  cameraL.bounds = new Vector4(0.0, 0.0, 0.5, 1.0);\n  cameraL.layers.enable(1);\n  var cameraR = new PerspectiveCamera();\n  cameraR.bounds = new Vector4(0.5, 0.0, 0.5, 1.0);\n  cameraR.layers.enable(2);\n  var cameraVR = new ArrayCamera([cameraL, cameraR]);\n  cameraVR.layers.enable(1);\n  cameraVR.layers.enable(2); //\n\n  function isPresenting() {\n    return device !== null && device.isPresenting === true;\n  }\n\n  var currentSize, currentPixelRatio;\n\n  function onVRDisplayPresentChange() {\n    if (isPresenting()) {\n      var eyeParameters = device.getEyeParameters('left');\n      var renderWidth = eyeParameters.renderWidth;\n      var renderHeight = eyeParameters.renderHeight;\n      currentPixelRatio = renderer.getPixelRatio();\n      currentSize = renderer.getSize();\n      renderer.setDrawingBufferSize(renderWidth * 2, renderHeight, 1);\n      animation.start();\n    } else if (scope.enabled) {\n      renderer.setDrawingBufferSize(currentSize.width, currentSize.height, currentPixelRatio);\n      animation.stop();\n    }\n  } //\n\n\n  var isTriggerPressed = false;\n\n  function findGamepad(id) {\n    var gamepads = navigator.getGamepads && navigator.getGamepads();\n\n    for (var i = 0, j = 0, l = gamepads.length; i < l; i++) {\n      var gamepad = gamepads[i];\n\n      if (gamepad && (gamepad.id === 'Daydream Controller' || gamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' || gamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith('Oculus Touch') || gamepad.id.startsWith('Spatial Controller'))) {\n        if (j === id) return gamepad;\n        j++;\n      }\n    }\n  }\n\n  function updateControllers() {\n    for (var i = 0; i < controllers.length; i++) {\n      var controller = controllers[i];\n      var gamepad = findGamepad(i);\n\n      if (gamepad !== undefined && gamepad.pose !== undefined) {\n        if (gamepad.pose === null) return; //  Pose\n\n        var pose = gamepad.pose;\n        if (pose.hasPosition === false) controller.position.set(0.2, -0.6, -0.05);\n        if (pose.position !== null) controller.position.fromArray(pose.position);\n        if (pose.orientation !== null) controller.quaternion.fromArray(pose.orientation);\n        controller.matrix.compose(controller.position, controller.quaternion, controller.scale);\n        controller.matrix.premultiply(standingMatrix);\n        controller.matrix.decompose(controller.position, controller.quaternion, controller.scale);\n        controller.matrixWorldNeedsUpdate = true;\n        controller.visible = true; //  Trigger\n\n        var buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n        if (isTriggerPressed !== gamepad.buttons[buttonId].pressed) {\n          isTriggerPressed = gamepad.buttons[buttonId].pressed;\n\n          if (isTriggerPressed) {\n            controller.dispatchEvent({\n              type: 'selectstart'\n            });\n          } else {\n            controller.dispatchEvent({\n              type: 'selectend'\n            });\n            controller.dispatchEvent({\n              type: 'select'\n            });\n          }\n        }\n      } else {\n        controller.visible = false;\n      }\n    }\n  } //\n\n\n  this.enabled = false;\n  this.userHeight = 1.6;\n\n  this.getController = function (id) {\n    var controller = controllers[id];\n\n    if (controller === undefined) {\n      controller = new Group();\n      controller.matrixAutoUpdate = false;\n      controller.visible = false;\n      controllers[id] = controller;\n    }\n\n    return controller;\n  };\n\n  this.getDevice = function () {\n    return device;\n  };\n\n  this.setDevice = function (value) {\n    if (value !== undefined) device = value;\n    animation.setContext(value);\n  };\n\n  this.setPoseTarget = function (object) {\n    if (object !== undefined) poseTarget = object;\n  };\n\n  this.getCamera = function (camera) {\n    if (device === null) {\n      camera.position.set(0, scope.userHeight, 0);\n      return camera;\n    }\n\n    device.depthNear = camera.near;\n    device.depthFar = camera.far;\n    device.getFrameData(frameData); //\n\n    var stageParameters = device.stageParameters;\n\n    if (stageParameters) {\n      standingMatrix.fromArray(stageParameters.sittingToStandingTransform);\n    } else {\n      standingMatrix.makeTranslation(0, scope.userHeight, 0);\n    }\n\n    var pose = frameData.pose;\n    var poseObject = poseTarget !== null ? poseTarget : camera; // We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\n    poseObject.matrix.copy(standingMatrix);\n    poseObject.matrix.decompose(poseObject.position, poseObject.quaternion, poseObject.scale);\n\n    if (pose.orientation !== null) {\n      tempQuaternion.fromArray(pose.orientation);\n      poseObject.quaternion.multiply(tempQuaternion);\n    }\n\n    if (pose.position !== null) {\n      tempQuaternion.setFromRotationMatrix(standingMatrix);\n      tempPosition.fromArray(pose.position);\n      tempPosition.applyQuaternion(tempQuaternion);\n      poseObject.position.add(tempPosition);\n    }\n\n    poseObject.updateMatrixWorld();\n    if (device.isPresenting === false) return camera; //\n\n    cameraL.near = camera.near;\n    cameraR.near = camera.near;\n    cameraL.far = camera.far;\n    cameraR.far = camera.far;\n    cameraVR.matrixWorld.copy(camera.matrixWorld);\n    cameraVR.matrixWorldInverse.copy(camera.matrixWorldInverse);\n    cameraL.matrixWorldInverse.fromArray(frameData.leftViewMatrix);\n    cameraR.matrixWorldInverse.fromArray(frameData.rightViewMatrix); // TODO (mrdoob) Double check this code\n\n    standingMatrixInverse.getInverse(standingMatrix);\n    cameraL.matrixWorldInverse.multiply(standingMatrixInverse);\n    cameraR.matrixWorldInverse.multiply(standingMatrixInverse);\n    var parent = poseObject.parent;\n\n    if (parent !== null) {\n      matrixWorldInverse.getInverse(parent.matrixWorld);\n      cameraL.matrixWorldInverse.multiply(matrixWorldInverse);\n      cameraR.matrixWorldInverse.multiply(matrixWorldInverse);\n    } // envMap and Mirror needs camera.matrixWorld\n\n\n    cameraL.matrixWorld.getInverse(cameraL.matrixWorldInverse);\n    cameraR.matrixWorld.getInverse(cameraR.matrixWorldInverse);\n    cameraL.projectionMatrix.fromArray(frameData.leftProjectionMatrix);\n    cameraR.projectionMatrix.fromArray(frameData.rightProjectionMatrix); // HACK (mrdoob)\n    // https://github.com/w3c/webvr/issues/203\n\n    cameraVR.projectionMatrix.copy(cameraL.projectionMatrix); //\n\n    var layers = device.getLayers();\n\n    if (layers.length) {\n      var layer = layers[0];\n\n      if (layer.leftBounds !== null && layer.leftBounds.length === 4) {\n        cameraL.bounds.fromArray(layer.leftBounds);\n      }\n\n      if (layer.rightBounds !== null && layer.rightBounds.length === 4) {\n        cameraR.bounds.fromArray(layer.rightBounds);\n      }\n    }\n\n    updateControllers();\n    return cameraVR;\n  };\n\n  this.getStandingMatrix = function () {\n    return standingMatrix;\n  };\n\n  this.isPresenting = isPresenting; // Animation Loop\n\n  var animation = new WebGLAnimation();\n\n  this.setAnimationLoop = function (callback) {\n    animation.setAnimationLoop(callback);\n  };\n\n  this.submitFrame = function () {\n    if (isPresenting()) device.submitFrame();\n  };\n\n  this.dispose = function () {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('vrdisplaypresentchange', onVRDisplayPresentChange);\n    }\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction WebXRManager(renderer) {\n  var gl = renderer.context;\n  var device = null;\n  var session = null;\n  var frameOfRef = null;\n  var pose = null;\n  var controllers = [];\n  var inputSources = [];\n\n  function isPresenting() {\n    return session !== null && frameOfRef !== null;\n  } //\n\n\n  var cameraL = new PerspectiveCamera();\n  cameraL.layers.enable(1);\n  cameraL.viewport = new Vector4();\n  var cameraR = new PerspectiveCamera();\n  cameraR.layers.enable(2);\n  cameraR.viewport = new Vector4();\n  var cameraVR = new ArrayCamera([cameraL, cameraR]);\n  cameraVR.layers.enable(1);\n  cameraVR.layers.enable(2); //\n\n  this.enabled = false;\n\n  this.getController = function (id) {\n    var controller = controllers[id];\n\n    if (controller === undefined) {\n      controller = new Group();\n      controller.matrixAutoUpdate = false;\n      controller.visible = false;\n      controllers[id] = controller;\n    }\n\n    return controller;\n  };\n\n  this.getDevice = function () {\n    return device;\n  };\n\n  this.setDevice = function (value) {\n    if (value !== undefined) device = value;\n    gl.setCompatibleXRDevice(value);\n  }; //\n\n\n  function onSessionEvent(event) {\n    var controller = controllers[inputSources.indexOf(event.inputSource)];\n    if (controller) controller.dispatchEvent({\n      type: event.type\n    });\n  }\n\n  function onSessionEnd() {\n    renderer.setFramebuffer(null);\n    animation.stop();\n  }\n\n  this.setSession = function (value, options) {\n    session = value;\n\n    if (session !== null) {\n      session.addEventListener('select', onSessionEvent);\n      session.addEventListener('selectstart', onSessionEvent);\n      session.addEventListener('selectend', onSessionEvent);\n      session.addEventListener('end', onSessionEnd);\n      session.baseLayer = new XRWebGLLayer(session, gl);\n      session.requestFrameOfReference(options.frameOfReferenceType).then(function (value) {\n        frameOfRef = value;\n        renderer.setFramebuffer(session.baseLayer.framebuffer);\n        animation.setContext(session);\n        animation.start();\n      }); //\n\n      inputSources = session.getInputSources();\n      session.addEventListener('inputsourceschange', function () {\n        inputSources = session.getInputSources();\n        console.log(inputSources);\n      });\n    }\n  };\n\n  function updateCamera(camera, parent) {\n    if (parent === null) {\n      camera.matrixWorld.copy(camera.matrix);\n    } else {\n      camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n    }\n\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n  }\n\n  this.getCamera = function (camera) {\n    if (isPresenting()) {\n      var parent = camera.parent;\n      var cameras = cameraVR.cameras; // apply camera.parent to cameraVR\n\n      updateCamera(cameraVR, parent);\n\n      for (var i = 0; i < cameras.length; i++) {\n        updateCamera(cameras[i], parent);\n      } // update camera and its children\n\n\n      camera.matrixWorld.copy(cameraVR.matrixWorld);\n      var children = camera.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].updateMatrixWorld(true);\n      }\n\n      return cameraVR;\n    }\n\n    return camera;\n  };\n\n  this.isPresenting = isPresenting; // Animation Loop\n\n  var onAnimationFrameCallback = null;\n\n  function onAnimationFrame(time, frame) {\n    pose = frame.getDevicePose(frameOfRef);\n\n    if (pose !== null) {\n      var layer = session.baseLayer;\n      var views = frame.views;\n\n      for (var i = 0; i < views.length; i++) {\n        var view = views[i];\n        var viewport = layer.getViewport(view);\n        var viewMatrix = pose.getViewMatrix(view);\n        var camera = cameraVR.cameras[i];\n        camera.matrix.fromArray(viewMatrix).getInverse(camera.matrix);\n        camera.projectionMatrix.fromArray(view.projectionMatrix);\n        camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n        if (i === 0) {\n          cameraVR.matrix.copy(camera.matrix); // HACK (mrdoob)\n          // https://github.com/w3c/webvr/issues/203\n\n          cameraVR.projectionMatrix.copy(camera.projectionMatrix);\n        }\n      }\n    } //\n\n\n    for (var i = 0; i < controllers.length; i++) {\n      var controller = controllers[i];\n      var inputSource = inputSources[i];\n\n      if (inputSource) {\n        var inputPose = frame.getInputPose(inputSource, frameOfRef);\n\n        if (inputPose !== null) {\n          controller.matrix.elements = inputPose.pointerMatrix;\n          controller.matrix.decompose(controller.position, controller.rotation, controller.scale);\n          controller.visible = true;\n          continue;\n        }\n      }\n\n      controller.visible = false;\n    }\n\n    if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n  }\n\n  var animation = new WebGLAnimation();\n  animation.setAnimationLoop(onAnimationFrame);\n\n  this.setAnimationLoop = function (callback) {\n    onAnimationFrameCallback = callback;\n  };\n\n  this.dispose = function () {}; // DEPRECATED\n\n\n  this.getStandingMatrix = function () {\n    console.warn('THREE.WebXRManager: getStandingMatrix() is no longer needed.');\n    return new THREE.Matrix4();\n  };\n\n  this.submitFrame = function () {};\n}\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\n\nfunction WebGLRenderer(parameters) {\n  console.log('THREE.WebGLRenderer', REVISION);\n  parameters = parameters || {};\n\n  var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas'),\n      _context = parameters.context !== undefined ? parameters.context : null,\n      _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n      _depth = parameters.depth !== undefined ? parameters.depth : true,\n      _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n      _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n      _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n      _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n      _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n  var currentRenderList = null;\n  var currentRenderState = null; // public properties\n\n  this.domElement = _canvas;\n  this.context = null; // clearing\n\n  this.autoClear = true;\n  this.autoClearColor = true;\n  this.autoClearDepth = true;\n  this.autoClearStencil = true; // scene graph\n\n  this.sortObjects = true; // user-defined clipping\n\n  this.clippingPlanes = [];\n  this.localClippingEnabled = false; // physically based shading\n\n  this.gammaFactor = 2.0; // for backwards compatibility\n\n  this.gammaInput = false;\n  this.gammaOutput = false; // physical lights\n\n  this.physicallyCorrectLights = false; // tone mapping\n\n  this.toneMapping = LinearToneMapping;\n  this.toneMappingExposure = 1.0;\n  this.toneMappingWhitePoint = 1.0; // morphs\n\n  this.maxMorphTargets = 8;\n  this.maxMorphNormals = 4; // internal properties\n\n  var _this = this,\n      _isContextLost = false,\n      // internal state cache\n  _framebuffer = null,\n      _currentRenderTarget = null,\n      _currentFramebuffer = null,\n      _currentMaterialId = -1,\n      _currentGeometryProgram = '',\n      _currentCamera = null,\n      _currentArrayCamera = null,\n      _currentViewport = new Vector4(),\n      _currentScissor = new Vector4(),\n      _currentScissorTest = null,\n      //\n  _usedTextureUnits = 0,\n      //\n  _width = _canvas.width,\n      _height = _canvas.height,\n      _pixelRatio = 1,\n      _viewport = new Vector4(0, 0, _width, _height),\n      _scissor = new Vector4(0, 0, _width, _height),\n      _scissorTest = false,\n      // frustum\n  _frustum = new Frustum(),\n      // clipping\n  _clipping = new WebGLClipping(),\n      _clippingEnabled = false,\n      _localClippingEnabled = false,\n      // camera matrices cache\n  _projScreenMatrix = new Matrix4(),\n      _vector3 = new Vector3();\n\n  function getTargetPixelRatio() {\n    return _currentRenderTarget === null ? _pixelRatio : 1;\n  } // initialize\n\n\n  var _gl;\n\n  try {\n    var contextAttributes = {\n      alpha: _alpha,\n      depth: _depth,\n      stencil: _stencil,\n      antialias: _antialias,\n      premultipliedAlpha: _premultipliedAlpha,\n      preserveDrawingBuffer: _preserveDrawingBuffer,\n      powerPreference: _powerPreference\n    }; // event listeners must be registered before WebGL context is created, see #12753\n\n    _canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n    _canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n    _gl = _context || _canvas.getContext('webgl', contextAttributes) || _canvas.getContext('experimental-webgl', contextAttributes);\n\n    if (_gl === null) {\n      if (_canvas.getContext('webgl') !== null) {\n        throw new Error('Error creating WebGL context with your selected attributes.');\n      } else {\n        throw new Error('Error creating WebGL context.');\n      }\n    } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n    if (_gl.getShaderPrecisionFormat === undefined) {\n      _gl.getShaderPrecisionFormat = function () {\n        return {\n          'rangeMin': 1,\n          'rangeMax': 1,\n          'precision': 1\n        };\n      };\n    }\n  } catch (error) {\n    console.error('THREE.WebGLRenderer: ' + error.message);\n  }\n\n  var extensions, capabilities, state, info;\n  var properties, textures, attributes, geometries, objects;\n  var programCache, renderLists, renderStates;\n  var background, morphtargets, bufferRenderer, indexedBufferRenderer;\n  var spriteRenderer;\n  var utils;\n\n  function initGLContext() {\n    extensions = new WebGLExtensions(_gl);\n    extensions.get('WEBGL_depth_texture');\n    extensions.get('OES_texture_float');\n    extensions.get('OES_texture_float_linear');\n    extensions.get('OES_texture_half_float');\n    extensions.get('OES_texture_half_float_linear');\n    extensions.get('OES_standard_derivatives');\n    extensions.get('OES_element_index_uint');\n    extensions.get('ANGLE_instanced_arrays');\n    utils = new WebGLUtils(_gl, extensions);\n    capabilities = new WebGLCapabilities(_gl, extensions, parameters);\n    state = new WebGLState(_gl, extensions, utils);\n    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n    info = new WebGLInfo(_gl);\n    properties = new WebGLProperties();\n    textures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n    attributes = new WebGLAttributes(_gl);\n    geometries = new WebGLGeometries(_gl, attributes, info);\n    objects = new WebGLObjects(geometries, info);\n    morphtargets = new WebGLMorphtargets(_gl);\n    programCache = new WebGLPrograms(_this, extensions, capabilities);\n    renderLists = new WebGLRenderLists();\n    renderStates = new WebGLRenderStates();\n    background = new WebGLBackground(_this, state, objects, _premultipliedAlpha);\n    bufferRenderer = new WebGLBufferRenderer(_gl, extensions, info);\n    indexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info);\n    spriteRenderer = new WebGLSpriteRenderer(_this, _gl, state, textures, capabilities);\n    info.programs = programCache.programs;\n    _this.context = _gl;\n    _this.capabilities = capabilities;\n    _this.extensions = extensions;\n    _this.properties = properties;\n    _this.renderLists = renderLists;\n    _this.state = state;\n    _this.info = info;\n  }\n\n  initGLContext(); // vr\n\n  var vr = 'xr' in navigator ? new WebXRManager(_this) : new WebVRManager(_this);\n  this.vr = vr; // shadow map\n\n  var shadowMap = new WebGLShadowMap(_this, objects, capabilities.maxTextureSize);\n  this.shadowMap = shadowMap; // API\n\n  this.getContext = function () {\n    return _gl;\n  };\n\n  this.getContextAttributes = function () {\n    return _gl.getContextAttributes();\n  };\n\n  this.forceContextLoss = function () {\n    var extension = extensions.get('WEBGL_lose_context');\n    if (extension) extension.loseContext();\n  };\n\n  this.forceContextRestore = function () {\n    var extension = extensions.get('WEBGL_lose_context');\n    if (extension) extension.restoreContext();\n  };\n\n  this.getPixelRatio = function () {\n    return _pixelRatio;\n  };\n\n  this.setPixelRatio = function (value) {\n    if (value === undefined) return;\n    _pixelRatio = value;\n    this.setSize(_width, _height, false);\n  };\n\n  this.getSize = function () {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function (width, height, updateStyle) {\n    if (vr.isPresenting()) {\n      console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n      return;\n    }\n\n    _width = width;\n    _height = height;\n    _canvas.width = width * _pixelRatio;\n    _canvas.height = height * _pixelRatio;\n\n    if (updateStyle !== false) {\n      _canvas.style.width = width + 'px';\n      _canvas.style.height = height + 'px';\n    }\n\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.getDrawingBufferSize = function () {\n    return {\n      width: _width * _pixelRatio,\n      height: _height * _pixelRatio\n    };\n  };\n\n  this.setDrawingBufferSize = function (width, height, pixelRatio) {\n    _width = width;\n    _height = height;\n    _pixelRatio = pixelRatio;\n    _canvas.width = width * pixelRatio;\n    _canvas.height = height * pixelRatio;\n    this.setViewport(0, 0, width, height);\n  };\n\n  this.getCurrentViewport = function () {\n    return _currentViewport;\n  };\n\n  this.setViewport = function (x, y, width, height) {\n    _viewport.set(x, _height - y - height, width, height);\n\n    state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio));\n  };\n\n  this.setScissor = function (x, y, width, height) {\n    _scissor.set(x, _height - y - height, width, height);\n\n    state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio));\n  };\n\n  this.setScissorTest = function (boolean) {\n    state.setScissorTest(_scissorTest = boolean);\n  }; // Clearing\n\n\n  this.getClearColor = function () {\n    return background.getClearColor();\n  };\n\n  this.setClearColor = function () {\n    background.setClearColor.apply(background, arguments);\n  };\n\n  this.getClearAlpha = function () {\n    return background.getClearAlpha();\n  };\n\n  this.setClearAlpha = function () {\n    background.setClearAlpha.apply(background, arguments);\n  };\n\n  this.clear = function (color, depth, stencil) {\n    var bits = 0;\n    if (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n    if (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n    if (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    _gl.clear(bits);\n  };\n\n  this.clearColor = function () {\n    this.clear(true, false, false);\n  };\n\n  this.clearDepth = function () {\n    this.clear(false, true, false);\n  };\n\n  this.clearStencil = function () {\n    this.clear(false, false, true);\n  };\n\n  this.clearTarget = function (renderTarget, color, depth, stencil) {\n    this.setRenderTarget(renderTarget);\n    this.clear(color, depth, stencil);\n  }; //\n\n\n  this.dispose = function () {\n    _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n    _canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n    renderLists.dispose();\n    renderStates.dispose();\n    properties.dispose();\n    objects.dispose();\n    vr.dispose();\n    animation.stop();\n  }; // Events\n\n\n  function onContextLost(event) {\n    event.preventDefault();\n    console.log('THREE.WebGLRenderer: Context Lost.');\n    _isContextLost = true;\n  }\n\n  function onContextRestore()\n  /* event */\n  {\n    console.log('THREE.WebGLRenderer: Context Restored.');\n    _isContextLost = false;\n    initGLContext();\n  }\n\n  function onMaterialDispose(event) {\n    var material = event.target;\n    material.removeEventListener('dispose', onMaterialDispose);\n    deallocateMaterial(material);\n  } // Buffer deallocation\n\n\n  function deallocateMaterial(material) {\n    releaseMaterialProgramReference(material);\n    properties.remove(material);\n  }\n\n  function releaseMaterialProgramReference(material) {\n    var programInfo = properties.get(material).program;\n    material.program = undefined;\n\n    if (programInfo !== undefined) {\n      programCache.releaseProgram(programInfo);\n    }\n  } // Buffer rendering\n\n\n  function renderObjectImmediate(object, program, material) {\n    object.render(function (object) {\n      _this.renderBufferImmediate(object, program, material);\n    });\n  }\n\n  this.renderBufferImmediate = function (object, program, material) {\n    state.initAttributes();\n    var buffers = properties.get(object);\n    if (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n    if (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n    if (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n    if (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n    var programAttributes = program.getAttributes();\n\n    if (object.hasPositions) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(programAttributes.position);\n\n      _gl.vertexAttribPointer(programAttributes.position, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasNormals) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n      if (!material.isMeshPhongMaterial && !material.isMeshStandardMaterial && !material.isMeshNormalMaterial && material.flatShading === true) {\n        for (var i = 0, l = object.count * 3; i < l; i += 9) {\n          var array = object.normalArray;\n          var nx = (array[i + 0] + array[i + 3] + array[i + 6]) / 3;\n          var ny = (array[i + 1] + array[i + 4] + array[i + 7]) / 3;\n          var nz = (array[i + 2] + array[i + 5] + array[i + 8]) / 3;\n          array[i + 0] = nx;\n          array[i + 1] = ny;\n          array[i + 2] = nz;\n          array[i + 3] = nx;\n          array[i + 4] = ny;\n          array[i + 5] = nz;\n          array[i + 6] = nx;\n          array[i + 7] = ny;\n          array[i + 8] = nz;\n        }\n      }\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(programAttributes.normal);\n\n      _gl.vertexAttribPointer(programAttributes.normal, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasUvs && material.map) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(programAttributes.uv);\n\n      _gl.vertexAttribPointer(programAttributes.uv, 2, _gl.FLOAT, false, 0, 0);\n    }\n\n    if (object.hasColors && material.vertexColors !== NoColors) {\n      _gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n      _gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n      state.enableAttribute(programAttributes.color);\n\n      _gl.vertexAttribPointer(programAttributes.color, 3, _gl.FLOAT, false, 0, 0);\n    }\n\n    state.disableUnusedAttributes();\n\n    _gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n    object.count = 0;\n  };\n\n  this.renderBufferDirect = function (camera, fog, geometry, material, object, group) {\n    var frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n    state.setMaterial(material, frontFaceCW);\n    var program = setProgram(camera, fog, material, object);\n    var geometryProgram = geometry.id + '_' + program.id + '_' + (material.wireframe === true);\n    var updateBuffers = false;\n\n    if (geometryProgram !== _currentGeometryProgram) {\n      _currentGeometryProgram = geometryProgram;\n      updateBuffers = true;\n    }\n\n    if (object.morphTargetInfluences) {\n      morphtargets.update(object, geometry, material, program);\n      updateBuffers = true;\n    } //\n\n\n    var index = geometry.index;\n    var position = geometry.attributes.position;\n    var rangeFactor = 1;\n\n    if (material.wireframe === true) {\n      index = geometries.getWireframeAttribute(geometry);\n      rangeFactor = 2;\n    }\n\n    var attribute;\n    var renderer = bufferRenderer;\n\n    if (index !== null) {\n      attribute = attributes.get(index);\n      renderer = indexedBufferRenderer;\n      renderer.setIndex(attribute);\n    }\n\n    if (updateBuffers) {\n      setupVertexAttributes(material, program, geometry);\n\n      if (index !== null) {\n        _gl.bindBuffer(_gl.ELEMENT_ARRAY_BUFFER, attribute.buffer);\n      }\n    } //\n\n\n    var dataCount = Infinity;\n\n    if (index !== null) {\n      dataCount = index.count;\n    } else if (position !== undefined) {\n      dataCount = position.count;\n    }\n\n    var rangeStart = geometry.drawRange.start * rangeFactor;\n    var rangeCount = geometry.drawRange.count * rangeFactor;\n    var groupStart = group !== null ? group.start * rangeFactor : 0;\n    var groupCount = group !== null ? group.count * rangeFactor : Infinity;\n    var drawStart = Math.max(rangeStart, groupStart);\n    var drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n    var drawCount = Math.max(0, drawEnd - drawStart + 1);\n    if (drawCount === 0) return; //\n\n    if (object.isMesh) {\n      if (material.wireframe === true) {\n        state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n        renderer.setMode(_gl.LINES);\n      } else {\n        switch (object.drawMode) {\n          case TrianglesDrawMode:\n            renderer.setMode(_gl.TRIANGLES);\n            break;\n\n          case TriangleStripDrawMode:\n            renderer.setMode(_gl.TRIANGLE_STRIP);\n            break;\n\n          case TriangleFanDrawMode:\n            renderer.setMode(_gl.TRIANGLE_FAN);\n            break;\n        }\n      }\n    } else if (object.isLine) {\n      var lineWidth = material.linewidth;\n      if (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n      state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n      if (object.isLineSegments) {\n        renderer.setMode(_gl.LINES);\n      } else if (object.isLineLoop) {\n        renderer.setMode(_gl.LINE_LOOP);\n      } else {\n        renderer.setMode(_gl.LINE_STRIP);\n      }\n    } else if (object.isPoints) {\n      renderer.setMode(_gl.POINTS);\n    }\n\n    if (geometry && geometry.isInstancedBufferGeometry) {\n      if (geometry.maxInstancedCount > 0) {\n        renderer.renderInstances(geometry, drawStart, drawCount);\n      }\n    } else {\n      renderer.render(drawStart, drawCount);\n    }\n  };\n\n  function setupVertexAttributes(material, program, geometry) {\n    if (geometry && geometry.isInstancedBufferGeometry) {\n      if (extensions.get('ANGLE_instanced_arrays') === null) {\n        console.error('THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n        return;\n      }\n    }\n\n    state.initAttributes();\n    var geometryAttributes = geometry.attributes;\n    var programAttributes = program.getAttributes();\n    var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n    for (var name in programAttributes) {\n      var programAttribute = programAttributes[name];\n\n      if (programAttribute >= 0) {\n        var geometryAttribute = geometryAttributes[name];\n\n        if (geometryAttribute !== undefined) {\n          var normalized = geometryAttribute.normalized;\n          var size = geometryAttribute.itemSize;\n          var attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n          if (attribute === undefined) continue;\n          var buffer = attribute.buffer;\n          var type = attribute.type;\n          var bytesPerElement = attribute.bytesPerElement;\n\n          if (geometryAttribute.isInterleavedBufferAttribute) {\n            var data = geometryAttribute.data;\n            var stride = data.stride;\n            var offset = geometryAttribute.offset;\n\n            if (data && data.isInstancedInterleavedBuffer) {\n              state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement);\n          } else {\n            if (geometryAttribute.isInstancedBufferAttribute) {\n              state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\n\n              if (geometry.maxInstancedCount === undefined) {\n                geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n              }\n            } else {\n              state.enableAttribute(programAttribute);\n            }\n\n            _gl.bindBuffer(_gl.ARRAY_BUFFER, buffer);\n\n            _gl.vertexAttribPointer(programAttribute, size, type, normalized, 0, 0);\n          }\n        } else if (materialDefaultAttributeValues !== undefined) {\n          var value = materialDefaultAttributeValues[name];\n\n          if (value !== undefined) {\n            switch (value.length) {\n              case 2:\n                _gl.vertexAttrib2fv(programAttribute, value);\n\n                break;\n\n              case 3:\n                _gl.vertexAttrib3fv(programAttribute, value);\n\n                break;\n\n              case 4:\n                _gl.vertexAttrib4fv(programAttribute, value);\n\n                break;\n\n              default:\n                _gl.vertexAttrib1fv(programAttribute, value);\n\n            }\n          }\n        }\n      }\n    }\n\n    state.disableUnusedAttributes();\n  } // Compile\n\n\n  this.compile = function (scene, camera) {\n    currentRenderState = renderStates.get(scene, camera);\n    currentRenderState.init();\n    scene.traverse(function (object) {\n      if (object.isLight) {\n        currentRenderState.pushLight(object);\n\n        if (object.castShadow) {\n          currentRenderState.pushShadow(object);\n        }\n      }\n    });\n    currentRenderState.setupLights(camera);\n    scene.traverse(function (object) {\n      if (object.material) {\n        if (Array.isArray(object.material)) {\n          for (var i = 0; i < object.material.length; i++) {\n            initMaterial(object.material[i], scene.fog, object);\n          }\n        } else {\n          initMaterial(object.material, scene.fog, object);\n        }\n      }\n    });\n  }; // Animation Loop\n\n\n  var onAnimationFrameCallback = null;\n\n  function onAnimationFrame(time) {\n    if (vr.isPresenting()) return;\n    if (onAnimationFrameCallback) onAnimationFrameCallback(time);\n  }\n\n  var animation = new WebGLAnimation();\n  animation.setAnimationLoop(onAnimationFrame);\n  if (typeof window !== 'undefined') animation.setContext(window);\n\n  this.setAnimationLoop = function (callback) {\n    onAnimationFrameCallback = callback;\n    vr.setAnimationLoop(callback);\n    animation.start();\n  }; // Rendering\n\n\n  this.render = function (scene, camera, renderTarget, forceClear) {\n    if (!(camera && camera.isCamera)) {\n      console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n      return;\n    }\n\n    if (_isContextLost) return; // reset caching for this frame\n\n    _currentGeometryProgram = '';\n    _currentMaterialId = -1;\n    _currentCamera = null; // update scene graph\n\n    if (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    if (vr.enabled) {\n      camera = vr.getCamera(camera);\n    } //\n\n\n    currentRenderState = renderStates.get(scene, camera);\n    currentRenderState.init();\n    scene.onBeforeRender(_this, scene, camera, renderTarget);\n\n    _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n    _frustum.setFromMatrix(_projScreenMatrix);\n\n    _localClippingEnabled = this.localClippingEnabled;\n    _clippingEnabled = _clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n    currentRenderList = renderLists.get(scene, camera);\n    currentRenderList.init();\n    projectObject(scene, camera, _this.sortObjects);\n\n    if (_this.sortObjects === true) {\n      currentRenderList.sort();\n    } //\n\n\n    if (_clippingEnabled) _clipping.beginShadows();\n    var shadowsArray = currentRenderState.state.shadowsArray;\n    shadowMap.render(shadowsArray, scene, camera);\n    currentRenderState.setupLights(camera);\n    if (_clippingEnabled) _clipping.endShadows(); //\n\n    if (this.info.autoReset) this.info.reset();\n\n    if (renderTarget === undefined) {\n      renderTarget = null;\n    }\n\n    this.setRenderTarget(renderTarget); //\n\n    background.render(currentRenderList, scene, camera, forceClear); // render scene\n\n    var opaqueObjects = currentRenderList.opaque;\n    var transparentObjects = currentRenderList.transparent;\n\n    if (scene.overrideMaterial) {\n      var overrideMaterial = scene.overrideMaterial;\n      if (opaqueObjects.length) renderObjects(opaqueObjects, scene, camera, overrideMaterial);\n      if (transparentObjects.length) renderObjects(transparentObjects, scene, camera, overrideMaterial);\n    } else {\n      // opaque pass (front-to-back order)\n      if (opaqueObjects.length) renderObjects(opaqueObjects, scene, camera); // transparent pass (back-to-front order)\n\n      if (transparentObjects.length) renderObjects(transparentObjects, scene, camera);\n    } // custom renderers\n\n\n    var spritesArray = currentRenderState.state.spritesArray;\n    spriteRenderer.render(spritesArray, scene, camera); // Generate mipmap if we're using any kind of mipmap filtering\n\n    if (renderTarget) {\n      textures.updateRenderTargetMipmap(renderTarget);\n    } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n    state.buffers.depth.setTest(true);\n    state.buffers.depth.setMask(true);\n    state.buffers.color.setMask(true);\n    state.setPolygonOffset(false);\n    scene.onAfterRender(_this, scene, camera);\n\n    if (vr.enabled) {\n      vr.submitFrame();\n    } // _gl.finish();\n\n\n    currentRenderList = null;\n    currentRenderState = null;\n  };\n  /*\n  // TODO Duplicated code (Frustum)\n  \tvar _sphere = new Sphere();\n  \tfunction isObjectViewable( object ) {\n  \t\tvar geometry = object.geometry;\n  \t\tif ( geometry.boundingSphere === null )\n  \t\tgeometry.computeBoundingSphere();\n  \t\t_sphere.copy( geometry.boundingSphere ).\n  \tapplyMatrix4( object.matrixWorld );\n  \t\treturn isSphereViewable( _sphere );\n  \t}\n  \tfunction isSpriteViewable( sprite ) {\n  \t\t_sphere.center.set( 0, 0, 0 );\n  \t_sphere.radius = 0.7071067811865476;\n  \t_sphere.applyMatrix4( sprite.matrixWorld );\n  \t\treturn isSphereViewable( _sphere );\n  \t}\n  \tfunction isSphereViewable( sphere ) {\n  \t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n  \t\tvar numPlanes = _clipping.numPlanes;\n  \t\tif ( numPlanes === 0 ) return true;\n  \t\tvar planes = _this.clippingPlanes,\n  \t\t\tcenter = sphere.center,\n  \t\tnegRad = - sphere.radius,\n  \t\ti = 0;\n  \t\tdo {\n  \t\t\t// out when deeper than radius in the negative halfspace\n  \t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n  \t\t} while ( ++ i !== numPlanes );\n  \t\treturn true;\n  \t}\n  */\n\n\n  function projectObject(object, camera, sortObjects) {\n    if (object.visible === false) return;\n    var visible = object.layers.test(camera.layers);\n\n    if (visible) {\n      if (object.isLight) {\n        currentRenderState.pushLight(object);\n\n        if (object.castShadow) {\n          currentRenderState.pushShadow(object);\n        }\n      } else if (object.isSprite) {\n        if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n          currentRenderState.pushSprite(object);\n        }\n      } else if (object.isImmediateRenderObject) {\n        if (sortObjects) {\n          _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n        }\n\n        currentRenderList.push(object, null, object.material, _vector3.z, null);\n      } else if (object.isMesh || object.isLine || object.isPoints) {\n        if (object.isSkinnedMesh) {\n          object.skeleton.update();\n        }\n\n        if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          var geometry = objects.update(object);\n          var material = object.material;\n\n          if (Array.isArray(material)) {\n            var groups = geometry.groups;\n\n            for (var i = 0, l = groups.length; i < l; i++) {\n              var group = groups[i];\n              var groupMaterial = material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                currentRenderList.push(object, geometry, groupMaterial, _vector3.z, group);\n              }\n            }\n          } else if (material.visible) {\n            currentRenderList.push(object, geometry, material, _vector3.z, null);\n          }\n        }\n      }\n    }\n\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      projectObject(children[i], camera, sortObjects);\n    }\n  }\n\n  function renderObjects(renderList, scene, camera, overrideMaterial) {\n    for (var i = 0, l = renderList.length; i < l; i++) {\n      var renderItem = renderList[i];\n      var object = renderItem.object;\n      var geometry = renderItem.geometry;\n      var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n      var group = renderItem.group;\n\n      if (camera.isArrayCamera) {\n        _currentArrayCamera = camera;\n        var cameras = camera.cameras;\n\n        for (var j = 0, jl = cameras.length; j < jl; j++) {\n          var camera2 = cameras[j];\n\n          if (object.layers.test(camera2.layers)) {\n            if ('viewport' in camera2) {\n              // XR\n              state.viewport(_currentViewport.copy(camera2.viewport));\n            } else {\n              var bounds = camera2.bounds;\n              var x = bounds.x * _width;\n              var y = bounds.y * _height;\n              var width = bounds.z * _width;\n              var height = bounds.w * _height;\n              state.viewport(_currentViewport.set(x, y, width, height).multiplyScalar(_pixelRatio));\n            }\n\n            renderObject(object, scene, camera2, geometry, material, group);\n          }\n        }\n      } else {\n        _currentArrayCamera = null;\n        renderObject(object, scene, camera, geometry, material, group);\n      }\n    }\n  }\n\n  function renderObject(object, scene, camera, geometry, material, group) {\n    object.onBeforeRender(_this, scene, camera, geometry, material, group);\n    currentRenderState = renderStates.get(scene, _currentArrayCamera || camera);\n    object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n    object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n    if (object.isImmediateRenderObject) {\n      var frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n      state.setMaterial(material, frontFaceCW);\n      var program = setProgram(camera, scene.fog, material, object);\n      _currentGeometryProgram = '';\n      renderObjectImmediate(object, program, material);\n    } else {\n      _this.renderBufferDirect(camera, scene.fog, geometry, material, object, group);\n    }\n\n    object.onAfterRender(_this, scene, camera, geometry, material, group);\n    currentRenderState = renderStates.get(scene, _currentArrayCamera || camera);\n  }\n\n  function initMaterial(material, fog, object) {\n    var materialProperties = properties.get(material);\n    var lights = currentRenderState.state.lights;\n    var shadowsArray = currentRenderState.state.shadowsArray;\n    var parameters = programCache.getParameters(material, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object);\n    var code = programCache.getProgramCode(material, parameters);\n    var program = materialProperties.program;\n    var programChange = true;\n\n    if (program === undefined) {\n      // new material\n      material.addEventListener('dispose', onMaterialDispose);\n    } else if (program.code !== code) {\n      // changed glsl or parameters\n      releaseMaterialProgramReference(material);\n    } else if (materialProperties.lightsHash !== lights.state.hash) {\n      properties.update(material, 'lightsHash', lights.state.hash);\n      programChange = false;\n    } else if (parameters.shaderID !== undefined) {\n      // same glsl and uniform list\n      return;\n    } else {\n      // only rebuild uniform list\n      programChange = false;\n    }\n\n    if (programChange) {\n      if (parameters.shaderID) {\n        var shader = ShaderLib[parameters.shaderID];\n        materialProperties.shader = {\n          name: material.type,\n          uniforms: UniformsUtils.clone(shader.uniforms),\n          vertexShader: shader.vertexShader,\n          fragmentShader: shader.fragmentShader\n        };\n      } else {\n        materialProperties.shader = {\n          name: material.type,\n          uniforms: material.uniforms,\n          vertexShader: material.vertexShader,\n          fragmentShader: material.fragmentShader\n        };\n      }\n\n      material.onBeforeCompile(materialProperties.shader, _this);\n      program = programCache.acquireProgram(material, materialProperties.shader, parameters, code);\n      materialProperties.program = program;\n      material.program = program;\n    }\n\n    var programAttributes = program.getAttributes();\n\n    if (material.morphTargets) {\n      material.numSupportedMorphTargets = 0;\n\n      for (var i = 0; i < _this.maxMorphTargets; i++) {\n        if (programAttributes['morphTarget' + i] >= 0) {\n          material.numSupportedMorphTargets++;\n        }\n      }\n    }\n\n    if (material.morphNormals) {\n      material.numSupportedMorphNormals = 0;\n\n      for (var i = 0; i < _this.maxMorphNormals; i++) {\n        if (programAttributes['morphNormal' + i] >= 0) {\n          material.numSupportedMorphNormals++;\n        }\n      }\n    }\n\n    var uniforms = materialProperties.shader.uniforms;\n\n    if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n      materialProperties.numClippingPlanes = _clipping.numPlanes;\n      materialProperties.numIntersection = _clipping.numIntersection;\n      uniforms.clippingPlanes = _clipping.uniform;\n    }\n\n    materialProperties.fog = fog; // store the light setup it was created for\n\n    materialProperties.lightsHash = lights.state.hash;\n\n    if (material.lights) {\n      // wire up the material to this renderer's lighting state\n      uniforms.ambientLightColor.value = lights.state.ambient;\n      uniforms.directionalLights.value = lights.state.directional;\n      uniforms.spotLights.value = lights.state.spot;\n      uniforms.rectAreaLights.value = lights.state.rectArea;\n      uniforms.pointLights.value = lights.state.point;\n      uniforms.hemisphereLights.value = lights.state.hemi;\n      uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n      uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n      uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n      uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n      uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n      uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n    }\n\n    var progUniforms = materialProperties.program.getUniforms(),\n        uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n    materialProperties.uniformsList = uniformsList;\n  }\n\n  function setProgram(camera, fog, material, object) {\n    _usedTextureUnits = 0;\n    var materialProperties = properties.get(material);\n    var lights = currentRenderState.state.lights;\n\n    if (_clippingEnabled) {\n      if (_localClippingEnabled || camera !== _currentCamera) {\n        var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n        // object instead of the material, once it becomes feasible\n        // (#8465, #8379)\n\n        _clipping.setState(material.clippingPlanes, material.clipIntersection, material.clipShadows, camera, materialProperties, useCache);\n      }\n    }\n\n    if (material.needsUpdate === false) {\n      if (materialProperties.program === undefined) {\n        material.needsUpdate = true;\n      } else if (material.fog && materialProperties.fog !== fog) {\n        material.needsUpdate = true;\n      } else if (material.lights && materialProperties.lightsHash !== lights.state.hash) {\n        material.needsUpdate = true;\n      } else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== _clipping.numPlanes || materialProperties.numIntersection !== _clipping.numIntersection)) {\n        material.needsUpdate = true;\n      }\n    }\n\n    if (material.needsUpdate) {\n      initMaterial(material, fog, object);\n      material.needsUpdate = false;\n    }\n\n    var refreshProgram = false;\n    var refreshMaterial = false;\n    var refreshLights = false;\n    var program = materialProperties.program,\n        p_uniforms = program.getUniforms(),\n        m_uniforms = materialProperties.shader.uniforms;\n\n    if (state.useProgram(program.program)) {\n      refreshProgram = true;\n      refreshMaterial = true;\n      refreshLights = true;\n    }\n\n    if (material.id !== _currentMaterialId) {\n      _currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (refreshProgram || camera !== _currentCamera) {\n      p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n      if (capabilities.logarithmicDepthBuffer) {\n        p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n      } // Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\n      if (_currentCamera !== (_currentArrayCamera || camera)) {\n        _currentCamera = _currentArrayCamera || camera; // lighting uniforms depend on the camera so enforce an update\n        // now, in case this material supports lights - or later, when\n        // the next material that does gets activated:\n\n        refreshMaterial = true; // set to true on material change\n\n        refreshLights = true; // remains set until update done\n      } // load material specific uniforms\n      // (shader material also gets them for the sake of genericity)\n\n\n      if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.envMap) {\n        var uCamPos = p_uniforms.map.cameraPosition;\n\n        if (uCamPos !== undefined) {\n          uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n        }\n      }\n\n      if (material.isMeshPhongMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.skinning) {\n        p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n      }\n    } // skinning uniforms must be set even if material didn't change\n    // auto-setting of texture unit for bone texture must go before other textures\n    // not sure why, but otherwise weird things happen\n\n\n    if (material.skinning) {\n      p_uniforms.setOptional(_gl, object, 'bindMatrix');\n      p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n      var skeleton = object.skeleton;\n\n      if (skeleton) {\n        var bones = skeleton.bones;\n\n        if (capabilities.floatVertexTextures) {\n          if (skeleton.boneTexture === undefined) {\n            // layout (1 matrix = 4 pixels)\n            //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n            //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n            //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n            //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n            //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n            var size = Math.sqrt(bones.length * 4); // 4 pixels needed for 1 matrix\n\n            size = _Math.ceilPowerOfTwo(size);\n            size = Math.max(size, 4);\n            var boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n            boneMatrices.set(skeleton.boneMatrices); // copy current values\n\n            var boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n            boneTexture.needsUpdate = true;\n            skeleton.boneMatrices = boneMatrices;\n            skeleton.boneTexture = boneTexture;\n            skeleton.boneTextureSize = size;\n          }\n\n          p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture);\n          p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n        } else {\n          p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n        }\n      }\n    }\n\n    if (refreshMaterial) {\n      p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n      p_uniforms.setValue(_gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint);\n\n      if (material.lights) {\n        // the current material requires lighting info\n        // note: all lighting uniforms are always set correctly\n        // they simply reference the renderer's state for their\n        // values\n        //\n        // use the current material's .needsUpdate flags to set\n        // the GL state when required\n        markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n      } // refresh uniforms common to several materials\n\n\n      if (fog && material.fog) {\n        refreshUniformsFog(m_uniforms, fog);\n      }\n\n      if (material.isMeshBasicMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n      } else if (material.isMeshLambertMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n        refreshUniformsLambert(m_uniforms, material);\n      } else if (material.isMeshPhongMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n\n        if (material.isMeshToonMaterial) {\n          refreshUniformsToon(m_uniforms, material);\n        } else {\n          refreshUniformsPhong(m_uniforms, material);\n        }\n      } else if (material.isMeshStandardMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n\n        if (material.isMeshPhysicalMaterial) {\n          refreshUniformsPhysical(m_uniforms, material);\n        } else {\n          refreshUniformsStandard(m_uniforms, material);\n        }\n      } else if (material.isMeshDepthMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n        refreshUniformsDepth(m_uniforms, material);\n      } else if (material.isMeshDistanceMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n        refreshUniformsDistance(m_uniforms, material);\n      } else if (material.isMeshNormalMaterial) {\n        refreshUniformsCommon(m_uniforms, material);\n        refreshUniformsNormal(m_uniforms, material);\n      } else if (material.isLineBasicMaterial) {\n        refreshUniformsLine(m_uniforms, material);\n\n        if (material.isLineDashedMaterial) {\n          refreshUniformsDash(m_uniforms, material);\n        }\n      } else if (material.isPointsMaterial) {\n        refreshUniformsPoints(m_uniforms, material);\n      } else if (material.isShadowMaterial) {\n        m_uniforms.color.value = material.color;\n        m_uniforms.opacity.value = material.opacity;\n      } // RectAreaLight Texture\n      // TODO (mrdoob): Find a nicer implementation\n\n\n      if (m_uniforms.ltc_1 !== undefined) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n      if (m_uniforms.ltc_2 !== undefined) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n      WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, _this);\n    }\n\n    if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n      WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, _this);\n      material.uniformsNeedUpdate = false;\n    } // common matrices\n\n\n    p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n    p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n    p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n    return program;\n  } // Uniforms (refresh uniforms objects)\n\n\n  function refreshUniformsCommon(uniforms, material) {\n    uniforms.opacity.value = material.opacity;\n\n    if (material.color) {\n      uniforms.diffuse.value = material.color;\n    }\n\n    if (material.emissive) {\n      uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n    }\n\n    if (material.map) {\n      uniforms.map.value = material.map;\n    }\n\n    if (material.alphaMap) {\n      uniforms.alphaMap.value = material.alphaMap;\n    }\n\n    if (material.specularMap) {\n      uniforms.specularMap.value = material.specularMap;\n    }\n\n    if (material.envMap) {\n      uniforms.envMap.value = material.envMap; // don't flip CubeTexture envMaps, flip everything else:\n      //  WebGLRenderTargetCube will be flipped for backwards compatibility\n      //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n      // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\n      uniforms.flipEnvMap.value = !(material.envMap && material.envMap.isCubeTexture) ? 1 : -1;\n      uniforms.reflectivity.value = material.reflectivity;\n      uniforms.refractionRatio.value = material.refractionRatio;\n      uniforms.maxMipLevel.value = properties.get(material.envMap).__maxMipLevel;\n    }\n\n    if (material.lightMap) {\n      uniforms.lightMap.value = material.lightMap;\n      uniforms.lightMapIntensity.value = material.lightMapIntensity;\n    }\n\n    if (material.aoMap) {\n      uniforms.aoMap.value = material.aoMap;\n      uniforms.aoMapIntensity.value = material.aoMapIntensity;\n    } // uv repeat and offset setting priorities\n    // 1. color map\n    // 2. specular map\n    // 3. normal map\n    // 4. bump map\n    // 5. alpha map\n    // 6. emissive map\n\n\n    var uvScaleMap;\n\n    if (material.map) {\n      uvScaleMap = material.map;\n    } else if (material.specularMap) {\n      uvScaleMap = material.specularMap;\n    } else if (material.displacementMap) {\n      uvScaleMap = material.displacementMap;\n    } else if (material.normalMap) {\n      uvScaleMap = material.normalMap;\n    } else if (material.bumpMap) {\n      uvScaleMap = material.bumpMap;\n    } else if (material.roughnessMap) {\n      uvScaleMap = material.roughnessMap;\n    } else if (material.metalnessMap) {\n      uvScaleMap = material.metalnessMap;\n    } else if (material.alphaMap) {\n      uvScaleMap = material.alphaMap;\n    } else if (material.emissiveMap) {\n      uvScaleMap = material.emissiveMap;\n    }\n\n    if (uvScaleMap !== undefined) {\n      // backwards compatibility\n      if (uvScaleMap.isWebGLRenderTarget) {\n        uvScaleMap = uvScaleMap.texture;\n      }\n\n      if (uvScaleMap.matrixAutoUpdate === true) {\n        uvScaleMap.updateMatrix();\n      }\n\n      uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n    }\n  }\n\n  function refreshUniformsLine(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n  }\n\n  function refreshUniformsDash(uniforms, material) {\n    uniforms.dashSize.value = material.dashSize;\n    uniforms.totalSize.value = material.dashSize + material.gapSize;\n    uniforms.scale.value = material.scale;\n  }\n\n  function refreshUniformsPoints(uniforms, material) {\n    uniforms.diffuse.value = material.color;\n    uniforms.opacity.value = material.opacity;\n    uniforms.size.value = material.size * _pixelRatio;\n    uniforms.scale.value = _height * 0.5;\n    uniforms.map.value = material.map;\n\n    if (material.map !== null) {\n      if (material.map.matrixAutoUpdate === true) {\n        material.map.updateMatrix();\n      }\n\n      uniforms.uvTransform.value.copy(material.map.matrix);\n    }\n  }\n\n  function refreshUniformsFog(uniforms, fog) {\n    uniforms.fogColor.value = fog.color;\n\n    if (fog.isFog) {\n      uniforms.fogNear.value = fog.near;\n      uniforms.fogFar.value = fog.far;\n    } else if (fog.isFogExp2) {\n      uniforms.fogDensity.value = fog.density;\n    }\n  }\n\n  function refreshUniformsLambert(uniforms, material) {\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n  }\n\n  function refreshUniformsPhong(uniforms, material) {\n    uniforms.specular.value = material.specular;\n    uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n      if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n      if (material.side === BackSide) uniforms.normalScale.value.negate();\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsToon(uniforms, material) {\n    refreshUniformsPhong(uniforms, material);\n\n    if (material.gradientMap) {\n      uniforms.gradientMap.value = material.gradientMap;\n    }\n  }\n\n  function refreshUniformsStandard(uniforms, material) {\n    uniforms.roughness.value = material.roughness;\n    uniforms.metalness.value = material.metalness;\n\n    if (material.roughnessMap) {\n      uniforms.roughnessMap.value = material.roughnessMap;\n    }\n\n    if (material.metalnessMap) {\n      uniforms.metalnessMap.value = material.metalnessMap;\n    }\n\n    if (material.emissiveMap) {\n      uniforms.emissiveMap.value = material.emissiveMap;\n    }\n\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n      if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n      if (material.side === BackSide) uniforms.normalScale.value.negate();\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n\n    if (material.envMap) {\n      //uniforms.envMap.value = material.envMap; // part of uniforms common\n      uniforms.envMapIntensity.value = material.envMapIntensity;\n    }\n  }\n\n  function refreshUniformsPhysical(uniforms, material) {\n    refreshUniformsStandard(uniforms, material);\n    uniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n    uniforms.clearCoat.value = material.clearCoat;\n    uniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n  }\n\n  function refreshUniformsDepth(uniforms, material) {\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  }\n\n  function refreshUniformsDistance(uniforms, material) {\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n\n    uniforms.referencePosition.value.copy(material.referencePosition);\n    uniforms.nearDistance.value = material.nearDistance;\n    uniforms.farDistance.value = material.farDistance;\n  }\n\n  function refreshUniformsNormal(uniforms, material) {\n    if (material.bumpMap) {\n      uniforms.bumpMap.value = material.bumpMap;\n      uniforms.bumpScale.value = material.bumpScale;\n      if (material.side === BackSide) uniforms.bumpScale.value *= -1;\n    }\n\n    if (material.normalMap) {\n      uniforms.normalMap.value = material.normalMap;\n      uniforms.normalScale.value.copy(material.normalScale);\n      if (material.side === BackSide) uniforms.normalScale.value.negate();\n    }\n\n    if (material.displacementMap) {\n      uniforms.displacementMap.value = material.displacementMap;\n      uniforms.displacementScale.value = material.displacementScale;\n      uniforms.displacementBias.value = material.displacementBias;\n    }\n  } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n  function markUniformsLightsNeedsUpdate(uniforms, value) {\n    uniforms.ambientLightColor.needsUpdate = value;\n    uniforms.directionalLights.needsUpdate = value;\n    uniforms.pointLights.needsUpdate = value;\n    uniforms.spotLights.needsUpdate = value;\n    uniforms.rectAreaLights.needsUpdate = value;\n    uniforms.hemisphereLights.needsUpdate = value;\n  } // Textures\n\n\n  function allocTextureUnit() {\n    var textureUnit = _usedTextureUnits;\n\n    if (textureUnit >= capabilities.maxTextures) {\n      console.warn('THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures);\n    }\n\n    _usedTextureUnits += 1;\n    return textureUnit;\n  }\n\n  this.allocTextureUnit = allocTextureUnit; // this.setTexture2D = setTexture2D;\n\n  this.setTexture2D = function () {\n    var warned = false; // backwards compatibility: peel texture.texture\n\n    return function setTexture2D(texture, slot) {\n      if (texture && texture.isWebGLRenderTarget) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\");\n          warned = true;\n        }\n\n        texture = texture.texture;\n      }\n\n      textures.setTexture2D(texture, slot);\n    };\n  }();\n\n  this.setTexture = function () {\n    var warned = false;\n    return function setTexture(texture, slot) {\n      if (!warned) {\n        console.warn(\"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\");\n        warned = true;\n      }\n\n      textures.setTexture2D(texture, slot);\n    };\n  }();\n\n  this.setTextureCube = function () {\n    var warned = false;\n    return function setTextureCube(texture, slot) {\n      // backwards compatibility: peel texture.texture\n      if (texture && texture.isWebGLRenderTargetCube) {\n        if (!warned) {\n          console.warn(\"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\");\n          warned = true;\n        }\n\n        texture = texture.texture;\n      } // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n      // TODO: unify these code paths\n\n\n      if (texture && texture.isCubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n        // CompressedTexture can have Array in image :/\n        // this function alone should take care of cube textures\n        textures.setTextureCube(texture, slot);\n      } else {\n        // assumed: texture property of THREE.WebGLRenderTargetCube\n        textures.setTextureCubeDynamic(texture, slot);\n      }\n    };\n  }(); //\n\n\n  this.setFramebuffer = function (value) {\n    _framebuffer = value;\n  };\n\n  this.getRenderTarget = function () {\n    return _currentRenderTarget;\n  };\n\n  this.setRenderTarget = function (renderTarget) {\n    _currentRenderTarget = renderTarget;\n\n    if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n      textures.setupRenderTarget(renderTarget);\n    }\n\n    var framebuffer = _framebuffer;\n    var isCube = false;\n\n    if (renderTarget) {\n      var __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (renderTarget.isWebGLRenderTargetCube) {\n        framebuffer = __webglFramebuffer[renderTarget.activeCubeFace];\n        isCube = true;\n      } else {\n        framebuffer = __webglFramebuffer;\n      }\n\n      _currentViewport.copy(renderTarget.viewport);\n\n      _currentScissor.copy(renderTarget.scissor);\n\n      _currentScissorTest = renderTarget.scissorTest;\n    } else {\n      _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio);\n\n      _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio);\n\n      _currentScissorTest = _scissorTest;\n    }\n\n    if (_currentFramebuffer !== framebuffer) {\n      _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n      _currentFramebuffer = framebuffer;\n    }\n\n    state.viewport(_currentViewport);\n    state.scissor(_currentScissor);\n    state.setScissorTest(_currentScissorTest);\n\n    if (isCube) {\n      var textureProperties = properties.get(renderTarget.texture);\n\n      _gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel);\n    }\n  };\n\n  this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer) {\n    if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n      console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n      return;\n    }\n\n    var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n    if (framebuffer) {\n      var restore = false;\n\n      if (framebuffer !== _currentFramebuffer) {\n        _gl.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n        restore = true;\n      }\n\n      try {\n        var texture = renderTarget.texture;\n        var textureFormat = texture.format;\n        var textureType = texture.type;\n\n        if (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n          return;\n        }\n\n        if (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // IE11, Edge and Chrome Mac < 52 (#9513)\n        !(textureType === FloatType && (extensions.get('OES_texture_float') || extensions.get('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n        !(textureType === HalfFloatType && extensions.get('EXT_color_buffer_half_float'))) {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n          return;\n        }\n\n        if (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n          // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n          if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n            _gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n          }\n        } else {\n          console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n        }\n      } finally {\n        if (restore) {\n          _gl.bindFramebuffer(_gl.FRAMEBUFFER, _currentFramebuffer);\n        }\n      }\n    }\n  };\n\n  this.copyFramebufferToTexture = function (position, texture, level) {\n    var width = texture.image.width;\n    var height = texture.image.height;\n    var glFormat = utils.convert(texture.format);\n    this.setTexture2D(texture, 0);\n\n    _gl.copyTexImage2D(_gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0);\n  };\n\n  this.copyTextureToTexture = function (position, srcTexture, dstTexture, level) {\n    var width = srcTexture.image.width;\n    var height = srcTexture.image.height;\n    var glFormat = utils.convert(dstTexture.format);\n    var glType = utils.convert(dstTexture.type);\n    this.setTexture2D(dstTexture, 0);\n\n    if (srcTexture.isDataTexture) {\n      _gl.texSubImage2D(_gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n    } else {\n      _gl.texSubImage2D(_gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image);\n    }\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nfunction FogExp2(color, density) {\n  this.name = '';\n  this.color = new Color(color);\n  this.density = density !== undefined ? density : 0.00025;\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n  return new FogExp2(this.color, this.density);\n};\n\nFogExp2.prototype.toJSON = function ()\n/* meta */\n{\n  return {\n    type: 'FogExp2',\n    color: this.color.getHex(),\n    density: this.density\n  };\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nfunction Fog(color, near, far) {\n  this.name = '';\n  this.color = new Color(color);\n  this.near = near !== undefined ? near : 1;\n  this.far = far !== undefined ? far : 1000;\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n  return new Fog(this.color, this.near, this.far);\n};\n\nFog.prototype.toJSON = function ()\n/* meta */\n{\n  return {\n    type: 'Fog',\n    color: this.color.getHex(),\n    near: this.near,\n    far: this.far\n  };\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Scene() {\n  Object3D.call(this);\n  this.type = 'Scene';\n  this.background = null;\n  this.fog = null;\n  this.overrideMaterial = null;\n  this.autoUpdate = true; // checked by the renderer\n}\n\nScene.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Scene,\n  copy: function (source, recursive) {\n    Object3D.prototype.copy.call(this, source, recursive);\n    if (source.background !== null) this.background = source.background.clone();\n    if (source.fog !== null) this.fog = source.fog.clone();\n    if (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n    this.autoUpdate = source.autoUpdate;\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    if (this.background !== null) data.object.background = this.background.toJSON(meta);\n    if (this.fog !== null) data.object.fog = this.fog.toJSON();\n    return data;\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial(parameters) {\n  Material.call(this);\n  this.type = 'SpriteMaterial';\n  this.color = new Color(0xffffff);\n  this.map = null;\n  this.rotation = 0;\n  this.fog = false;\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nSpriteMaterial.prototype = Object.create(Material.prototype);\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.rotation = source.rotation;\n  return this;\n};\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nfunction Sprite(material) {\n  Object3D.call(this);\n  this.type = 'Sprite';\n  this.material = material !== undefined ? material : new SpriteMaterial();\n  this.center = new Vector2(0.5, 0.5);\n}\n\nSprite.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Sprite,\n  isSprite: true,\n  raycast: function () {\n    var intersectPoint = new Vector3();\n    var worldScale = new Vector3();\n    var mvPosition = new Vector3();\n    var alignedPosition = new Vector2();\n    var rotatedPosition = new Vector2();\n    var viewWorldMatrix = new Matrix4();\n    var vA = new Vector3();\n    var vB = new Vector3();\n    var vC = new Vector3();\n\n    function transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n      // compute position in camera space\n      alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n      if (sin !== undefined) {\n        rotatedPosition.x = cos * alignedPosition.x - sin * alignedPosition.y;\n        rotatedPosition.y = sin * alignedPosition.x + cos * alignedPosition.y;\n      } else {\n        rotatedPosition.copy(alignedPosition);\n      }\n\n      vertexPosition.copy(mvPosition);\n      vertexPosition.x += rotatedPosition.x;\n      vertexPosition.y += rotatedPosition.y; // transform to world space\n\n      vertexPosition.applyMatrix4(viewWorldMatrix);\n    }\n\n    return function raycast(raycaster, intersects) {\n      worldScale.setFromMatrixScale(this.matrixWorld);\n      viewWorldMatrix.getInverse(this.modelViewMatrix).premultiply(this.matrixWorld);\n      mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n      var rotation = this.material.rotation;\n      var sin, cos;\n\n      if (rotation !== 0) {\n        cos = Math.cos(rotation);\n        sin = Math.sin(rotation);\n      }\n\n      var center = this.center;\n      transformVertex(vA.set(-0.5, -0.5, 0), mvPosition, center, worldScale, sin, cos);\n      transformVertex(vB.set(0.5, -0.5, 0), mvPosition, center, worldScale, sin, cos);\n      transformVertex(vC.set(0.5, 0.5, 0), mvPosition, center, worldScale, sin, cos); // check first triangle\n\n      var intersect = raycaster.ray.intersectTriangle(vA, vB, vC, false, intersectPoint);\n\n      if (intersect === null) {\n        // check second triangle\n        transformVertex(vB.set(-0.5, 0.5, 0), mvPosition, center, worldScale, sin, cos);\n        intersect = raycaster.ray.intersectTriangle(vA, vC, vB, false, intersectPoint);\n\n        if (intersect === null) {\n          return;\n        }\n      }\n\n      var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n      if (distance < raycaster.near || distance > raycaster.far) return;\n      intersects.push({\n        distance: distance,\n        point: intersectPoint.clone(),\n        face: null,\n        object: this\n      });\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.material).copy(this);\n  },\n  copy: function (source) {\n    Object3D.prototype.copy.call(this, source);\n    if (source.center !== undefined) this.center.copy(source.center);\n    return this;\n  }\n});\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n  Object3D.call(this);\n  this.type = 'LOD';\n  Object.defineProperties(this, {\n    levels: {\n      enumerable: true,\n      value: []\n    }\n  });\n}\n\nLOD.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: LOD,\n  copy: function (source) {\n    Object3D.prototype.copy.call(this, source, false);\n    var levels = source.levels;\n\n    for (var i = 0, l = levels.length; i < l; i++) {\n      var level = levels[i];\n      this.addLevel(level.object.clone(), level.distance);\n    }\n\n    return this;\n  },\n  addLevel: function (object, distance) {\n    if (distance === undefined) distance = 0;\n    distance = Math.abs(distance);\n    var levels = this.levels;\n\n    for (var l = 0; l < levels.length; l++) {\n      if (distance < levels[l].distance) {\n        break;\n      }\n    }\n\n    levels.splice(l, 0, {\n      distance: distance,\n      object: object\n    });\n    this.add(object);\n  },\n  getObjectForDistance: function (distance) {\n    var levels = this.levels;\n\n    for (var i = 1, l = levels.length; i < l; i++) {\n      if (distance < levels[i].distance) {\n        break;\n      }\n    }\n\n    return levels[i - 1].object;\n  },\n  raycast: function () {\n    var matrixPosition = new Vector3();\n    return function raycast(raycaster, intersects) {\n      matrixPosition.setFromMatrixPosition(this.matrixWorld);\n      var distance = raycaster.ray.origin.distanceTo(matrixPosition);\n      this.getObjectForDistance(distance).raycast(raycaster, intersects);\n    };\n  }(),\n  update: function () {\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n    return function update(camera) {\n      var levels = this.levels;\n\n      if (levels.length > 1) {\n        v1.setFromMatrixPosition(camera.matrixWorld);\n        v2.setFromMatrixPosition(this.matrixWorld);\n        var distance = v1.distanceTo(v2);\n        levels[0].object.visible = true;\n\n        for (var i = 1, l = levels.length; i < l; i++) {\n          if (distance >= levels[i].distance) {\n            levels[i - 1].object.visible = false;\n            levels[i].object.visible = true;\n          } else {\n            break;\n          }\n        }\n\n        for (; i < l; i++) {\n          levels[i].object.visible = false;\n        }\n      }\n    };\n  }(),\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    data.object.levels = [];\n    var levels = this.levels;\n\n    for (var i = 0, l = levels.length; i < l; i++) {\n      var level = levels[i];\n      data.object.levels.push({\n        object: level.object.uuid,\n        distance: level.distance\n      });\n    }\n\n    return data;\n  }\n});\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton(bones, boneInverses) {\n  // copy the bone array\n  bones = bones || [];\n  this.bones = bones.slice(0);\n  this.boneMatrices = new Float32Array(this.bones.length * 16); // use the supplied bone inverses or calculate the inverses\n\n  if (boneInverses === undefined) {\n    this.calculateInverses();\n  } else {\n    if (this.bones.length === boneInverses.length) {\n      this.boneInverses = boneInverses.slice(0);\n    } else {\n      console.warn('THREE.Skeleton boneInverses is the wrong length.');\n      this.boneInverses = [];\n\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        this.boneInverses.push(new Matrix4());\n      }\n    }\n  }\n}\n\nObject.assign(Skeleton.prototype, {\n  calculateInverses: function () {\n    this.boneInverses = [];\n\n    for (var i = 0, il = this.bones.length; i < il; i++) {\n      var inverse = new Matrix4();\n\n      if (this.bones[i]) {\n        inverse.getInverse(this.bones[i].matrixWorld);\n      }\n\n      this.boneInverses.push(inverse);\n    }\n  },\n  pose: function () {\n    var bone, i, il; // recover the bind-time world matrices\n\n    for (i = 0, il = this.bones.length; i < il; i++) {\n      bone = this.bones[i];\n\n      if (bone) {\n        bone.matrixWorld.getInverse(this.boneInverses[i]);\n      }\n    } // compute the local matrices, positions, rotations and scales\n\n\n    for (i = 0, il = this.bones.length; i < il; i++) {\n      bone = this.bones[i];\n\n      if (bone) {\n        if (bone.parent && bone.parent.isBone) {\n          bone.matrix.getInverse(bone.parent.matrixWorld);\n          bone.matrix.multiply(bone.matrixWorld);\n        } else {\n          bone.matrix.copy(bone.matrixWorld);\n        }\n\n        bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n      }\n    }\n  },\n  update: function () {\n    var offsetMatrix = new Matrix4();\n    var identityMatrix = new Matrix4();\n    return function update() {\n      var bones = this.bones;\n      var boneInverses = this.boneInverses;\n      var boneMatrices = this.boneMatrices;\n      var boneTexture = this.boneTexture; // flatten bone matrices to array\n\n      for (var i = 0, il = bones.length; i < il; i++) {\n        // compute the offset between the current and the original transform\n        var matrix = bones[i] ? bones[i].matrixWorld : identityMatrix;\n        offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n        offsetMatrix.toArray(boneMatrices, i * 16);\n      }\n\n      if (boneTexture !== undefined) {\n        boneTexture.needsUpdate = true;\n      }\n    };\n  }(),\n  clone: function () {\n    return new Skeleton(this.bones, this.boneInverses);\n  },\n  getBoneByName: function (name) {\n    for (var i = 0, il = this.bones.length; i < il; i++) {\n      var bone = this.bones[i];\n\n      if (bone.name === name) {\n        return bone;\n      }\n    }\n\n    return undefined;\n  }\n});\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n  Object3D.call(this);\n  this.type = 'Bone';\n}\n\nBone.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Bone,\n  isBone: true\n});\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh(geometry, material) {\n  Mesh.call(this, geometry, material);\n  this.type = 'SkinnedMesh';\n  this.bindMode = 'attached';\n  this.bindMatrix = new Matrix4();\n  this.bindMatrixInverse = new Matrix4();\n  var bones = this.initBones();\n  var skeleton = new Skeleton(bones);\n  this.bind(skeleton, this.matrixWorld);\n  this.normalizeSkinWeights();\n}\n\nSkinnedMesh.prototype = Object.assign(Object.create(Mesh.prototype), {\n  constructor: SkinnedMesh,\n  isSkinnedMesh: true,\n  initBones: function () {\n    var bones = [],\n        bone,\n        gbone;\n    var i, il;\n\n    if (this.geometry && this.geometry.bones !== undefined) {\n      // first, create array of 'Bone' objects from geometry data\n      for (i = 0, il = this.geometry.bones.length; i < il; i++) {\n        gbone = this.geometry.bones[i]; // create new 'Bone' object\n\n        bone = new Bone();\n        bones.push(bone); // apply values\n\n        bone.name = gbone.name;\n        bone.position.fromArray(gbone.pos);\n        bone.quaternion.fromArray(gbone.rotq);\n        if (gbone.scl !== undefined) bone.scale.fromArray(gbone.scl);\n      } // second, create bone hierarchy\n\n\n      for (i = 0, il = this.geometry.bones.length; i < il; i++) {\n        gbone = this.geometry.bones[i];\n\n        if (gbone.parent !== -1 && gbone.parent !== null && bones[gbone.parent] !== undefined) {\n          // subsequent bones in the hierarchy\n          bones[gbone.parent].add(bones[i]);\n        } else {\n          // topmost bone, immediate child of the skinned mesh\n          this.add(bones[i]);\n        }\n      }\n    } // now the bones are part of the scene graph and children of the skinned mesh.\n    // let's update the corresponding matrices\n\n\n    this.updateMatrixWorld(true);\n    return bones;\n  },\n  bind: function (skeleton, bindMatrix) {\n    this.skeleton = skeleton;\n\n    if (bindMatrix === undefined) {\n      this.updateMatrixWorld(true);\n      this.skeleton.calculateInverses();\n      bindMatrix = this.matrixWorld;\n    }\n\n    this.bindMatrix.copy(bindMatrix);\n    this.bindMatrixInverse.getInverse(bindMatrix);\n  },\n  pose: function () {\n    this.skeleton.pose();\n  },\n  normalizeSkinWeights: function () {\n    var scale, i;\n\n    if (this.geometry && this.geometry.isGeometry) {\n      for (i = 0; i < this.geometry.skinWeights.length; i++) {\n        var sw = this.geometry.skinWeights[i];\n        scale = 1.0 / sw.manhattanLength();\n\n        if (scale !== Infinity) {\n          sw.multiplyScalar(scale);\n        } else {\n          sw.set(1, 0, 0, 0); // do something reasonable\n        }\n      }\n    } else if (this.geometry && this.geometry.isBufferGeometry) {\n      var vec = new Vector4();\n      var skinWeight = this.geometry.attributes.skinWeight;\n\n      for (i = 0; i < skinWeight.count; i++) {\n        vec.x = skinWeight.getX(i);\n        vec.y = skinWeight.getY(i);\n        vec.z = skinWeight.getZ(i);\n        vec.w = skinWeight.getW(i);\n        scale = 1.0 / vec.manhattanLength();\n\n        if (scale !== Infinity) {\n          vec.multiplyScalar(scale);\n        } else {\n          vec.set(1, 0, 0, 0); // do something reasonable\n        }\n\n        skinWeight.setXYZW(i, vec.x, vec.y, vec.z, vec.w);\n      }\n    }\n  },\n  updateMatrixWorld: function (force) {\n    Mesh.prototype.updateMatrixWorld.call(this, force);\n\n    if (this.bindMode === 'attached') {\n      this.bindMatrixInverse.getInverse(this.matrixWorld);\n    } else if (this.bindMode === 'detached') {\n      this.bindMatrixInverse.getInverse(this.bindMatrix);\n    } else {\n      console.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial(parameters) {\n  Material.call(this);\n  this.type = 'LineBasicMaterial';\n  this.color = new Color(0xffffff);\n  this.linewidth = 1;\n  this.linecap = 'round';\n  this.linejoin = 'round';\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nLineBasicMaterial.prototype = Object.create(Material.prototype);\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.linewidth = source.linewidth;\n  this.linecap = source.linecap;\n  this.linejoin = source.linejoin;\n  return this;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Line(geometry, material, mode) {\n  if (mode === 1) {\n    console.warn('THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.');\n    return new LineSegments(geometry, material);\n  }\n\n  Object3D.call(this);\n  this.type = 'Line';\n  this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n  this.material = material !== undefined ? material : new LineBasicMaterial({\n    color: Math.random() * 0xffffff\n  });\n}\n\nLine.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Line,\n  isLine: true,\n  computeLineDistances: function () {\n    var start = new Vector3();\n    var end = new Vector3();\n    return function computeLineDistances() {\n      var geometry = this.geometry;\n\n      if (geometry.isBufferGeometry) {\n        // we assume non-indexed geometry\n        if (geometry.index === null) {\n          var positionAttribute = geometry.attributes.position;\n          var lineDistances = [0];\n\n          for (var i = 1, l = positionAttribute.count; i < l; i++) {\n            start.fromBufferAttribute(positionAttribute, i - 1);\n            end.fromBufferAttribute(positionAttribute, i);\n            lineDistances[i] = lineDistances[i - 1];\n            lineDistances[i] += start.distanceTo(end);\n          }\n\n          geometry.addAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n        } else {\n          console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n        }\n      } else if (geometry.isGeometry) {\n        var vertices = geometry.vertices;\n        var lineDistances = geometry.lineDistances;\n        lineDistances[0] = 0;\n\n        for (var i = 1, l = vertices.length; i < l; i++) {\n          lineDistances[i] = lineDistances[i - 1];\n          lineDistances[i] += vertices[i - 1].distanceTo(vertices[i]);\n        }\n      }\n\n      return this;\n    };\n  }(),\n  raycast: function () {\n    var inverseMatrix = new Matrix4();\n    var ray = new Ray();\n    var sphere = new Sphere();\n    return function raycast(raycaster, intersects) {\n      var precision = raycaster.linePrecision;\n      var precisionSq = precision * precision;\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n      var vStart = new Vector3();\n      var vEnd = new Vector3();\n      var interSegment = new Vector3();\n      var interRay = new Vector3();\n      var step = this && this.isLineSegments ? 2 : 1;\n\n      if (geometry.isBufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, l = indices.length - 1; i < l; i += step) {\n            var a = indices[i];\n            var b = indices[i + 1];\n            vStart.fromArray(positions, a * 3);\n            vEnd.fromArray(positions, b * 3);\n            var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        } else {\n          for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n            vStart.fromArray(positions, 3 * i);\n            vEnd.fromArray(positions, 3 * i + 3);\n            var distSq = ray.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n            if (distSq > precisionSq) continue;\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n            if (distance < raycaster.near || distance > raycaster.far) continue;\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      } else if (geometry.isGeometry) {\n        var vertices = geometry.vertices;\n        var nbVertices = vertices.length;\n\n        for (var i = 0; i < nbVertices - 1; i += step) {\n          var distSq = ray.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n          if (distSq > precisionSq) continue;\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n          if (distance < raycaster.near || distance > raycaster.far) continue;\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      }\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments(geometry, material) {\n  Line.call(this, geometry, material);\n  this.type = 'LineSegments';\n}\n\nLineSegments.prototype = Object.assign(Object.create(Line.prototype), {\n  constructor: LineSegments,\n  isLineSegments: true,\n  computeLineDistances: function () {\n    var start = new Vector3();\n    var end = new Vector3();\n    return function computeLineDistances() {\n      var geometry = this.geometry;\n\n      if (geometry.isBufferGeometry) {\n        // we assume non-indexed geometry\n        if (geometry.index === null) {\n          var positionAttribute = geometry.attributes.position;\n          var lineDistances = [];\n\n          for (var i = 0, l = positionAttribute.count; i < l; i += 2) {\n            start.fromBufferAttribute(positionAttribute, i);\n            end.fromBufferAttribute(positionAttribute, i + 1);\n            lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n            lineDistances[i + 1] = lineDistances[i] + start.distanceTo(end);\n          }\n\n          geometry.addAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n        } else {\n          console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n        }\n      } else if (geometry.isGeometry) {\n        var vertices = geometry.vertices;\n        var lineDistances = geometry.lineDistances;\n\n        for (var i = 0, l = vertices.length; i < l; i += 2) {\n          start.copy(vertices[i]);\n          end.copy(vertices[i + 1]);\n          lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n          lineDistances[i + 1] = lineDistances[i] + start.distanceTo(end);\n        }\n      }\n\n      return this;\n    };\n  }()\n});\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop(geometry, material) {\n  Line.call(this, geometry, material);\n  this.type = 'LineLoop';\n}\n\nLineLoop.prototype = Object.assign(Object.create(Line.prototype), {\n  constructor: LineLoop,\n  isLineLoop: true\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial(parameters) {\n  Material.call(this);\n  this.type = 'PointsMaterial';\n  this.color = new Color(0xffffff);\n  this.map = null;\n  this.size = 1;\n  this.sizeAttenuation = true;\n  this.morphTargets = false;\n  this.lights = false;\n  this.setValues(parameters);\n}\n\nPointsMaterial.prototype = Object.create(Material.prototype);\nPointsMaterial.prototype.constructor = PointsMaterial;\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.size = source.size;\n  this.sizeAttenuation = source.sizeAttenuation;\n  this.morphTargets = source.morphTargets;\n  return this;\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\n\nfunction Points(geometry, material) {\n  Object3D.call(this);\n  this.type = 'Points';\n  this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n  this.material = material !== undefined ? material : new PointsMaterial({\n    color: Math.random() * 0xffffff\n  });\n}\n\nPoints.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Points,\n  isPoints: true,\n  raycast: function () {\n    var inverseMatrix = new Matrix4();\n    var ray = new Ray();\n    var sphere = new Sphere();\n    return function raycast(raycaster, intersects) {\n      var object = this;\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld;\n      var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n      sphere.copy(geometry.boundingSphere);\n      sphere.applyMatrix4(matrixWorld);\n      sphere.radius += threshold;\n      if (raycaster.ray.intersectsSphere(sphere) === false) return; //\n\n      inverseMatrix.getInverse(matrixWorld);\n      ray.copy(raycaster.ray).applyMatrix4(inverseMatrix);\n      var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n      var localThresholdSq = localThreshold * localThreshold;\n      var position = new Vector3();\n      var intersectPoint = new Vector3();\n\n      function testPoint(point, index) {\n        var rayPointDistanceSq = ray.distanceSqToPoint(point);\n\n        if (rayPointDistanceSq < localThresholdSq) {\n          ray.closestPointToPoint(point, intersectPoint);\n          intersectPoint.applyMatrix4(matrixWorld);\n          var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n          if (distance < raycaster.near || distance > raycaster.far) return;\n          intersects.push({\n            distance: distance,\n            distanceToRay: Math.sqrt(rayPointDistanceSq),\n            point: intersectPoint.clone(),\n            index: index,\n            face: null,\n            object: object\n          });\n        }\n      }\n\n      if (geometry.isBufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, il = indices.length; i < il; i++) {\n            var a = indices[i];\n            position.fromArray(positions, a * 3);\n            testPoint(position, a);\n          }\n        } else {\n          for (var i = 0, l = positions.length / 3; i < l; i++) {\n            position.fromArray(positions, i * 3);\n            testPoint(position, i);\n          }\n        }\n      } else {\n        var vertices = geometry.vertices;\n\n        for (var i = 0, l = vertices.length; i < l; i++) {\n          testPoint(vertices[i], i);\n        }\n      }\n    };\n  }(),\n  clone: function () {\n    return new this.constructor(this.geometry, this.material).copy(this);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n  Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.generateMipmaps = false;\n}\n\nVideoTexture.prototype = Object.assign(Object.create(Texture.prototype), {\n  constructor: VideoTexture,\n  isVideoTexture: true,\n  update: function () {\n    var video = this.image;\n\n    if (video.readyState >= video.HAVE_CURRENT_DATA) {\n      this.needsUpdate = true;\n    }\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n  Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.mipmaps = mipmaps; // no flipping for cube textures\n  // (also flipping doesn't work for compressed textures )\n\n  this.flipY = false; // can't generate mipmaps for compressed textures\n  // mips must be embedded in DDS files\n\n  this.generateMipmaps = false;\n}\n\nCompressedTexture.prototype = Object.create(Texture.prototype);\nCompressedTexture.prototype.constructor = CompressedTexture;\nCompressedTexture.prototype.isCompressedTexture = true;\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n  format = format !== undefined ? format : DepthFormat;\n\n  if (format !== DepthFormat && format !== DepthStencilFormat) {\n    throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n  }\n\n  if (type === undefined && format === DepthFormat) type = UnsignedShortType;\n  if (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n  Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n  this.image = {\n    width: width,\n    height: height\n  };\n  this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n  this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n  this.flipY = false;\n  this.generateMipmaps = false;\n}\n\nDepthTexture.prototype = Object.create(Texture.prototype);\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry(geometry) {\n  BufferGeometry.call(this);\n  this.type = 'WireframeGeometry'; // buffer\n\n  var vertices = []; // helper variables\n\n  var i, j, l, o, ol;\n  var edge = [0, 0],\n      edges = {},\n      e,\n      edge1,\n      edge2;\n  var key,\n      keys = ['a', 'b', 'c'];\n  var vertex; // different logic for Geometry and BufferGeometry\n\n  if (geometry && geometry.isGeometry) {\n    // create a data structure that contains all edges without duplicates\n    var faces = geometry.faces;\n\n    for (i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (j = 0; j < 3; j++) {\n        edge1 = face[keys[j]];\n        edge2 = face[keys[(j + 1) % 3]];\n        edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n        edge[1] = Math.max(edge1, edge2);\n        key = edge[0] + ',' + edge[1];\n\n        if (edges[key] === undefined) {\n          edges[key] = {\n            index1: edge[0],\n            index2: edge[1]\n          };\n        }\n      }\n    } // generate vertices\n\n\n    for (key in edges) {\n      e = edges[key];\n      vertex = geometry.vertices[e.index1];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n      vertex = geometry.vertices[e.index2];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n  } else if (geometry && geometry.isBufferGeometry) {\n    var position, indices, groups;\n    var group, start, count;\n    var index1, index2;\n    vertex = new Vector3();\n\n    if (geometry.index !== null) {\n      // indexed BufferGeometry\n      position = geometry.attributes.position;\n      indices = geometry.index;\n      groups = geometry.groups;\n\n      if (groups.length === 0) {\n        groups = [{\n          start: 0,\n          count: indices.count,\n          materialIndex: 0\n        }];\n      } // create a data structure that contains all eges without duplicates\n\n\n      for (o = 0, ol = groups.length; o < ol; ++o) {\n        group = groups[o];\n        start = group.start;\n        count = group.count;\n\n        for (i = start, l = start + count; i < l; i += 3) {\n          for (j = 0; j < 3; j++) {\n            edge1 = indices.getX(i + j);\n            edge2 = indices.getX(i + (j + 1) % 3);\n            edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n            edge[1] = Math.max(edge1, edge2);\n            key = edge[0] + ',' + edge[1];\n\n            if (edges[key] === undefined) {\n              edges[key] = {\n                index1: edge[0],\n                index2: edge[1]\n              };\n            }\n          }\n        }\n      } // generate vertices\n\n\n      for (key in edges) {\n        e = edges[key];\n        vertex.fromBufferAttribute(position, e.index1);\n        vertices.push(vertex.x, vertex.y, vertex.z);\n        vertex.fromBufferAttribute(position, e.index2);\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    } else {\n      // non-indexed BufferGeometry\n      position = geometry.attributes.position;\n\n      for (i = 0, l = position.count / 3; i < l; i++) {\n        for (j = 0; j < 3; j++) {\n          // three edges per triangle, an edge is represented as (index1, index2)\n          // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n          index1 = 3 * i + j;\n          vertex.fromBufferAttribute(position, index1);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n          index2 = 3 * i + (j + 1) % 3;\n          vertex.fromBufferAttribute(position, index2);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n        }\n      }\n    }\n  } // build geometry\n\n\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n}\n\nWireframeGeometry.prototype = Object.create(BufferGeometry.prototype);\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n// ParametricGeometry\n\nfunction ParametricGeometry(func, slices, stacks) {\n  Geometry.call(this);\n  this.type = 'ParametricGeometry';\n  this.parameters = {\n    func: func,\n    slices: slices,\n    stacks: stacks\n  };\n  this.fromBufferGeometry(new ParametricBufferGeometry(func, slices, stacks));\n  this.mergeVertices();\n}\n\nParametricGeometry.prototype = Object.create(Geometry.prototype);\nParametricGeometry.prototype.constructor = ParametricGeometry; // ParametricBufferGeometry\n\nfunction ParametricBufferGeometry(func, slices, stacks) {\n  BufferGeometry.call(this);\n  this.type = 'ParametricBufferGeometry';\n  this.parameters = {\n    func: func,\n    slices: slices,\n    stacks: stacks\n  }; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = [];\n  var EPS = 0.00001;\n  var normal = new Vector3();\n  var p0 = new Vector3(),\n      p1 = new Vector3();\n  var pu = new Vector3(),\n      pv = new Vector3();\n  var i, j;\n\n  if (func.length < 3) {\n    console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');\n  } // generate vertices, normals and uvs\n\n\n  var sliceCount = slices + 1;\n\n  for (i = 0; i <= stacks; i++) {\n    var v = i / stacks;\n\n    for (j = 0; j <= slices; j++) {\n      var u = j / slices; // vertex\n\n      func(u, v, p0);\n      vertices.push(p0.x, p0.y, p0.z); // normal\n      // approximate tangent vectors via finite differences\n\n      if (u - EPS >= 0) {\n        func(u - EPS, v, p1);\n        pu.subVectors(p0, p1);\n      } else {\n        func(u + EPS, v, p1);\n        pu.subVectors(p1, p0);\n      }\n\n      if (v - EPS >= 0) {\n        func(u, v - EPS, p1);\n        pv.subVectors(p0, p1);\n      } else {\n        func(u, v + EPS, p1);\n        pv.subVectors(p1, p0);\n      } // cross product of tangent vectors returns surface normal\n\n\n      normal.crossVectors(pu, pv).normalize();\n      normals.push(normal.x, normal.y, normal.z); // uv\n\n      uvs.push(u, v);\n    }\n  } // generate indices\n\n\n  for (i = 0; i < stacks; i++) {\n    for (j = 0; j < slices; j++) {\n      var a = i * sliceCount + j;\n      var b = i * sliceCount + j + 1;\n      var c = (i + 1) * sliceCount + j + 1;\n      var d = (i + 1) * sliceCount + j; // faces one and two\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nParametricBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry(vertices, indices, radius, detail) {\n  Geometry.call(this);\n  this.type = 'PolyhedronGeometry';\n  this.parameters = {\n    vertices: vertices,\n    indices: indices,\n    radius: radius,\n    detail: detail\n  };\n  this.fromBufferGeometry(new PolyhedronBufferGeometry(vertices, indices, radius, detail));\n  this.mergeVertices();\n}\n\nPolyhedronGeometry.prototype = Object.create(Geometry.prototype);\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry; // PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry(vertices, indices, radius, detail) {\n  BufferGeometry.call(this);\n  this.type = 'PolyhedronBufferGeometry';\n  this.parameters = {\n    vertices: vertices,\n    indices: indices,\n    radius: radius,\n    detail: detail\n  };\n  radius = radius || 1;\n  detail = detail || 0; // default buffer data\n\n  var vertexBuffer = [];\n  var uvBuffer = []; // the subdivision creates the vertex buffer data\n\n  subdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n  appplyRadius(radius); // finally, create the uv data\n\n  generateUVs(); // build non-indexed geometry\n\n  this.addAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n  if (detail === 0) {\n    this.computeVertexNormals(); // flat normals\n  } else {\n    this.normalizeNormals(); // smooth normals\n  } // helper functions\n\n\n  function subdivide(detail) {\n    var a = new Vector3();\n    var b = new Vector3();\n    var c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n    for (var i = 0; i < indices.length; i += 3) {\n      // get the vertices of the face\n      getVertexByIndex(indices[i + 0], a);\n      getVertexByIndex(indices[i + 1], b);\n      getVertexByIndex(indices[i + 2], c); // perform subdivision\n\n      subdivideFace(a, b, c, detail);\n    }\n  }\n\n  function subdivideFace(a, b, c, detail) {\n    var cols = Math.pow(2, detail); // we use this multidimensional array as a data structure for creating the subdivision\n\n    var v = [];\n    var i, j; // construct all of the vertices for this subdivision\n\n    for (i = 0; i <= cols; i++) {\n      v[i] = [];\n      var aj = a.clone().lerp(c, i / cols);\n      var bj = b.clone().lerp(c, i / cols);\n      var rows = cols - i;\n\n      for (j = 0; j <= rows; j++) {\n        if (j === 0 && i === cols) {\n          v[i][j] = aj;\n        } else {\n          v[i][j] = aj.clone().lerp(bj, j / rows);\n        }\n      }\n    } // construct all of the faces\n\n\n    for (i = 0; i < cols; i++) {\n      for (j = 0; j < 2 * (cols - i) - 1; j++) {\n        var k = Math.floor(j / 2);\n\n        if (j % 2 === 0) {\n          pushVertex(v[i][k + 1]);\n          pushVertex(v[i + 1][k]);\n          pushVertex(v[i][k]);\n        } else {\n          pushVertex(v[i][k + 1]);\n          pushVertex(v[i + 1][k + 1]);\n          pushVertex(v[i + 1][k]);\n        }\n      }\n    }\n  }\n\n  function appplyRadius(radius) {\n    var vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n    for (var i = 0; i < vertexBuffer.length; i += 3) {\n      vertex.x = vertexBuffer[i + 0];\n      vertex.y = vertexBuffer[i + 1];\n      vertex.z = vertexBuffer[i + 2];\n      vertex.normalize().multiplyScalar(radius);\n      vertexBuffer[i + 0] = vertex.x;\n      vertexBuffer[i + 1] = vertex.y;\n      vertexBuffer[i + 2] = vertex.z;\n    }\n  }\n\n  function generateUVs() {\n    var vertex = new Vector3();\n\n    for (var i = 0; i < vertexBuffer.length; i += 3) {\n      vertex.x = vertexBuffer[i + 0];\n      vertex.y = vertexBuffer[i + 1];\n      vertex.z = vertexBuffer[i + 2];\n      var u = azimuth(vertex) / 2 / Math.PI + 0.5;\n      var v = inclination(vertex) / Math.PI + 0.5;\n      uvBuffer.push(u, 1 - v);\n    }\n\n    correctUVs();\n    correctSeam();\n  }\n\n  function correctSeam() {\n    // handle case when face straddles the seam, see #3269\n    for (var i = 0; i < uvBuffer.length; i += 6) {\n      // uv data of a single face\n      var x0 = uvBuffer[i + 0];\n      var x1 = uvBuffer[i + 2];\n      var x2 = uvBuffer[i + 4];\n      var max = Math.max(x0, x1, x2);\n      var min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n      if (max > 0.9 && min < 0.1) {\n        if (x0 < 0.2) uvBuffer[i + 0] += 1;\n        if (x1 < 0.2) uvBuffer[i + 2] += 1;\n        if (x2 < 0.2) uvBuffer[i + 4] += 1;\n      }\n    }\n  }\n\n  function pushVertex(vertex) {\n    vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n  }\n\n  function getVertexByIndex(index, vertex) {\n    var stride = index * 3;\n    vertex.x = vertices[stride + 0];\n    vertex.y = vertices[stride + 1];\n    vertex.z = vertices[stride + 2];\n  }\n\n  function correctUVs() {\n    var a = new Vector3();\n    var b = new Vector3();\n    var c = new Vector3();\n    var centroid = new Vector3();\n    var uvA = new Vector2();\n    var uvB = new Vector2();\n    var uvC = new Vector2();\n\n    for (var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n      a.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n      b.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n      c.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n      uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n      uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n      uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n      centroid.copy(a).add(b).add(c).divideScalar(3);\n      var azi = azimuth(centroid);\n      correctUV(uvA, j + 0, a, azi);\n      correctUV(uvB, j + 2, b, azi);\n      correctUV(uvC, j + 4, c, azi);\n    }\n  }\n\n  function correctUV(uv, stride, vector, azimuth) {\n    if (azimuth < 0 && uv.x === 1) {\n      uvBuffer[stride] = uv.x - 1;\n    }\n\n    if (vector.x === 0 && vector.z === 0) {\n      uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n    }\n  } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n  function azimuth(vector) {\n    return Math.atan2(vector.z, -vector.x);\n  } // Angle above the XZ plane.\n\n\n  function inclination(vector) {\n    return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n  }\n}\n\nPolyhedronBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry(radius, detail) {\n  Geometry.call(this);\n  this.type = 'TetrahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n  this.fromBufferGeometry(new TetrahedronBufferGeometry(radius, detail));\n  this.mergeVertices();\n}\n\nTetrahedronGeometry.prototype = Object.create(Geometry.prototype);\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry; // TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry(radius, detail) {\n  var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n  var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n  PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'TetrahedronBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n}\n\nTetrahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n// OctahedronGeometry\n\nfunction OctahedronGeometry(radius, detail) {\n  Geometry.call(this);\n  this.type = 'OctahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n  this.fromBufferGeometry(new OctahedronBufferGeometry(radius, detail));\n  this.mergeVertices();\n}\n\nOctahedronGeometry.prototype = Object.create(Geometry.prototype);\nOctahedronGeometry.prototype.constructor = OctahedronGeometry; // OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry(radius, detail) {\n  var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n  var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n  PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'OctahedronBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n}\n\nOctahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry(radius, detail) {\n  Geometry.call(this);\n  this.type = 'IcosahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n  this.fromBufferGeometry(new IcosahedronBufferGeometry(radius, detail));\n  this.mergeVertices();\n}\n\nIcosahedronGeometry.prototype = Object.create(Geometry.prototype);\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry; // IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry(radius, detail) {\n  var t = (1 + Math.sqrt(5)) / 2;\n  var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n  var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n  PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'IcosahedronBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n}\n\nIcosahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry(radius, detail) {\n  Geometry.call(this);\n  this.type = 'DodecahedronGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n  this.fromBufferGeometry(new DodecahedronBufferGeometry(radius, detail));\n  this.mergeVertices();\n}\n\nDodecahedronGeometry.prototype = Object.create(Geometry.prototype);\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry; // DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry(radius, detail) {\n  var t = (1 + Math.sqrt(5)) / 2;\n  var r = 1 / t;\n  var vertices = [// (±1, ±1, ±1)\n  -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n  0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n  -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n  -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n  var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n  PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n  this.type = 'DodecahedronBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    detail: detail\n  };\n}\n\nDodecahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n// TubeGeometry\n\nfunction TubeGeometry(path, tubularSegments, radius, radialSegments, closed, taper) {\n  Geometry.call(this);\n  this.type = 'TubeGeometry';\n  this.parameters = {\n    path: path,\n    tubularSegments: tubularSegments,\n    radius: radius,\n    radialSegments: radialSegments,\n    closed: closed\n  };\n  if (taper !== undefined) console.warn('THREE.TubeGeometry: taper has been removed.');\n  var bufferGeometry = new TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed); // expose internals\n\n  this.tangents = bufferGeometry.tangents;\n  this.normals = bufferGeometry.normals;\n  this.binormals = bufferGeometry.binormals; // create geometry\n\n  this.fromBufferGeometry(bufferGeometry);\n  this.mergeVertices();\n}\n\nTubeGeometry.prototype = Object.create(Geometry.prototype);\nTubeGeometry.prototype.constructor = TubeGeometry; // TubeBufferGeometry\n\nfunction TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed) {\n  BufferGeometry.call(this);\n  this.type = 'TubeBufferGeometry';\n  this.parameters = {\n    path: path,\n    tubularSegments: tubularSegments,\n    radius: radius,\n    radialSegments: radialSegments,\n    closed: closed\n  };\n  tubularSegments = tubularSegments || 64;\n  radius = radius || 1;\n  radialSegments = radialSegments || 8;\n  closed = closed || false;\n  var frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n  this.tangents = frames.tangents;\n  this.normals = frames.normals;\n  this.binormals = frames.binormals; // helper variables\n\n  var vertex = new Vector3();\n  var normal = new Vector3();\n  var uv = new Vector2();\n  var P = new Vector3();\n  var i, j; // buffer\n\n  var vertices = [];\n  var normals = [];\n  var uvs = [];\n  var indices = []; // create buffer data\n\n  generateBufferData(); // build geometry\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n  function generateBufferData() {\n    for (i = 0; i < tubularSegments; i++) {\n      generateSegment(i);\n    } // if the geometry is not closed, generate the last row of vertices and normals\n    // at the regular position on the given path\n    //\n    // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n    generateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n    // this makes it easy compute correct values for closed geometries\n\n    generateUVs(); // finally create faces\n\n    generateIndices();\n  }\n\n  function generateSegment(i) {\n    // we use getPointAt to sample evenly distributed points from the given path\n    P = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n    var N = frames.normals[i];\n    var B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n    for (j = 0; j <= radialSegments; j++) {\n      var v = j / radialSegments * Math.PI * 2;\n      var sin = Math.sin(v);\n      var cos = -Math.cos(v); // normal\n\n      normal.x = cos * N.x + sin * B.x;\n      normal.y = cos * N.y + sin * B.y;\n      normal.z = cos * N.z + sin * B.z;\n      normal.normalize();\n      normals.push(normal.x, normal.y, normal.z); // vertex\n\n      vertex.x = P.x + radius * normal.x;\n      vertex.y = P.y + radius * normal.y;\n      vertex.z = P.z + radius * normal.z;\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n  }\n\n  function generateIndices() {\n    for (j = 1; j <= tubularSegments; j++) {\n      for (i = 1; i <= radialSegments; i++) {\n        var a = (radialSegments + 1) * (j - 1) + (i - 1);\n        var b = (radialSegments + 1) * j + (i - 1);\n        var c = (radialSegments + 1) * j + i;\n        var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    }\n  }\n\n  function generateUVs() {\n    for (i = 0; i <= tubularSegments; i++) {\n      for (j = 0; j <= radialSegments; j++) {\n        uv.x = i / tubularSegments;\n        uv.y = j / radialSegments;\n        uvs.push(uv.x, uv.y);\n      }\n    }\n  }\n}\n\nTubeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry(radius, tube, tubularSegments, radialSegments, p, q, heightScale) {\n  Geometry.call(this);\n  this.type = 'TorusKnotGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    tubularSegments: tubularSegments,\n    radialSegments: radialSegments,\n    p: p,\n    q: q\n  };\n  if (heightScale !== undefined) console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');\n  this.fromBufferGeometry(new TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q));\n  this.mergeVertices();\n}\n\nTorusKnotGeometry.prototype = Object.create(Geometry.prototype);\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry; // TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q) {\n  BufferGeometry.call(this);\n  this.type = 'TorusKnotBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    tubularSegments: tubularSegments,\n    radialSegments: radialSegments,\n    p: p,\n    q: q\n  };\n  radius = radius || 1;\n  tube = tube || 0.4;\n  tubularSegments = Math.floor(tubularSegments) || 64;\n  radialSegments = Math.floor(radialSegments) || 8;\n  p = p || 2;\n  q = q || 3; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var i, j;\n  var vertex = new Vector3();\n  var normal = new Vector3();\n  var P1 = new Vector3();\n  var P2 = new Vector3();\n  var B = new Vector3();\n  var T = new Vector3();\n  var N = new Vector3(); // generate vertices, normals and uvs\n\n  for (i = 0; i <= tubularSegments; ++i) {\n    // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n    var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n    // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n    calculatePositionOnCurve(u, p, q, radius, P1);\n    calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n    T.subVectors(P2, P1);\n    N.addVectors(P2, P1);\n    B.crossVectors(T, N);\n    N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n    B.normalize();\n    N.normalize();\n\n    for (j = 0; j <= radialSegments; ++j) {\n      // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n      // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n      var v = j / radialSegments * Math.PI * 2;\n      var cx = -tube * Math.cos(v);\n      var cy = tube * Math.sin(v); // now calculate the final vertex position.\n      // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n      vertex.x = P1.x + (cx * N.x + cy * B.x);\n      vertex.y = P1.y + (cx * N.y + cy * B.y);\n      vertex.z = P1.z + (cx * N.z + cy * B.z);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n      normal.subVectors(vertex, P1).normalize();\n      normals.push(normal.x, normal.y, normal.z); // uv\n\n      uvs.push(i / tubularSegments);\n      uvs.push(j / radialSegments);\n    }\n  } // generate indices\n\n\n  for (j = 1; j <= tubularSegments; j++) {\n    for (i = 1; i <= radialSegments; i++) {\n      // indices\n      var a = (radialSegments + 1) * (j - 1) + (i - 1);\n      var b = (radialSegments + 1) * j + (i - 1);\n      var c = (radialSegments + 1) * j + i;\n      var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n  function calculatePositionOnCurve(u, p, q, radius, position) {\n    var cu = Math.cos(u);\n    var su = Math.sin(u);\n    var quOverP = q / p * u;\n    var cs = Math.cos(quOverP);\n    position.x = radius * (2 + cs) * 0.5 * cu;\n    position.y = radius * (2 + cs) * su * 0.5;\n    position.z = radius * Math.sin(quOverP) * 0.5;\n  }\n}\n\nTorusKnotBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n// TorusGeometry\n\nfunction TorusGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n  Geometry.call(this);\n  this.type = 'TorusGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    arc: arc\n  };\n  this.fromBufferGeometry(new TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc));\n  this.mergeVertices();\n}\n\nTorusGeometry.prototype = Object.create(Geometry.prototype);\nTorusGeometry.prototype.constructor = TorusGeometry; // TorusBufferGeometry\n\nfunction TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n  BufferGeometry.call(this);\n  this.type = 'TorusBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    tube: tube,\n    radialSegments: radialSegments,\n    tubularSegments: tubularSegments,\n    arc: arc\n  };\n  radius = radius || 1;\n  tube = tube || 0.4;\n  radialSegments = Math.floor(radialSegments) || 8;\n  tubularSegments = Math.floor(tubularSegments) || 6;\n  arc = arc || Math.PI * 2; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var center = new Vector3();\n  var vertex = new Vector3();\n  var normal = new Vector3();\n  var j, i; // generate vertices, normals and uvs\n\n  for (j = 0; j <= radialSegments; j++) {\n    for (i = 0; i <= tubularSegments; i++) {\n      var u = i / tubularSegments * arc;\n      var v = j / radialSegments * Math.PI * 2; // vertex\n\n      vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n      vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n      vertex.z = tube * Math.sin(v);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      center.x = radius * Math.cos(u);\n      center.y = radius * Math.sin(u);\n      normal.subVectors(vertex, center).normalize();\n      normals.push(normal.x, normal.y, normal.z); // uv\n\n      uvs.push(i / tubularSegments);\n      uvs.push(j / radialSegments);\n    }\n  } // generate indices\n\n\n  for (j = 1; j <= radialSegments; j++) {\n    for (i = 1; i <= tubularSegments; i++) {\n      // indices\n      var a = (tubularSegments + 1) * j + i - 1;\n      var b = (tubularSegments + 1) * (j - 1) + i - 1;\n      var c = (tubularSegments + 1) * (j - 1) + i;\n      var d = (tubularSegments + 1) * j + i; // faces\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nTorusBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n  triangulate: function (data, holeIndices, dim) {\n    dim = dim || 2;\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n    if (!outerNode) return triangles;\n    var minX, minY, maxX, maxY, x, y, invSize;\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n    if (data.length > 80 * dim) {\n      minX = maxX = data[0];\n      minY = maxY = data[1];\n\n      for (var i = dim; i < outerLen; i += dim) {\n        x = data[i];\n        y = data[i + 1];\n        if (x < minX) minX = x;\n        if (y < minY) minY = y;\n        if (x > maxX) maxX = x;\n        if (y > maxY) maxY = y;\n      } // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n      invSize = Math.max(maxX - minX, maxY - minY);\n      invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n    return triangles;\n  }\n}; // create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList(data, start, end, dim, clockwise) {\n  var i, last;\n\n  if (clockwise === signedArea(data, start, end, dim) > 0) {\n    for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n  } else {\n    for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n  }\n\n  if (last && equals(last, last.next)) {\n    removeNode(last);\n    last = last.next;\n  }\n\n  return last;\n} // eliminate colinear or duplicate points\n\n\nfunction filterPoints(start, end) {\n  if (!start) return start;\n  if (!end) end = start;\n  var p = start,\n      again;\n\n  do {\n    again = false;\n\n    if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n      removeNode(p);\n      p = end = p.prev;\n      if (p === p.next) break;\n      again = true;\n    } else {\n      p = p.next;\n    }\n  } while (again || p !== end);\n\n  return end;\n} // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n  if (!ear) return; // interlink polygon nodes in z-order\n\n  if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n  var stop = ear,\n      prev,\n      next; // iterate through ears, slicing them one by one\n\n  while (ear.prev !== ear.next) {\n    prev = ear.prev;\n    next = ear.next;\n\n    if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n      // cut off the triangle\n      triangles.push(prev.i / dim);\n      triangles.push(ear.i / dim);\n      triangles.push(next.i / dim);\n      removeNode(ear); // skipping the next vertice leads to less sliver triangles\n\n      ear = next.next;\n      stop = next.next;\n      continue;\n    }\n\n    ear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n    if (ear === stop) {\n      // try filtering points and slicing again\n      if (!pass) {\n        earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n      } else if (pass === 1) {\n        ear = cureLocalIntersections(ear, triangles, dim);\n        earcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n      } else if (pass === 2) {\n        splitEarcut(ear, triangles, dim, minX, minY, invSize);\n      }\n\n      break;\n    }\n  }\n} // check whether a polygon node forms a valid ear with adjacent nodes\n\n\nfunction isEar(ear) {\n  var a = ear.prev,\n      b = ear,\n      c = ear.next;\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n  // now make sure we don't have other points inside the potential ear\n\n  var p = ear.next.next;\n\n  while (p !== ear.prev) {\n    if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) {\n      return false;\n    }\n\n    p = p.next;\n  }\n\n  return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n  var a = ear.prev,\n      b = ear,\n      c = ear.next;\n  if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n  // triangle bbox; min & max are calculated like this for speed\n\n  var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n      minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n      maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n      maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n  var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n      maxZ = zOrder(maxTX, maxTY, minX, minY, invSize); // first look for points inside the triangle in increasing z-order\n\n  var p = ear.nextZ;\n\n  while (p && p.z <= maxZ) {\n    if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.nextZ;\n  } // then look for points in decreasing z-order\n\n\n  p = ear.prevZ;\n\n  while (p && p.z >= minZ) {\n    if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n    p = p.prevZ;\n  }\n\n  return true;\n} // go through all polygon nodes and cure small local self-intersections\n\n\nfunction cureLocalIntersections(start, triangles, dim) {\n  var p = start;\n\n  do {\n    var a = p.prev,\n        b = p.next.next;\n\n    if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n      triangles.push(a.i / dim);\n      triangles.push(p.i / dim);\n      triangles.push(b.i / dim); // remove two nodes involved\n\n      removeNode(p);\n      removeNode(p.next);\n      p = start = b;\n    }\n\n    p = p.next;\n  } while (p !== start);\n\n  return p;\n} // try splitting polygon into two and triangulate them independently\n\n\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n  // look for a valid diagonal that divides the polygon into two\n  var a = start;\n\n  do {\n    var b = a.next.next;\n\n    while (b !== a.prev) {\n      if (a.i !== b.i && isValidDiagonal(a, b)) {\n        // split the polygon in two by the diagonal\n        var c = splitPolygon(a, b); // filter colinear points around the cuts\n\n        a = filterPoints(a, a.next);\n        c = filterPoints(c, c.next); // run earcut on each half\n\n        earcutLinked(a, triangles, dim, minX, minY, invSize);\n        earcutLinked(c, triangles, dim, minX, minY, invSize);\n        return;\n      }\n\n      b = b.next;\n    }\n\n    a = a.next;\n  } while (a !== start);\n} // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n  var queue = [],\n      i,\n      len,\n      start,\n      end,\n      list;\n\n  for (i = 0, len = holeIndices.length; i < len; i++) {\n    start = holeIndices[i] * dim;\n    end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n    list = linkedList(data, start, end, dim, false);\n    if (list === list.next) list.steiner = true;\n    queue.push(getLeftmost(list));\n  }\n\n  queue.sort(compareX); // process holes from left to right\n\n  for (i = 0; i < queue.length; i++) {\n    eliminateHole(queue[i], outerNode);\n    outerNode = filterPoints(outerNode, outerNode.next);\n  }\n\n  return outerNode;\n}\n\nfunction compareX(a, b) {\n  return a.x - b.x;\n} // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\nfunction eliminateHole(hole, outerNode) {\n  outerNode = findHoleBridge(hole, outerNode);\n\n  if (outerNode) {\n    var b = splitPolygon(outerNode, hole);\n    filterPoints(b, b.next);\n  }\n} // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\nfunction findHoleBridge(hole, outerNode) {\n  var p = outerNode,\n      hx = hole.x,\n      hy = hole.y,\n      qx = -Infinity,\n      m; // find a segment intersected by a ray from the hole's leftmost point to the left;\n  // segment's endpoint with lesser x will be potential connection point\n\n  do {\n    if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n      var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n      if (x <= hx && x > qx) {\n        qx = x;\n\n        if (x === hx) {\n          if (hy === p.y) return p;\n          if (hy === p.next.y) return p.next;\n        }\n\n        m = p.x < p.next.x ? p : p.next;\n      }\n    }\n\n    p = p.next;\n  } while (p !== outerNode);\n\n  if (!m) return null;\n  if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n  // look for points inside the triangle of hole point, segment intersection and endpoint;\n  // if there are no points found, we have a valid connection;\n  // otherwise choose the point of the minimum angle with the ray as connection point\n\n  var stop = m,\n      mx = m.x,\n      my = m.y,\n      tanMin = Infinity,\n      tan;\n  p = m.next;\n\n  while (p !== stop) {\n    if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n      tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n      if ((tan < tanMin || tan === tanMin && p.x > m.x) && locallyInside(p, hole)) {\n        m = p;\n        tanMin = tan;\n      }\n    }\n\n    p = p.next;\n  }\n\n  return m;\n} // interlink polygon nodes in z-order\n\n\nfunction indexCurve(start, minX, minY, invSize) {\n  var p = start;\n\n  do {\n    if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n    p.prevZ = p.prev;\n    p.nextZ = p.next;\n    p = p.next;\n  } while (p !== start);\n\n  p.prevZ.nextZ = null;\n  p.prevZ = null;\n  sortLinked(p);\n} // Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\nfunction sortLinked(list) {\n  var i,\n      p,\n      q,\n      e,\n      tail,\n      numMerges,\n      pSize,\n      qSize,\n      inSize = 1;\n\n  do {\n    p = list;\n    list = null;\n    tail = null;\n    numMerges = 0;\n\n    while (p) {\n      numMerges++;\n      q = p;\n      pSize = 0;\n\n      for (i = 0; i < inSize; i++) {\n        pSize++;\n        q = q.nextZ;\n        if (!q) break;\n      }\n\n      qSize = inSize;\n\n      while (pSize > 0 || qSize > 0 && q) {\n        if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n          e = p;\n          p = p.nextZ;\n          pSize--;\n        } else {\n          e = q;\n          q = q.nextZ;\n          qSize--;\n        }\n\n        if (tail) tail.nextZ = e;else list = e;\n        e.prevZ = tail;\n        tail = e;\n      }\n\n      p = q;\n    }\n\n    tail.nextZ = null;\n    inSize *= 2;\n  } while (numMerges > 1);\n\n  return list;\n} // z-order of a point given coords and inverse of the longer side of data bbox\n\n\nfunction zOrder(x, y, minX, minY, invSize) {\n  // coords are transformed into non-negative 15-bit integer range\n  x = 32767 * (x - minX) * invSize;\n  y = 32767 * (y - minY) * invSize;\n  x = (x | x << 8) & 0x00FF00FF;\n  x = (x | x << 4) & 0x0F0F0F0F;\n  x = (x | x << 2) & 0x33333333;\n  x = (x | x << 1) & 0x55555555;\n  y = (y | y << 8) & 0x00FF00FF;\n  y = (y | y << 4) & 0x0F0F0F0F;\n  y = (y | y << 2) & 0x33333333;\n  y = (y | y << 1) & 0x55555555;\n  return x | y << 1;\n} // find the leftmost node of a polygon ring\n\n\nfunction getLeftmost(start) {\n  var p = start,\n      leftmost = start;\n\n  do {\n    if (p.x < leftmost.x) leftmost = p;\n    p = p.next;\n  } while (p !== start);\n\n  return leftmost;\n} // check if a point lies within a convex triangle\n\n\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n  return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\nfunction isValidDiagonal(a, b) {\n  return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n} // signed area of a triangle\n\n\nfunction area(p, q, r) {\n  return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n} // check if two points are equal\n\n\nfunction equals(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n} // check if two segments intersect\n\n\nfunction intersects(p1, q1, p2, q2) {\n  if (equals(p1, q1) && equals(p2, q2) || equals(p1, q2) && equals(p2, q1)) return true;\n  return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 && area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n} // check if a polygon diagonal intersects any polygon segments\n\n\nfunction intersectsPolygon(a, b) {\n  var p = a;\n\n  do {\n    if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) {\n      return true;\n    }\n\n    p = p.next;\n  } while (p !== a);\n\n  return false;\n} // check if a polygon diagonal is locally inside the polygon\n\n\nfunction locallyInside(a, b) {\n  return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n} // check if the middle point of a polygon diagonal is inside the polygon\n\n\nfunction middleInside(a, b) {\n  var p = a,\n      inside = false,\n      px = (a.x + b.x) / 2,\n      py = (a.y + b.y) / 2;\n\n  do {\n    if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) {\n      inside = !inside;\n    }\n\n    p = p.next;\n  } while (p !== a);\n\n  return inside;\n} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\nfunction splitPolygon(a, b) {\n  var a2 = new Node(a.i, a.x, a.y),\n      b2 = new Node(b.i, b.x, b.y),\n      an = a.next,\n      bp = b.prev;\n  a.next = b;\n  b.prev = a;\n  a2.next = an;\n  an.prev = a2;\n  b2.next = a2;\n  a2.prev = b2;\n  bp.next = b2;\n  b2.prev = bp;\n  return b2;\n} // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\nfunction insertNode(i, x, y, last) {\n  var p = new Node(i, x, y);\n\n  if (!last) {\n    p.prev = p;\n    p.next = p;\n  } else {\n    p.next = last.next;\n    p.prev = last;\n    last.next.prev = p;\n    last.next = p;\n  }\n\n  return p;\n}\n\nfunction removeNode(p) {\n  p.next.prev = p.prev;\n  p.prev.next = p.next;\n  if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n  if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n  // vertice index in coordinates array\n  this.i = i; // vertex coordinates\n\n  this.x = x;\n  this.y = y; // previous and next vertice nodes in a polygon ring\n\n  this.prev = null;\n  this.next = null; // z-order curve value\n\n  this.z = null; // previous and next nodes in z-order\n\n  this.prevZ = null;\n  this.nextZ = null; // indicates whether this is a steiner point\n\n  this.steiner = false;\n}\n\nfunction signedArea(data, start, end, dim) {\n  var sum = 0;\n\n  for (var i = start, j = end - dim; i < end; i += dim) {\n    sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n    j = i;\n  }\n\n  return sum;\n}\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\n\nvar ShapeUtils = {\n  // calculate area of the contour polygon\n  area: function (contour) {\n    var n = contour.length;\n    var a = 0.0;\n\n    for (var p = n - 1, q = 0; q < n; p = q++) {\n      a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n    }\n\n    return a * 0.5;\n  },\n  isClockWise: function (pts) {\n    return ShapeUtils.area(pts) < 0;\n  },\n  triangulateShape: function (contour, holes) {\n    var vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n    var holeIndices = []; // array of hole indices\n\n    var faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n    removeDupEndPts(contour);\n    addContour(vertices, contour); //\n\n    var holeIndex = contour.length;\n    holes.forEach(removeDupEndPts);\n\n    for (var i = 0; i < holes.length; i++) {\n      holeIndices.push(holeIndex);\n      holeIndex += holes[i].length;\n      addContour(vertices, holes[i]);\n    } //\n\n\n    var triangles = Earcut.triangulate(vertices, holeIndices); //\n\n    for (var i = 0; i < triangles.length; i += 3) {\n      faces.push(triangles.slice(i, i + 3));\n    }\n\n    return faces;\n  }\n};\n\nfunction removeDupEndPts(points) {\n  var l = points.length;\n\n  if (l > 2 && points[l - 1].equals(points[0])) {\n    points.pop();\n  }\n}\n\nfunction addContour(vertices, contour) {\n  for (var i = 0; i < contour.length; i++) {\n    vertices.push(contour[i].x);\n    vertices.push(contour[i].y);\n  }\n}\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n// ExtrudeGeometry\n\n\nfunction ExtrudeGeometry(shapes, options) {\n  Geometry.call(this);\n  this.type = 'ExtrudeGeometry';\n  this.parameters = {\n    shapes: shapes,\n    options: options\n  };\n  this.fromBufferGeometry(new ExtrudeBufferGeometry(shapes, options));\n  this.mergeVertices();\n}\n\nExtrudeGeometry.prototype = Object.create(Geometry.prototype);\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n  var data = Geometry.prototype.toJSON.call(this);\n  var shapes = this.parameters.shapes;\n  var options = this.parameters.options;\n  return toJSON(shapes, options, data);\n}; // ExtrudeBufferGeometry\n\n\nfunction ExtrudeBufferGeometry(shapes, options) {\n  BufferGeometry.call(this);\n  this.type = 'ExtrudeBufferGeometry';\n  this.parameters = {\n    shapes: shapes,\n    options: options\n  };\n  shapes = Array.isArray(shapes) ? shapes : [shapes];\n  var scope = this;\n  var verticesArray = [];\n  var uvArray = [];\n\n  for (var i = 0, l = shapes.length; i < l; i++) {\n    var shape = shapes[i];\n    addShape(shape);\n  } // build geometry\n\n\n  this.addAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n  this.computeVertexNormals(); // functions\n\n  function addShape(shape) {\n    var placeholder = []; // options\n\n    var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n    var steps = options.steps !== undefined ? options.steps : 1;\n    var depth = options.depth !== undefined ? options.depth : 100;\n    var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n    var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n    var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n    var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n    var extrudePath = options.extrudePath;\n    var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n    if (options.amount !== undefined) {\n      console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n      depth = options.amount;\n    } //\n\n\n    var extrudePts,\n        extrudeByPath = false;\n    var splineTube, binormal, normal, position2;\n\n    if (extrudePath) {\n      extrudePts = extrudePath.getSpacedPoints(steps);\n      extrudeByPath = true;\n      bevelEnabled = false; // bevels not supported for path extrusion\n      // SETUP TNB variables\n      // TODO1 - have a .isClosed in spline?\n\n      splineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n      binormal = new Vector3();\n      normal = new Vector3();\n      position2 = new Vector3();\n    } // Safeguards if bevels are not enabled\n\n\n    if (!bevelEnabled) {\n      bevelSegments = 0;\n      bevelThickness = 0;\n      bevelSize = 0;\n    } // Variables initialization\n\n\n    var ahole, h, hl; // looping of holes\n\n    var shapePoints = shape.extractPoints(curveSegments);\n    var vertices = shapePoints.shape;\n    var holes = shapePoints.holes;\n    var reverse = !ShapeUtils.isClockWise(vertices);\n\n    if (reverse) {\n      vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n\n        if (ShapeUtils.isClockWise(ahole)) {\n          holes[h] = ahole.reverse();\n        }\n      }\n    }\n\n    var faces = ShapeUtils.triangulateShape(vertices, holes);\n    /* Vertices */\n\n    var contour = vertices; // vertices has all points but contour has only points of circumference\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      vertices = vertices.concat(ahole);\n    }\n\n    function scalePt2(pt, vec, size) {\n      if (!vec) console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n      return vec.clone().multiplyScalar(size).add(pt);\n    }\n\n    var b,\n        bs,\n        t,\n        z,\n        vert,\n        vlen = vertices.length,\n        face,\n        flen = faces.length; // Find directions for point movement\n\n    function getBevelVec(inPt, inPrev, inNext) {\n      // computes for inPt the corresponding point inPt' on a new contour\n      //   shifted by 1 unit (length of normalized vector) to the left\n      // if we walk along contour clockwise, this new contour is outside the old one\n      //\n      // inPt' is the intersection of the two lines parallel to the two\n      //  adjacent edges of inPt at a distance of 1 unit on the left side.\n      var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n      // good reading for geometry algorithms (here: line-line intersection)\n      // http://geomalgorithms.com/a05-_intersect-1.html\n\n      var v_prev_x = inPt.x - inPrev.x,\n          v_prev_y = inPt.y - inPrev.y;\n      var v_next_x = inNext.x - inPt.x,\n          v_next_y = inNext.y - inPt.y;\n      var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n      var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n      if (Math.abs(collinear0) > Number.EPSILON) {\n        // not collinear\n        // length of vectors for normalizing\n        var v_prev_len = Math.sqrt(v_prev_lensq);\n        var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n        var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n        var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n        var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n        var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n        var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n        v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n        v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n        //  but prevent crazy spikes\n\n        var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n        if (v_trans_lensq <= 2) {\n          return new Vector2(v_trans_x, v_trans_y);\n        } else {\n          shrink_by = Math.sqrt(v_trans_lensq / 2);\n        }\n      } else {\n        // handle special case of collinear edges\n        var direction_eq = false; // assumes: opposite\n\n        if (v_prev_x > Number.EPSILON) {\n          if (v_next_x > Number.EPSILON) {\n            direction_eq = true;\n          }\n        } else {\n          if (v_prev_x < -Number.EPSILON) {\n            if (v_next_x < -Number.EPSILON) {\n              direction_eq = true;\n            }\n          } else {\n            if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n              direction_eq = true;\n            }\n          }\n        }\n\n        if (direction_eq) {\n          // console.log(\"Warning: lines are a straight sequence\");\n          v_trans_x = -v_prev_y;\n          v_trans_y = v_prev_x;\n          shrink_by = Math.sqrt(v_prev_lensq);\n        } else {\n          // console.log(\"Warning: lines are a straight spike\");\n          v_trans_x = v_prev_x;\n          v_trans_y = v_prev_y;\n          shrink_by = Math.sqrt(v_prev_lensq / 2);\n        }\n      }\n\n      return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n    }\n\n    var contourMovements = [];\n\n    for (var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n      if (j === il) j = 0;\n      if (k === il) k = 0; //  (j)---(i)---(k)\n      // console.log('i,j,k', i, j , k)\n\n      contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n    }\n\n    var holesMovements = [],\n        oneHoleMovements,\n        verticesMovements = contourMovements.concat();\n\n    for (h = 0, hl = holes.length; h < hl; h++) {\n      ahole = holes[h];\n      oneHoleMovements = [];\n\n      for (i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n        if (j === il) j = 0;\n        if (k === il) k = 0; //  (j)---(i)---(k)\n\n        oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n      }\n\n      holesMovements.push(oneHoleMovements);\n      verticesMovements = verticesMovements.concat(oneHoleMovements);\n    } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n    for (b = 0; b < bevelSegments; b++) {\n      //for ( b = bevelSegments; b > 0; b -- ) {\n      t = b / bevelSegments;\n      z = bevelThickness * Math.cos(t * Math.PI / 2);\n      bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n      for (i = 0, il = contour.length; i < il; i++) {\n        vert = scalePt2(contour[i], contourMovements[i], bs);\n        v(vert.x, vert.y, -z);\n      } // expand holes\n\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        oneHoleMovements = holesMovements[h];\n\n        for (i = 0, il = ahole.length; i < il; i++) {\n          vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n          v(vert.x, vert.y, -z);\n        }\n      }\n    }\n\n    bs = bevelSize; // Back facing vertices\n\n    for (i = 0; i < vlen; i++) {\n      vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n      if (!extrudeByPath) {\n        v(vert.x, vert.y, 0);\n      } else {\n        // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n        normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n        binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n        position2.copy(extrudePts[0]).add(normal).add(binormal);\n        v(position2.x, position2.y, position2.z);\n      }\n    } // Add stepped vertices...\n    // Including front facing vertices\n\n\n    var s;\n\n    for (s = 1; s <= steps; s++) {\n      for (i = 0; i < vlen; i++) {\n        vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, depth / steps * s);\n        } else {\n          // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n          normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n          binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n          position2.copy(extrudePts[s]).add(normal).add(binormal);\n          v(position2.x, position2.y, position2.z);\n        }\n      }\n    } // Add bevel segments planes\n    //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n    for (b = bevelSegments - 1; b >= 0; b--) {\n      t = b / bevelSegments;\n      z = bevelThickness * Math.cos(t * Math.PI / 2);\n      bs = bevelSize * Math.sin(t * Math.PI / 2); // contract shape\n\n      for (i = 0, il = contour.length; i < il; i++) {\n        vert = scalePt2(contour[i], contourMovements[i], bs);\n        v(vert.x, vert.y, depth + z);\n      } // expand holes\n\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        oneHoleMovements = holesMovements[h];\n\n        for (i = 0, il = ahole.length; i < il; i++) {\n          vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n          if (!extrudeByPath) {\n            v(vert.x, vert.y, depth + z);\n          } else {\n            v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n          }\n        }\n      }\n    }\n    /* Faces */\n    // Top and bottom faces\n\n\n    buildLidFaces(); // Sides faces\n\n    buildSideFaces(); /////  Internal functions\n\n    function buildLidFaces() {\n      var start = verticesArray.length / 3;\n\n      if (bevelEnabled) {\n        var layer = 0; // steps + 1\n\n        var offset = vlen * layer; // Bottom faces\n\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[2] + offset, face[1] + offset, face[0] + offset);\n        }\n\n        layer = steps + bevelSegments * 2;\n        offset = vlen * layer; // Top faces\n\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[0] + offset, face[1] + offset, face[2] + offset);\n        }\n      } else {\n        // Bottom faces\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[2], face[1], face[0]);\n        } // Top faces\n\n\n        for (i = 0; i < flen; i++) {\n          face = faces[i];\n          f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n        }\n      }\n\n      scope.addGroup(start, verticesArray.length / 3 - start, 0);\n    } // Create faces for the z-sides of the shape\n\n\n    function buildSideFaces() {\n      var start = verticesArray.length / 3;\n      var layeroffset = 0;\n      sidewalls(contour, layeroffset);\n      layeroffset += contour.length;\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        sidewalls(ahole, layeroffset); //, true\n\n        layeroffset += ahole.length;\n      }\n\n      scope.addGroup(start, verticesArray.length / 3 - start, 1);\n    }\n\n    function sidewalls(contour, layeroffset) {\n      var j, k;\n      i = contour.length;\n\n      while (--i >= 0) {\n        j = i;\n        k = i - 1;\n        if (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n        var s = 0,\n            sl = steps + bevelSegments * 2;\n\n        for (s = 0; s < sl; s++) {\n          var slen1 = vlen * s;\n          var slen2 = vlen * (s + 1);\n          var a = layeroffset + j + slen1,\n              b = layeroffset + k + slen1,\n              c = layeroffset + k + slen2,\n              d = layeroffset + j + slen2;\n          f4(a, b, c, d);\n        }\n      }\n    }\n\n    function v(x, y, z) {\n      placeholder.push(x);\n      placeholder.push(y);\n      placeholder.push(z);\n    }\n\n    function f3(a, b, c) {\n      addVertex(a);\n      addVertex(b);\n      addVertex(c);\n      var nextIndex = verticesArray.length / 3;\n      var uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n      addUV(uvs[0]);\n      addUV(uvs[1]);\n      addUV(uvs[2]);\n    }\n\n    function f4(a, b, c, d) {\n      addVertex(a);\n      addVertex(b);\n      addVertex(d);\n      addVertex(b);\n      addVertex(c);\n      addVertex(d);\n      var nextIndex = verticesArray.length / 3;\n      var uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n      addUV(uvs[0]);\n      addUV(uvs[1]);\n      addUV(uvs[3]);\n      addUV(uvs[1]);\n      addUV(uvs[2]);\n      addUV(uvs[3]);\n    }\n\n    function addVertex(index) {\n      verticesArray.push(placeholder[index * 3 + 0]);\n      verticesArray.push(placeholder[index * 3 + 1]);\n      verticesArray.push(placeholder[index * 3 + 2]);\n    }\n\n    function addUV(vector2) {\n      uvArray.push(vector2.x);\n      uvArray.push(vector2.y);\n    }\n  }\n}\n\nExtrudeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n  var data = BufferGeometry.prototype.toJSON.call(this);\n  var shapes = this.parameters.shapes;\n  var options = this.parameters.options;\n  return toJSON(shapes, options, data);\n}; //\n\n\nvar WorldUVGenerator = {\n  generateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n    var a_x = vertices[indexA * 3];\n    var a_y = vertices[indexA * 3 + 1];\n    var b_x = vertices[indexB * 3];\n    var b_y = vertices[indexB * 3 + 1];\n    var c_x = vertices[indexC * 3];\n    var c_y = vertices[indexC * 3 + 1];\n    return [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n  },\n  generateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n    var a_x = vertices[indexA * 3];\n    var a_y = vertices[indexA * 3 + 1];\n    var a_z = vertices[indexA * 3 + 2];\n    var b_x = vertices[indexB * 3];\n    var b_y = vertices[indexB * 3 + 1];\n    var b_z = vertices[indexB * 3 + 2];\n    var c_x = vertices[indexC * 3];\n    var c_y = vertices[indexC * 3 + 1];\n    var c_z = vertices[indexC * 3 + 2];\n    var d_x = vertices[indexD * 3];\n    var d_y = vertices[indexD * 3 + 1];\n    var d_z = vertices[indexD * 3 + 2];\n\n    if (Math.abs(a_y - b_y) < 0.01) {\n      return [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n    } else {\n      return [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n    }\n  }\n};\n\nfunction toJSON(shapes, options, data) {\n  //\n  data.shapes = [];\n\n  if (Array.isArray(shapes)) {\n    for (var i = 0, l = shapes.length; i < l; i++) {\n      var shape = shapes[i];\n      data.shapes.push(shape.uuid);\n    }\n  } else {\n    data.shapes.push(shapes.uuid);\n  } //\n\n\n  if (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n  return data;\n}\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n// TextGeometry\n\n\nfunction TextGeometry(text, parameters) {\n  Geometry.call(this);\n  this.type = 'TextGeometry';\n  this.parameters = {\n    text: text,\n    parameters: parameters\n  };\n  this.fromBufferGeometry(new TextBufferGeometry(text, parameters));\n  this.mergeVertices();\n}\n\nTextGeometry.prototype = Object.create(Geometry.prototype);\nTextGeometry.prototype.constructor = TextGeometry; // TextBufferGeometry\n\nfunction TextBufferGeometry(text, parameters) {\n  parameters = parameters || {};\n  var font = parameters.font;\n\n  if (!(font && font.isFont)) {\n    console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n    return new Geometry();\n  }\n\n  var shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\n\n  parameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n  if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n  if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n  if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n  ExtrudeBufferGeometry.call(this, shapes, parameters);\n  this.type = 'TextBufferGeometry';\n}\n\nTextBufferGeometry.prototype = Object.create(ExtrudeBufferGeometry.prototype);\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n// SphereGeometry\n\nfunction SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  Geometry.call(this);\n  this.type = 'SphereGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n  this.mergeVertices();\n}\n\nSphereGeometry.prototype = Object.create(Geometry.prototype);\nSphereGeometry.prototype.constructor = SphereGeometry; // SphereBufferGeometry\n\nfunction SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n  BufferGeometry.call(this);\n  this.type = 'SphereBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    widthSegments: widthSegments,\n    heightSegments: heightSegments,\n    phiStart: phiStart,\n    phiLength: phiLength,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 1;\n  widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n  heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n  phiStart = phiStart !== undefined ? phiStart : 0;\n  phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n  var thetaEnd = thetaStart + thetaLength;\n  var ix, iy;\n  var index = 0;\n  var grid = [];\n  var vertex = new Vector3();\n  var normal = new Vector3(); // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // generate vertices, normals and uvs\n\n  for (iy = 0; iy <= heightSegments; iy++) {\n    var verticesRow = [];\n    var v = iy / heightSegments;\n\n    for (ix = 0; ix <= widthSegments; ix++) {\n      var u = ix / widthSegments; // vertex\n\n      vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n      vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      normal.set(vertex.x, vertex.y, vertex.z).normalize();\n      normals.push(normal.x, normal.y, normal.z); // uv\n\n      uvs.push(u, 1 - v);\n      verticesRow.push(index++);\n    }\n\n    grid.push(verticesRow);\n  } // indices\n\n\n  for (iy = 0; iy < heightSegments; iy++) {\n    for (ix = 0; ix < widthSegments; ix++) {\n      var a = grid[iy][ix + 1];\n      var b = grid[iy][ix];\n      var c = grid[iy + 1][ix];\n      var d = grid[iy + 1][ix + 1];\n      if (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n      if (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nSphereBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n// RingGeometry\n\nfunction RingGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n  Geometry.call(this);\n  this.type = 'RingGeometry';\n  this.parameters = {\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    thetaSegments: thetaSegments,\n    phiSegments: phiSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength));\n  this.mergeVertices();\n}\n\nRingGeometry.prototype = Object.create(Geometry.prototype);\nRingGeometry.prototype.constructor = RingGeometry; // RingBufferGeometry\n\nfunction RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n  BufferGeometry.call(this);\n  this.type = 'RingBufferGeometry';\n  this.parameters = {\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    thetaSegments: thetaSegments,\n    phiSegments: phiSegments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  innerRadius = innerRadius || 0.5;\n  outerRadius = outerRadius || 1;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n  thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n  phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 1; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // some helper variables\n\n  var segment;\n  var radius = innerRadius;\n  var radiusStep = (outerRadius - innerRadius) / phiSegments;\n  var vertex = new Vector3();\n  var uv = new Vector2();\n  var j, i; // generate vertices, normals and uvs\n\n  for (j = 0; j <= phiSegments; j++) {\n    for (i = 0; i <= thetaSegments; i++) {\n      // values are generate from the inside of the ring to the outside\n      segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      normals.push(0, 0, 1); // uv\n\n      uv.x = (vertex.x / outerRadius + 1) / 2;\n      uv.y = (vertex.y / outerRadius + 1) / 2;\n      uvs.push(uv.x, uv.y);\n    } // increase the radius for next row of vertices\n\n\n    radius += radiusStep;\n  } // indices\n\n\n  for (j = 0; j < phiSegments; j++) {\n    var thetaSegmentLevel = j * (thetaSegments + 1);\n\n    for (i = 0; i < thetaSegments; i++) {\n      segment = i + thetaSegmentLevel;\n      var a = segment;\n      var b = segment + thetaSegments + 1;\n      var c = segment + thetaSegments + 2;\n      var d = segment + 1; // faces\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nRingBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n// LatheGeometry\n\nfunction LatheGeometry(points, segments, phiStart, phiLength) {\n  Geometry.call(this);\n  this.type = 'LatheGeometry';\n  this.parameters = {\n    points: points,\n    segments: segments,\n    phiStart: phiStart,\n    phiLength: phiLength\n  };\n  this.fromBufferGeometry(new LatheBufferGeometry(points, segments, phiStart, phiLength));\n  this.mergeVertices();\n}\n\nLatheGeometry.prototype = Object.create(Geometry.prototype);\nLatheGeometry.prototype.constructor = LatheGeometry; // LatheBufferGeometry\n\nfunction LatheBufferGeometry(points, segments, phiStart, phiLength) {\n  BufferGeometry.call(this);\n  this.type = 'LatheBufferGeometry';\n  this.parameters = {\n    points: points,\n    segments: segments,\n    phiStart: phiStart,\n    phiLength: phiLength\n  };\n  segments = Math.floor(segments) || 12;\n  phiStart = phiStart || 0;\n  phiLength = phiLength || Math.PI * 2; // clamp phiLength so it's in range of [ 0, 2PI ]\n\n  phiLength = _Math.clamp(phiLength, 0, Math.PI * 2); // buffers\n\n  var indices = [];\n  var vertices = [];\n  var uvs = []; // helper variables\n\n  var base;\n  var inverseSegments = 1.0 / segments;\n  var vertex = new Vector3();\n  var uv = new Vector2();\n  var i, j; // generate vertices and uvs\n\n  for (i = 0; i <= segments; i++) {\n    var phi = phiStart + i * inverseSegments * phiLength;\n    var sin = Math.sin(phi);\n    var cos = Math.cos(phi);\n\n    for (j = 0; j <= points.length - 1; j++) {\n      // vertex\n      vertex.x = points[j].x * sin;\n      vertex.y = points[j].y;\n      vertex.z = points[j].x * cos;\n      vertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n      uv.x = i / segments;\n      uv.y = j / (points.length - 1);\n      uvs.push(uv.x, uv.y);\n    }\n  } // indices\n\n\n  for (i = 0; i < segments; i++) {\n    for (j = 0; j < points.length - 1; j++) {\n      base = j + i * points.length;\n      var a = base;\n      var b = base + points.length;\n      var c = base + points.length + 1;\n      var d = base + 1; // faces\n\n      indices.push(a, b, d);\n      indices.push(b, c, d);\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n  this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n  // because the corresponding vertices are identical (but still have different UVs).\n\n  if (phiLength === Math.PI * 2) {\n    var normals = this.attributes.normal.array;\n    var n1 = new Vector3();\n    var n2 = new Vector3();\n    var n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n    base = segments * points.length * 3;\n\n    for (i = 0, j = 0; i < points.length; i++, j += 3) {\n      // select the normal of the vertex in the first line\n      n1.x = normals[j + 0];\n      n1.y = normals[j + 1];\n      n1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n      n2.x = normals[base + j + 0];\n      n2.y = normals[base + j + 1];\n      n2.z = normals[base + j + 2]; // average normals\n\n      n.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n      normals[j + 0] = normals[base + j + 0] = n.x;\n      normals[j + 1] = normals[base + j + 1] = n.y;\n      normals[j + 2] = normals[base + j + 2] = n.z;\n    }\n  }\n}\n\nLatheBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n// ShapeGeometry\n\nfunction ShapeGeometry(shapes, curveSegments) {\n  Geometry.call(this);\n  this.type = 'ShapeGeometry';\n\n  if (typeof curveSegments === 'object') {\n    console.warn('THREE.ShapeGeometry: Options parameter has been removed.');\n    curveSegments = curveSegments.curveSegments;\n  }\n\n  this.parameters = {\n    shapes: shapes,\n    curveSegments: curveSegments\n  };\n  this.fromBufferGeometry(new ShapeBufferGeometry(shapes, curveSegments));\n  this.mergeVertices();\n}\n\nShapeGeometry.prototype = Object.create(Geometry.prototype);\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n  var data = Geometry.prototype.toJSON.call(this);\n  var shapes = this.parameters.shapes;\n  return toJSON$1(shapes, data);\n}; // ShapeBufferGeometry\n\n\nfunction ShapeBufferGeometry(shapes, curveSegments) {\n  BufferGeometry.call(this);\n  this.type = 'ShapeBufferGeometry';\n  this.parameters = {\n    shapes: shapes,\n    curveSegments: curveSegments\n  };\n  curveSegments = curveSegments || 12; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var groupStart = 0;\n  var groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n  if (Array.isArray(shapes) === false) {\n    addShape(shapes);\n  } else {\n    for (var i = 0; i < shapes.length; i++) {\n      addShape(shapes[i]);\n      this.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n      groupStart += groupCount;\n      groupCount = 0;\n    }\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n  function addShape(shape) {\n    var i, l, shapeHole;\n    var indexOffset = vertices.length / 3;\n    var points = shape.extractPoints(curveSegments);\n    var shapeVertices = points.shape;\n    var shapeHoles = points.holes; // check direction of vertices\n\n    if (ShapeUtils.isClockWise(shapeVertices) === false) {\n      shapeVertices = shapeVertices.reverse(); // also check if holes are in the opposite direction\n\n      for (i = 0, l = shapeHoles.length; i < l; i++) {\n        shapeHole = shapeHoles[i];\n\n        if (ShapeUtils.isClockWise(shapeHole) === true) {\n          shapeHoles[i] = shapeHole.reverse();\n        }\n      }\n    }\n\n    var faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n    for (i = 0, l = shapeHoles.length; i < l; i++) {\n      shapeHole = shapeHoles[i];\n      shapeVertices = shapeVertices.concat(shapeHole);\n    } // vertices, normals, uvs\n\n\n    for (i = 0, l = shapeVertices.length; i < l; i++) {\n      var vertex = shapeVertices[i];\n      vertices.push(vertex.x, vertex.y, 0);\n      normals.push(0, 0, 1);\n      uvs.push(vertex.x, vertex.y); // world uvs\n    } // incides\n\n\n    for (i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n      var a = face[0] + indexOffset;\n      var b = face[1] + indexOffset;\n      var c = face[2] + indexOffset;\n      indices.push(a, b, c);\n      groupCount += 3;\n    }\n  }\n}\n\nShapeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n  var data = BufferGeometry.prototype.toJSON.call(this);\n  var shapes = this.parameters.shapes;\n  return toJSON$1(shapes, data);\n}; //\n\n\nfunction toJSON$1(shapes, data) {\n  data.shapes = [];\n\n  if (Array.isArray(shapes)) {\n    for (var i = 0, l = shapes.length; i < l; i++) {\n      var shape = shapes[i];\n      data.shapes.push(shape.uuid);\n    }\n  } else {\n    data.shapes.push(shapes.uuid);\n  }\n\n  return data;\n}\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n\nfunction EdgesGeometry(geometry, thresholdAngle) {\n  BufferGeometry.call(this);\n  this.type = 'EdgesGeometry';\n  this.parameters = {\n    thresholdAngle: thresholdAngle\n  };\n  thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1; // buffer\n\n  var vertices = []; // helper variables\n\n  var thresholdDot = Math.cos(_Math.DEG2RAD * thresholdAngle);\n  var edge = [0, 0],\n      edges = {},\n      edge1,\n      edge2;\n  var key,\n      keys = ['a', 'b', 'c']; // prepare source geometry\n\n  var geometry2;\n\n  if (geometry.isBufferGeometry) {\n    geometry2 = new Geometry();\n    geometry2.fromBufferGeometry(geometry);\n  } else {\n    geometry2 = geometry.clone();\n  }\n\n  geometry2.mergeVertices();\n  geometry2.computeFaceNormals();\n  var sourceVertices = geometry2.vertices;\n  var faces = geometry2.faces; // now create a data structure where each entry represents an edge with its adjoining faces\n\n  for (var i = 0, l = faces.length; i < l; i++) {\n    var face = faces[i];\n\n    for (var j = 0; j < 3; j++) {\n      edge1 = face[keys[j]];\n      edge2 = face[keys[(j + 1) % 3]];\n      edge[0] = Math.min(edge1, edge2);\n      edge[1] = Math.max(edge1, edge2);\n      key = edge[0] + ',' + edge[1];\n\n      if (edges[key] === undefined) {\n        edges[key] = {\n          index1: edge[0],\n          index2: edge[1],\n          face1: i,\n          face2: undefined\n        };\n      } else {\n        edges[key].face2 = i;\n      }\n    }\n  } // generate vertices\n\n\n  for (key in edges) {\n    var e = edges[key]; // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n    if (e.face2 === undefined || faces[e.face1].normal.dot(faces[e.face2].normal) <= thresholdDot) {\n      var vertex = sourceVertices[e.index1];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n      vertex = sourceVertices[e.index2];\n      vertices.push(vertex.x, vertex.y, vertex.z);\n    }\n  } // build geometry\n\n\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n}\n\nEdgesGeometry.prototype = Object.create(BufferGeometry.prototype);\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n// CylinderGeometry\n\nfunction CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  Geometry.call(this);\n  this.type = 'CylinderGeometry';\n  this.parameters = {\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength));\n  this.mergeVertices();\n}\n\nCylinderGeometry.prototype = Object.create(Geometry.prototype);\nCylinderGeometry.prototype.constructor = CylinderGeometry; // CylinderBufferGeometry\n\nfunction CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  BufferGeometry.call(this);\n  this.type = 'CylinderBufferGeometry';\n  this.parameters = {\n    radiusTop: radiusTop,\n    radiusBottom: radiusBottom,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  var scope = this;\n  radiusTop = radiusTop !== undefined ? radiusTop : 1;\n  radiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n  height = height || 1;\n  radialSegments = Math.floor(radialSegments) || 8;\n  heightSegments = Math.floor(heightSegments) || 1;\n  openEnded = openEnded !== undefined ? openEnded : false;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var index = 0;\n  var indexArray = [];\n  var halfHeight = height / 2;\n  var groupStart = 0; // generate geometry\n\n  generateTorso();\n\n  if (openEnded === false) {\n    if (radiusTop > 0) generateCap(true);\n    if (radiusBottom > 0) generateCap(false);\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n  function generateTorso() {\n    var x, y;\n    var normal = new Vector3();\n    var vertex = new Vector3();\n    var groupCount = 0; // this will be used to calculate the normal\n\n    var slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n    for (y = 0; y <= heightSegments; y++) {\n      var indexRow = [];\n      var v = y / heightSegments; // calculate the radius of the current row\n\n      var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n      for (x = 0; x <= radialSegments; x++) {\n        var u = x / radialSegments;\n        var theta = u * thetaLength + thetaStart;\n        var sinTheta = Math.sin(theta);\n        var cosTheta = Math.cos(theta); // vertex\n\n        vertex.x = radius * sinTheta;\n        vertex.y = -v * height + halfHeight;\n        vertex.z = radius * cosTheta;\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normal.set(sinTheta, slope, cosTheta).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u, 1 - v); // save index of vertex in respective row\n\n        indexRow.push(index++);\n      } // now save vertices of the row in our index array\n\n\n      indexArray.push(indexRow);\n    } // generate indices\n\n\n    for (x = 0; x < radialSegments; x++) {\n      for (y = 0; y < heightSegments; y++) {\n        // we use the index array to access the correct indices\n        var a = indexArray[y][x];\n        var b = indexArray[y + 1][x];\n        var c = indexArray[y + 1][x + 1];\n        var d = indexArray[y][x + 1]; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d); // update group counter\n\n        groupCount += 6;\n      }\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n    groupStart += groupCount;\n  }\n\n  function generateCap(top) {\n    var x, centerIndexStart, centerIndexEnd;\n    var uv = new Vector2();\n    var vertex = new Vector3();\n    var groupCount = 0;\n    var radius = top === true ? radiusTop : radiusBottom;\n    var sign = top === true ? 1 : -1; // save the index of the first center vertex\n\n    centerIndexStart = index; // first we generate the center vertex data of the cap.\n    // because the geometry needs one set of uvs per face,\n    // we must generate a center vertex per face/segment\n\n    for (x = 1; x <= radialSegments; x++) {\n      // vertex\n      vertices.push(0, halfHeight * sign, 0); // normal\n\n      normals.push(0, sign, 0); // uv\n\n      uvs.push(0.5, 0.5); // increase index\n\n      index++;\n    } // save the index of the last center vertex\n\n\n    centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n    for (x = 0; x <= radialSegments; x++) {\n      var u = x / radialSegments;\n      var theta = u * thetaLength + thetaStart;\n      var cosTheta = Math.cos(theta);\n      var sinTheta = Math.sin(theta); // vertex\n\n      vertex.x = radius * sinTheta;\n      vertex.y = halfHeight * sign;\n      vertex.z = radius * cosTheta;\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      normals.push(0, sign, 0); // uv\n\n      uv.x = cosTheta * 0.5 + 0.5;\n      uv.y = sinTheta * 0.5 * sign + 0.5;\n      uvs.push(uv.x, uv.y); // increase index\n\n      index++;\n    } // generate indices\n\n\n    for (x = 0; x < radialSegments; x++) {\n      var c = centerIndexStart + x;\n      var i = centerIndexEnd + x;\n\n      if (top === true) {\n        // face top\n        indices.push(i, i + 1, c);\n      } else {\n        // face bottom\n        indices.push(i + 1, i, c);\n      }\n\n      groupCount += 3;\n    } // add a group to the geometry. this will ensure multi material support\n\n\n    scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n    groupStart += groupCount;\n  }\n}\n\nCylinderBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n/**\n * @author abelnation / http://github.com/abelnation\n */\n// ConeGeometry\n\nfunction ConeGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  CylinderGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n  this.type = 'ConeGeometry';\n  this.parameters = {\n    radius: radius,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n}\n\nConeGeometry.prototype = Object.create(CylinderGeometry.prototype);\nConeGeometry.prototype.constructor = ConeGeometry; // ConeBufferGeometry\n\nfunction ConeBufferGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n  CylinderBufferGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n  this.type = 'ConeBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    height: height,\n    radialSegments: radialSegments,\n    heightSegments: heightSegments,\n    openEnded: openEnded,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n}\n\nConeBufferGeometry.prototype = Object.create(CylinderBufferGeometry.prototype);\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n// CircleGeometry\n\nfunction CircleGeometry(radius, segments, thetaStart, thetaLength) {\n  Geometry.call(this);\n  this.type = 'CircleGeometry';\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  this.fromBufferGeometry(new CircleBufferGeometry(radius, segments, thetaStart, thetaLength));\n  this.mergeVertices();\n}\n\nCircleGeometry.prototype = Object.create(Geometry.prototype);\nCircleGeometry.prototype.constructor = CircleGeometry; // CircleBufferGeometry\n\nfunction CircleBufferGeometry(radius, segments, thetaStart, thetaLength) {\n  BufferGeometry.call(this);\n  this.type = 'CircleBufferGeometry';\n  this.parameters = {\n    radius: radius,\n    segments: segments,\n    thetaStart: thetaStart,\n    thetaLength: thetaLength\n  };\n  radius = radius || 1;\n  segments = segments !== undefined ? Math.max(3, segments) : 8;\n  thetaStart = thetaStart !== undefined ? thetaStart : 0;\n  thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers\n\n  var indices = [];\n  var vertices = [];\n  var normals = [];\n  var uvs = []; // helper variables\n\n  var i, s;\n  var vertex = new Vector3();\n  var uv = new Vector2(); // center point\n\n  vertices.push(0, 0, 0);\n  normals.push(0, 0, 1);\n  uvs.push(0.5, 0.5);\n\n  for (s = 0, i = 3; s <= segments; s++, i += 3) {\n    var segment = thetaStart + s / segments * thetaLength; // vertex\n\n    vertex.x = radius * Math.cos(segment);\n    vertex.y = radius * Math.sin(segment);\n    vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n    normals.push(0, 0, 1); // uvs\n\n    uv.x = (vertices[i] / radius + 1) / 2;\n    uv.y = (vertices[i + 1] / radius + 1) / 2;\n    uvs.push(uv.x, uv.y);\n  } // indices\n\n\n  for (i = 1; i <= segments; i++) {\n    indices.push(i, i + 1, 0);\n  } // build geometry\n\n\n  this.setIndex(indices);\n  this.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  this.addAttribute('normal', new Float32BufferAttribute(normals, 3));\n  this.addAttribute('uv', new Float32BufferAttribute(uvs, 2));\n}\n\nCircleBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\nvar Geometries = /*#__PURE__*/Object.freeze({\n  WireframeGeometry: WireframeGeometry,\n  ParametricGeometry: ParametricGeometry,\n  ParametricBufferGeometry: ParametricBufferGeometry,\n  TetrahedronGeometry: TetrahedronGeometry,\n  TetrahedronBufferGeometry: TetrahedronBufferGeometry,\n  OctahedronGeometry: OctahedronGeometry,\n  OctahedronBufferGeometry: OctahedronBufferGeometry,\n  IcosahedronGeometry: IcosahedronGeometry,\n  IcosahedronBufferGeometry: IcosahedronBufferGeometry,\n  DodecahedronGeometry: DodecahedronGeometry,\n  DodecahedronBufferGeometry: DodecahedronBufferGeometry,\n  PolyhedronGeometry: PolyhedronGeometry,\n  PolyhedronBufferGeometry: PolyhedronBufferGeometry,\n  TubeGeometry: TubeGeometry,\n  TubeBufferGeometry: TubeBufferGeometry,\n  TorusKnotGeometry: TorusKnotGeometry,\n  TorusKnotBufferGeometry: TorusKnotBufferGeometry,\n  TorusGeometry: TorusGeometry,\n  TorusBufferGeometry: TorusBufferGeometry,\n  TextGeometry: TextGeometry,\n  TextBufferGeometry: TextBufferGeometry,\n  SphereGeometry: SphereGeometry,\n  SphereBufferGeometry: SphereBufferGeometry,\n  RingGeometry: RingGeometry,\n  RingBufferGeometry: RingBufferGeometry,\n  PlaneGeometry: PlaneGeometry,\n  PlaneBufferGeometry: PlaneBufferGeometry,\n  LatheGeometry: LatheGeometry,\n  LatheBufferGeometry: LatheBufferGeometry,\n  ShapeGeometry: ShapeGeometry,\n  ShapeBufferGeometry: ShapeBufferGeometry,\n  ExtrudeGeometry: ExtrudeGeometry,\n  ExtrudeBufferGeometry: ExtrudeBufferGeometry,\n  EdgesGeometry: EdgesGeometry,\n  ConeGeometry: ConeGeometry,\n  ConeBufferGeometry: ConeBufferGeometry,\n  CylinderGeometry: CylinderGeometry,\n  CylinderBufferGeometry: CylinderBufferGeometry,\n  CircleGeometry: CircleGeometry,\n  CircleBufferGeometry: CircleBufferGeometry,\n  BoxGeometry: BoxGeometry,\n  BoxBufferGeometry: BoxBufferGeometry\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial(parameters) {\n  Material.call(this);\n  this.type = 'ShadowMaterial';\n  this.color = new Color(0x000000);\n  this.transparent = true;\n  this.setValues(parameters);\n}\n\nShadowMaterial.prototype = Object.create(Material.prototype);\nShadowMaterial.prototype.constructor = ShadowMaterial;\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  return this;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction RawShaderMaterial(parameters) {\n  ShaderMaterial.call(this, parameters);\n  this.type = 'RawShaderMaterial';\n}\n\nRawShaderMaterial.prototype = Object.create(ShaderMaterial.prototype);\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial(parameters) {\n  Material.call(this);\n  this.defines = {\n    'STANDARD': ''\n  };\n  this.type = 'MeshStandardMaterial';\n  this.color = new Color(0xffffff); // diffuse\n\n  this.roughness = 0.5;\n  this.metalness = 0.5;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalMapType = TangentSpaceNormalMap;\n  this.normalScale = new Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.roughnessMap = null;\n  this.metalnessMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.envMapIntensity = 1.0;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n}\n\nMeshStandardMaterial.prototype = Object.create(Material.prototype);\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.defines = {\n    'STANDARD': ''\n  };\n  this.color.copy(source.color);\n  this.roughness = source.roughness;\n  this.metalness = source.metalness;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalMapType = source.normalMapType;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.roughnessMap = source.roughnessMap;\n  this.metalnessMap = source.metalnessMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.envMapIntensity = source.envMapIntensity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n};\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\n\nfunction MeshPhysicalMaterial(parameters) {\n  MeshStandardMaterial.call(this);\n  this.defines = {\n    'PHYSICAL': ''\n  };\n  this.type = 'MeshPhysicalMaterial';\n  this.reflectivity = 0.5; // maps to F0 = 0.04\n\n  this.clearCoat = 0.0;\n  this.clearCoatRoughness = 0.0;\n  this.setValues(parameters);\n}\n\nMeshPhysicalMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function (source) {\n  MeshStandardMaterial.prototype.copy.call(this, source);\n  this.defines = {\n    'PHYSICAL': ''\n  };\n  this.reflectivity = source.reflectivity;\n  this.clearCoat = source.clearCoat;\n  this.clearCoatRoughness = source.clearCoatRoughness;\n  return this;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\n\nfunction MeshPhongMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshPhongMaterial';\n  this.color = new Color(0xffffff); // diffuse\n\n  this.specular = new Color(0x111111);\n  this.shininess = 30;\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalMapType = TangentSpaceNormalMap;\n  this.normalScale = new Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n}\n\nMeshPhongMaterial.prototype = Object.create(Material.prototype);\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.specular.copy(source.specular);\n  this.shininess = source.shininess;\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalMapType = source.normalMapType;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n};\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\n\nfunction MeshToonMaterial(parameters) {\n  MeshPhongMaterial.call(this);\n  this.defines = {\n    'TOON': ''\n  };\n  this.type = 'MeshToonMaterial';\n  this.gradientMap = null;\n  this.setValues(parameters);\n}\n\nMeshToonMaterial.prototype = Object.create(MeshPhongMaterial.prototype);\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function (source) {\n  MeshPhongMaterial.prototype.copy.call(this, source);\n  this.gradientMap = source.gradientMap;\n  return this;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\n\nfunction MeshNormalMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshNormalMaterial';\n  this.bumpMap = null;\n  this.bumpScale = 1;\n  this.normalMap = null;\n  this.normalMapType = TangentSpaceNormalMap;\n  this.normalScale = new Vector2(1, 1);\n  this.displacementMap = null;\n  this.displacementScale = 1;\n  this.displacementBias = 0;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.fog = false;\n  this.lights = false;\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n}\n\nMeshNormalMaterial.prototype = Object.create(Material.prototype);\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.bumpMap = source.bumpMap;\n  this.bumpScale = source.bumpScale;\n  this.normalMap = source.normalMap;\n  this.normalMapType = source.normalMapType;\n  this.normalScale.copy(source.normalScale);\n  this.displacementMap = source.displacementMap;\n  this.displacementScale = source.displacementScale;\n  this.displacementBias = source.displacementBias;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\n\nfunction MeshLambertMaterial(parameters) {\n  Material.call(this);\n  this.type = 'MeshLambertMaterial';\n  this.color = new Color(0xffffff); // diffuse\n\n  this.map = null;\n  this.lightMap = null;\n  this.lightMapIntensity = 1.0;\n  this.aoMap = null;\n  this.aoMapIntensity = 1.0;\n  this.emissive = new Color(0x000000);\n  this.emissiveIntensity = 1.0;\n  this.emissiveMap = null;\n  this.specularMap = null;\n  this.alphaMap = null;\n  this.envMap = null;\n  this.combine = MultiplyOperation;\n  this.reflectivity = 1;\n  this.refractionRatio = 0.98;\n  this.wireframe = false;\n  this.wireframeLinewidth = 1;\n  this.wireframeLinecap = 'round';\n  this.wireframeLinejoin = 'round';\n  this.skinning = false;\n  this.morphTargets = false;\n  this.morphNormals = false;\n  this.setValues(parameters);\n}\n\nMeshLambertMaterial.prototype = Object.create(Material.prototype);\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function (source) {\n  Material.prototype.copy.call(this, source);\n  this.color.copy(source.color);\n  this.map = source.map;\n  this.lightMap = source.lightMap;\n  this.lightMapIntensity = source.lightMapIntensity;\n  this.aoMap = source.aoMap;\n  this.aoMapIntensity = source.aoMapIntensity;\n  this.emissive.copy(source.emissive);\n  this.emissiveMap = source.emissiveMap;\n  this.emissiveIntensity = source.emissiveIntensity;\n  this.specularMap = source.specularMap;\n  this.alphaMap = source.alphaMap;\n  this.envMap = source.envMap;\n  this.combine = source.combine;\n  this.reflectivity = source.reflectivity;\n  this.refractionRatio = source.refractionRatio;\n  this.wireframe = source.wireframe;\n  this.wireframeLinewidth = source.wireframeLinewidth;\n  this.wireframeLinecap = source.wireframeLinecap;\n  this.wireframeLinejoin = source.wireframeLinejoin;\n  this.skinning = source.skinning;\n  this.morphTargets = source.morphTargets;\n  this.morphNormals = source.morphNormals;\n  return this;\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\n\nfunction LineDashedMaterial(parameters) {\n  LineBasicMaterial.call(this);\n  this.type = 'LineDashedMaterial';\n  this.scale = 1;\n  this.dashSize = 3;\n  this.gapSize = 1;\n  this.setValues(parameters);\n}\n\nLineDashedMaterial.prototype = Object.create(LineBasicMaterial.prototype);\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function (source) {\n  LineBasicMaterial.prototype.copy.call(this, source);\n  this.scale = source.scale;\n  this.dashSize = source.dashSize;\n  this.gapSize = source.gapSize;\n  return this;\n};\n\nvar Materials = /*#__PURE__*/Object.freeze({\n  ShadowMaterial: ShadowMaterial,\n  SpriteMaterial: SpriteMaterial,\n  RawShaderMaterial: RawShaderMaterial,\n  ShaderMaterial: ShaderMaterial,\n  PointsMaterial: PointsMaterial,\n  MeshPhysicalMaterial: MeshPhysicalMaterial,\n  MeshStandardMaterial: MeshStandardMaterial,\n  MeshPhongMaterial: MeshPhongMaterial,\n  MeshToonMaterial: MeshToonMaterial,\n  MeshNormalMaterial: MeshNormalMaterial,\n  MeshLambertMaterial: MeshLambertMaterial,\n  MeshDepthMaterial: MeshDepthMaterial,\n  MeshDistanceMaterial: MeshDistanceMaterial,\n  MeshBasicMaterial: MeshBasicMaterial,\n  LineDashedMaterial: LineDashedMaterial,\n  LineBasicMaterial: LineBasicMaterial,\n  Material: Material\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n  enabled: false,\n  files: {},\n  add: function (key, file) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n    this.files[key] = file;\n  },\n  get: function (key) {\n    if (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n    return this.files[key];\n  },\n  remove: function (key) {\n    delete this.files[key];\n  },\n  clear: function () {\n    this.files = {};\n  }\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager(onLoad, onProgress, onError) {\n  var scope = this;\n  var isLoading = false;\n  var itemsLoaded = 0;\n  var itemsTotal = 0;\n  var urlModifier = undefined;\n  this.onStart = undefined;\n  this.onLoad = onLoad;\n  this.onProgress = onProgress;\n  this.onError = onError;\n\n  this.itemStart = function (url) {\n    itemsTotal++;\n\n    if (isLoading === false) {\n      if (scope.onStart !== undefined) {\n        scope.onStart(url, itemsLoaded, itemsTotal);\n      }\n    }\n\n    isLoading = true;\n  };\n\n  this.itemEnd = function (url) {\n    itemsLoaded++;\n\n    if (scope.onProgress !== undefined) {\n      scope.onProgress(url, itemsLoaded, itemsTotal);\n    }\n\n    if (itemsLoaded === itemsTotal) {\n      isLoading = false;\n\n      if (scope.onLoad !== undefined) {\n        scope.onLoad();\n      }\n    }\n  };\n\n  this.itemError = function (url) {\n    if (scope.onError !== undefined) {\n      scope.onError(url);\n    }\n  };\n\n  this.resolveURL = function (url) {\n    if (urlModifier) {\n      return urlModifier(url);\n    }\n\n    return url;\n  };\n\n  this.setURLModifier = function (transform) {\n    urlModifier = transform;\n    return this;\n  };\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(FileLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    if (url === undefined) url = '';\n    if (this.path !== undefined) url = this.path + url;\n    url = this.manager.resolveURL(url);\n    var scope = this;\n    var cached = Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n        scope.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    } // Check if request is duplicate\n\n\n    if (loading[url] !== undefined) {\n      loading[url].push({\n        onLoad: onLoad,\n        onProgress: onProgress,\n        onError: onError\n      });\n      return;\n    } // Check for data: URI\n\n\n    var dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n    var dataUriRegexResult = url.match(dataUriRegex); // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\n    if (dataUriRegexResult) {\n      var mimeType = dataUriRegexResult[1];\n      var isBase64 = !!dataUriRegexResult[2];\n      var data = dataUriRegexResult[3];\n      data = window.decodeURIComponent(data);\n      if (isBase64) data = window.atob(data);\n\n      try {\n        var response;\n        var responseType = (this.responseType || '').toLowerCase();\n\n        switch (responseType) {\n          case 'arraybuffer':\n          case 'blob':\n            var view = new Uint8Array(data.length);\n\n            for (var i = 0; i < data.length; i++) {\n              view[i] = data.charCodeAt(i);\n            }\n\n            if (responseType === 'blob') {\n              response = new Blob([view.buffer], {\n                type: mimeType\n              });\n            } else {\n              response = view.buffer;\n            }\n\n            break;\n\n          case 'document':\n            var parser = new DOMParser();\n            response = parser.parseFromString(data, mimeType);\n            break;\n\n          case 'json':\n            response = JSON.parse(data);\n            break;\n\n          default:\n            // 'text' or other\n            response = data;\n            break;\n        } // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\n\n        window.setTimeout(function () {\n          if (onLoad) onLoad(response);\n          scope.manager.itemEnd(url);\n        }, 0);\n      } catch (error) {\n        // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n        window.setTimeout(function () {\n          if (onError) onError(error);\n          scope.manager.itemEnd(url);\n          scope.manager.itemError(url);\n        }, 0);\n      }\n    } else {\n      // Initialise array for duplicate requests\n      loading[url] = [];\n      loading[url].push({\n        onLoad: onLoad,\n        onProgress: onProgress,\n        onError: onError\n      });\n      var request = new XMLHttpRequest();\n      request.open('GET', url, true);\n      request.addEventListener('load', function (event) {\n        var response = this.response;\n        Cache.add(url, response);\n        var callbacks = loading[url];\n        delete loading[url];\n\n        if (this.status === 200 || this.status === 0) {\n          // Some browsers return HTTP Status 0 when using non-http protocol\n          // e.g. 'file://' or 'data://'. Handle as success.\n          if (this.status === 0) console.warn('THREE.FileLoader: HTTP Status 0 received.');\n\n          for (var i = 0, il = callbacks.length; i < il; i++) {\n            var callback = callbacks[i];\n            if (callback.onLoad) callback.onLoad(response);\n          }\n\n          scope.manager.itemEnd(url);\n        } else {\n          for (var i = 0, il = callbacks.length; i < il; i++) {\n            var callback = callbacks[i];\n            if (callback.onError) callback.onError(event);\n          }\n\n          scope.manager.itemEnd(url);\n          scope.manager.itemError(url);\n        }\n      }, false);\n      request.addEventListener('progress', function (event) {\n        var callbacks = loading[url];\n\n        for (var i = 0, il = callbacks.length; i < il; i++) {\n          var callback = callbacks[i];\n          if (callback.onProgress) callback.onProgress(event);\n        }\n      }, false);\n      request.addEventListener('error', function (event) {\n        var callbacks = loading[url];\n        delete loading[url];\n\n        for (var i = 0, il = callbacks.length; i < il; i++) {\n          var callback = callbacks[i];\n          if (callback.onError) callback.onError(event);\n        }\n\n        scope.manager.itemEnd(url);\n        scope.manager.itemError(url);\n      }, false);\n      if (this.responseType !== undefined) request.responseType = this.responseType;\n      if (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n      if (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\n\n      for (var header in this.requestHeader) {\n        request.setRequestHeader(header, this.requestHeader[header]);\n      }\n\n      request.send(null);\n    }\n\n    scope.manager.itemStart(url);\n    return request;\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  },\n  setResponseType: function (value) {\n    this.responseType = value;\n    return this;\n  },\n  setWithCredentials: function (value) {\n    this.withCredentials = value;\n    return this;\n  },\n  setMimeType: function (value) {\n    this.mimeType = value;\n    return this;\n  },\n  setRequestHeader: function (value) {\n    this.requestHeader = value;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager; // override in sub classes\n\n  this._parser = null;\n}\n\nObject.assign(CompressedTextureLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var images = [];\n    var texture = new CompressedTexture();\n    texture.image = images;\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n\n    function loadTexture(i) {\n      loader.load(url[i], function (buffer) {\n        var texDatas = scope._parser(buffer, true);\n\n        images[i] = {\n          width: texDatas.width,\n          height: texDatas.height,\n          format: texDatas.format,\n          mipmaps: texDatas.mipmaps\n        };\n        loaded += 1;\n\n        if (loaded === 6) {\n          if (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, onProgress, onError);\n    }\n\n    if (Array.isArray(url)) {\n      var loaded = 0;\n\n      for (var i = 0, il = url.length; i < il; ++i) {\n        loadTexture(i);\n      }\n    } else {\n      // compressed cubemap texture stored in a single DDS file\n      loader.load(url, function (buffer) {\n        var texDatas = scope._parser(buffer, true);\n\n        if (texDatas.isCubemap) {\n          var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n          for (var f = 0; f < faces; f++) {\n            images[f] = {\n              mipmaps: []\n            };\n\n            for (var i = 0; i < texDatas.mipmapCount; i++) {\n              images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n              images[f].format = texDatas.format;\n              images[f].width = texDatas.width;\n              images[f].height = texDatas.height;\n            }\n          }\n        } else {\n          texture.image.width = texDatas.width;\n          texture.image.height = texDatas.height;\n          texture.mipmaps = texDatas.mipmaps;\n        }\n\n        if (texDatas.mipmapCount === 1) {\n          texture.minFilter = LinearFilter;\n        }\n\n        texture.format = texDatas.format;\n        texture.needsUpdate = true;\n        if (onLoad) onLoad(texture);\n      }, onProgress, onError);\n    }\n\n    return texture;\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  }\n});\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager; // override in sub classes\n\n  this._parser = null;\n}\n\nObject.assign(DataTextureLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var texture = new DataTexture();\n    var loader = new FileLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (buffer) {\n      var texData = scope._parser(buffer);\n\n      if (!texData) return;\n\n      if (undefined !== texData.image) {\n        texture.image = texData.image;\n      } else if (undefined !== texData.data) {\n        texture.image.width = texData.width;\n        texture.image.height = texData.height;\n        texture.image.data = texData.data;\n      }\n\n      texture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n      texture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n      texture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n      texture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n      texture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n      if (undefined !== texData.format) {\n        texture.format = texData.format;\n      }\n\n      if (undefined !== texData.type) {\n        texture.type = texData.type;\n      }\n\n      if (undefined !== texData.mipmaps) {\n        texture.mipmaps = texData.mipmaps;\n      }\n\n      if (1 === texData.mipmapCount) {\n        texture.minFilter = LinearFilter;\n      }\n\n      texture.needsUpdate = true;\n      if (onLoad) onLoad(texture, texData);\n    }, onProgress, onError);\n    return texture;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ImageLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(ImageLoader.prototype, {\n  crossOrigin: 'anonymous',\n  load: function (url, onLoad, onProgress, onError) {\n    if (url === undefined) url = '';\n    if (this.path !== undefined) url = this.path + url;\n    url = this.manager.resolveURL(url);\n    var scope = this;\n    var cached = Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n        scope.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    }\n\n    var image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n\n    function onImageLoad() {\n      image.removeEventListener('load', onImageLoad, false);\n      image.removeEventListener('error', onImageError, false);\n      Cache.add(url, this);\n      if (onLoad) onLoad(this);\n      scope.manager.itemEnd(url);\n    }\n\n    function onImageError(event) {\n      image.removeEventListener('load', onImageLoad, false);\n      image.removeEventListener('error', onImageError, false);\n      if (onError) onError(event);\n      scope.manager.itemEnd(url);\n      scope.manager.itemError(url);\n    }\n\n    image.addEventListener('load', onImageLoad, false);\n    image.addEventListener('error', onImageError, false);\n\n    if (url.substr(0, 5) !== 'data:') {\n      if (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n    }\n\n    scope.manager.itemStart(url);\n    image.src = url;\n    return image;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n    return this;\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTextureLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(CubeTextureLoader.prototype, {\n  crossOrigin: 'anonymous',\n  load: function (urls, onLoad, onProgress, onError) {\n    var texture = new CubeTexture();\n    var loader = new ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    var loaded = 0;\n\n    function loadTexture(i) {\n      loader.load(urls[i], function (image) {\n        texture.images[i] = image;\n        loaded++;\n\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n\n    for (var i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n\n    return texture;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n    return this;\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(TextureLoader.prototype, {\n  crossOrigin: 'anonymous',\n  load: function (url, onLoad, onProgress, onError) {\n    var texture = new Texture();\n    var loader = new ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    loader.load(url, function (image) {\n      texture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\n      var isJPEG = url.search(/\\.(jpg|jpeg)$/) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n      texture.format = isJPEG ? RGBFormat : RGBAFormat;\n      texture.needsUpdate = true;\n\n      if (onLoad !== undefined) {\n        onLoad(texture);\n      }\n    }, onProgress, onError);\n    return texture;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n    return this;\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  }\n});\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n  this.type = 'Curve';\n  this.arcLengthDivisions = 200;\n}\n\nObject.assign(Curve.prototype, {\n  // Virtual base class method to overwrite and implement in subclasses\n  //\t- t [0 .. 1]\n  getPoint: function ()\n  /* t, optionalTarget */\n  {\n    console.warn('THREE.Curve: .getPoint() not implemented.');\n    return null;\n  },\n  // Get point at relative position in curve according to arc length\n  // - u [0 .. 1]\n  getPointAt: function (u, optionalTarget) {\n    var t = this.getUtoTmapping(u);\n    return this.getPoint(t, optionalTarget);\n  },\n  // Get sequence of points using getPoint( t )\n  getPoints: function (divisions) {\n    if (divisions === undefined) divisions = 5;\n    var points = [];\n\n    for (var d = 0; d <= divisions; d++) {\n      points.push(this.getPoint(d / divisions));\n    }\n\n    return points;\n  },\n  // Get sequence of points using getPointAt( u )\n  getSpacedPoints: function (divisions) {\n    if (divisions === undefined) divisions = 5;\n    var points = [];\n\n    for (var d = 0; d <= divisions; d++) {\n      points.push(this.getPointAt(d / divisions));\n    }\n\n    return points;\n  },\n  // Get total curve arc length\n  getLength: function () {\n    var lengths = this.getLengths();\n    return lengths[lengths.length - 1];\n  },\n  // Get list of cumulative segment lengths\n  getLengths: function (divisions) {\n    if (divisions === undefined) divisions = this.arcLengthDivisions;\n\n    if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n      return this.cacheArcLengths;\n    }\n\n    this.needsUpdate = false;\n    var cache = [];\n    var current,\n        last = this.getPoint(0);\n    var p,\n        sum = 0;\n    cache.push(0);\n\n    for (p = 1; p <= divisions; p++) {\n      current = this.getPoint(p / divisions);\n      sum += current.distanceTo(last);\n      cache.push(sum);\n      last = current;\n    }\n\n    this.cacheArcLengths = cache;\n    return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n  },\n  updateArcLengths: function () {\n    this.needsUpdate = true;\n    this.getLengths();\n  },\n  // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n  getUtoTmapping: function (u, distance) {\n    var arcLengths = this.getLengths();\n    var i = 0,\n        il = arcLengths.length;\n    var targetArcLength; // The targeted u distance value to get\n\n    if (distance) {\n      targetArcLength = distance;\n    } else {\n      targetArcLength = u * arcLengths[il - 1];\n    } // binary search for the index with largest value smaller than target u distance\n\n\n    var low = 0,\n        high = il - 1,\n        comparison;\n\n    while (low <= high) {\n      i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n      comparison = arcLengths[i] - targetArcLength;\n\n      if (comparison < 0) {\n        low = i + 1;\n      } else if (comparison > 0) {\n        high = i - 1;\n      } else {\n        high = i;\n        break; // DONE\n      }\n    }\n\n    i = high;\n\n    if (arcLengths[i] === targetArcLength) {\n      return i / (il - 1);\n    } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n    var lengthBefore = arcLengths[i];\n    var lengthAfter = arcLengths[i + 1];\n    var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n    var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n    var t = (i + segmentFraction) / (il - 1);\n    return t;\n  },\n  // Returns a unit vector tangent at t\n  // In case any sub curve does not implement its tangent derivation,\n  // 2 points a small delta apart will be used to find its gradient\n  // which seems to give a reasonable approximation\n  getTangent: function (t) {\n    var delta = 0.0001;\n    var t1 = t - delta;\n    var t2 = t + delta; // Capping in case of danger\n\n    if (t1 < 0) t1 = 0;\n    if (t2 > 1) t2 = 1;\n    var pt1 = this.getPoint(t1);\n    var pt2 = this.getPoint(t2);\n    var vec = pt2.clone().sub(pt1);\n    return vec.normalize();\n  },\n  getTangentAt: function (u) {\n    var t = this.getUtoTmapping(u);\n    return this.getTangent(t);\n  },\n  computeFrenetFrames: function (segments, closed) {\n    // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n    var normal = new Vector3();\n    var tangents = [];\n    var normals = [];\n    var binormals = [];\n    var vec = new Vector3();\n    var mat = new Matrix4();\n    var i, u, theta; // compute the tangent vectors for each segment on the curve\n\n    for (i = 0; i <= segments; i++) {\n      u = i / segments;\n      tangents[i] = this.getTangentAt(u);\n      tangents[i].normalize();\n    } // select an initial normal vector perpendicular to the first tangent vector,\n    // and in the direction of the minimum tangent xyz component\n\n\n    normals[0] = new Vector3();\n    binormals[0] = new Vector3();\n    var min = Number.MAX_VALUE;\n    var tx = Math.abs(tangents[0].x);\n    var ty = Math.abs(tangents[0].y);\n    var tz = Math.abs(tangents[0].z);\n\n    if (tx <= min) {\n      min = tx;\n      normal.set(1, 0, 0);\n    }\n\n    if (ty <= min) {\n      min = ty;\n      normal.set(0, 1, 0);\n    }\n\n    if (tz <= min) {\n      normal.set(0, 0, 1);\n    }\n\n    vec.crossVectors(tangents[0], normal).normalize();\n    normals[0].crossVectors(tangents[0], vec);\n    binormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n    for (i = 1; i <= segments; i++) {\n      normals[i] = normals[i - 1].clone();\n      binormals[i] = binormals[i - 1].clone();\n      vec.crossVectors(tangents[i - 1], tangents[i]);\n\n      if (vec.length() > Number.EPSILON) {\n        vec.normalize();\n        theta = Math.acos(_Math.clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n        normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n      }\n\n      binormals[i].crossVectors(tangents[i], normals[i]);\n    } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n    if (closed === true) {\n      theta = Math.acos(_Math.clamp(normals[0].dot(normals[segments]), -1, 1));\n      theta /= segments;\n\n      if (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n        theta = -theta;\n      }\n\n      for (i = 1; i <= segments; i++) {\n        // twist a little...\n        normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n        binormals[i].crossVectors(tangents[i], normals[i]);\n      }\n    }\n\n    return {\n      tangents: tangents,\n      normals: normals,\n      binormals: binormals\n    };\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (source) {\n    this.arcLengthDivisions = source.arcLengthDivisions;\n    return this;\n  },\n  toJSON: function () {\n    var data = {\n      metadata: {\n        version: 4.5,\n        type: 'Curve',\n        generator: 'Curve.toJSON'\n      }\n    };\n    data.arcLengthDivisions = this.arcLengthDivisions;\n    data.type = this.type;\n    return data;\n  },\n  fromJSON: function (json) {\n    this.arcLengthDivisions = json.arcLengthDivisions;\n    return this;\n  }\n});\n\nfunction EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n  Curve.call(this);\n  this.type = 'EllipseCurve';\n  this.aX = aX || 0;\n  this.aY = aY || 0;\n  this.xRadius = xRadius || 1;\n  this.yRadius = yRadius || 1;\n  this.aStartAngle = aStartAngle || 0;\n  this.aEndAngle = aEndAngle || 2 * Math.PI;\n  this.aClockwise = aClockwise || false;\n  this.aRotation = aRotation || 0;\n}\n\nEllipseCurve.prototype = Object.create(Curve.prototype);\nEllipseCurve.prototype.constructor = EllipseCurve;\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector2();\n  var twoPi = Math.PI * 2;\n  var deltaAngle = this.aEndAngle - this.aStartAngle;\n  var samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n  while (deltaAngle < 0) deltaAngle += twoPi;\n\n  while (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n  if (deltaAngle < Number.EPSILON) {\n    if (samePoints) {\n      deltaAngle = 0;\n    } else {\n      deltaAngle = twoPi;\n    }\n  }\n\n  if (this.aClockwise === true && !samePoints) {\n    if (deltaAngle === twoPi) {\n      deltaAngle = -twoPi;\n    } else {\n      deltaAngle = deltaAngle - twoPi;\n    }\n  }\n\n  var angle = this.aStartAngle + t * deltaAngle;\n  var x = this.aX + this.xRadius * Math.cos(angle);\n  var y = this.aY + this.yRadius * Math.sin(angle);\n\n  if (this.aRotation !== 0) {\n    var cos = Math.cos(this.aRotation);\n    var sin = Math.sin(this.aRotation);\n    var tx = x - this.aX;\n    var ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n    x = tx * cos - ty * sin + this.aX;\n    y = tx * sin + ty * cos + this.aY;\n  }\n\n  return point.set(x, y);\n};\n\nEllipseCurve.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.aX = source.aX;\n  this.aY = source.aY;\n  this.xRadius = source.xRadius;\n  this.yRadius = source.yRadius;\n  this.aStartAngle = source.aStartAngle;\n  this.aEndAngle = source.aEndAngle;\n  this.aClockwise = source.aClockwise;\n  this.aRotation = source.aRotation;\n  return this;\n};\n\nEllipseCurve.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.aX = this.aX;\n  data.aY = this.aY;\n  data.xRadius = this.xRadius;\n  data.yRadius = this.yRadius;\n  data.aStartAngle = this.aStartAngle;\n  data.aEndAngle = this.aEndAngle;\n  data.aClockwise = this.aClockwise;\n  data.aRotation = this.aRotation;\n  return data;\n};\n\nEllipseCurve.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.aX = json.aX;\n  this.aY = json.aY;\n  this.xRadius = json.xRadius;\n  this.yRadius = json.yRadius;\n  this.aStartAngle = json.aStartAngle;\n  this.aEndAngle = json.aEndAngle;\n  this.aClockwise = json.aClockwise;\n  this.aRotation = json.aRotation;\n  return this;\n};\n\nfunction ArcCurve(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n  EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n  this.type = 'ArcCurve';\n}\n\nArcCurve.prototype = Object.create(EllipseCurve.prototype);\nArcCurve.prototype.constructor = ArcCurve;\nArcCurve.prototype.isArcCurve = true;\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n  var c0 = 0,\n      c1 = 0,\n      c2 = 0,\n      c3 = 0;\n  /*\n   * Compute coefficients for a cubic polynomial\n   *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n   * such that\n   *   p(0) = x0, p(1) = x1\n   *  and\n   *   p'(0) = t0, p'(1) = t1.\n   */\n\n  function init(x0, x1, t0, t1) {\n    c0 = x0;\n    c1 = t0;\n    c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n    c3 = 2 * x0 - 2 * x1 + t0 + t1;\n  }\n\n  return {\n    initCatmullRom: function (x0, x1, x2, x3, tension) {\n      init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n    },\n    initNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n      // compute tangents when parameterized in [t1,t2]\n      var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n      var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n      t1 *= dt1;\n      t2 *= dt1;\n      init(x1, x2, t1, t2);\n    },\n    calc: function (t) {\n      var t2 = t * t;\n      var t3 = t2 * t;\n      return c0 + c1 * t + c2 * t2 + c3 * t3;\n    }\n  };\n} //\n\n\nvar tmp = new Vector3();\nvar px = new CubicPoly();\nvar py = new CubicPoly();\nvar pz = new CubicPoly();\n\nfunction CatmullRomCurve3(points, closed, curveType, tension) {\n  Curve.call(this);\n  this.type = 'CatmullRomCurve3';\n  this.points = points || [];\n  this.closed = closed || false;\n  this.curveType = curveType || 'centripetal';\n  this.tension = tension || 0.5;\n}\n\nCatmullRomCurve3.prototype = Object.create(Curve.prototype);\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector3();\n  var points = this.points;\n  var l = points.length;\n  var p = (l - (this.closed ? 0 : 1)) * t;\n  var intPoint = Math.floor(p);\n  var weight = p - intPoint;\n\n  if (this.closed) {\n    intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n  } else if (weight === 0 && intPoint === l - 1) {\n    intPoint = l - 2;\n    weight = 1;\n  }\n\n  var p0, p1, p2, p3; // 4 points\n\n  if (this.closed || intPoint > 0) {\n    p0 = points[(intPoint - 1) % l];\n  } else {\n    // extrapolate first point\n    tmp.subVectors(points[0], points[1]).add(points[0]);\n    p0 = tmp;\n  }\n\n  p1 = points[intPoint % l];\n  p2 = points[(intPoint + 1) % l];\n\n  if (this.closed || intPoint + 2 < l) {\n    p3 = points[(intPoint + 2) % l];\n  } else {\n    // extrapolate last point\n    tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n    p3 = tmp;\n  }\n\n  if (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n    // init Centripetal / Chordal Catmull-Rom\n    var pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n    var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n    var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n    var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n    if (dt1 < 1e-4) dt1 = 1.0;\n    if (dt0 < 1e-4) dt0 = dt1;\n    if (dt2 < 1e-4) dt2 = dt1;\n    px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n    py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n    pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n  } else if (this.curveType === 'catmullrom') {\n    px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n    py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n    pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n  }\n\n  point.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n  return point;\n};\n\nCatmullRomCurve3.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.points = [];\n\n  for (var i = 0, l = source.points.length; i < l; i++) {\n    var point = source.points[i];\n    this.points.push(point.clone());\n  }\n\n  this.closed = source.closed;\n  this.curveType = source.curveType;\n  this.tension = source.tension;\n  return this;\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.points = [];\n\n  for (var i = 0, l = this.points.length; i < l; i++) {\n    var point = this.points[i];\n    data.points.push(point.toArray());\n  }\n\n  data.closed = this.closed;\n  data.curveType = this.curveType;\n  data.tension = this.tension;\n  return data;\n};\n\nCatmullRomCurve3.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.points = [];\n\n  for (var i = 0, l = json.points.length; i < l; i++) {\n    var point = json.points[i];\n    this.points.push(new Vector3().fromArray(point));\n  }\n\n  this.closed = json.closed;\n  this.curveType = json.curveType;\n  this.tension = json.tension;\n  return this;\n};\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\n\nfunction CatmullRom(t, p0, p1, p2, p3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  var t2 = t * t;\n  var t3 = t * t2;\n  return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n} //\n\n\nfunction QuadraticBezierP0(t, p) {\n  var k = 1 - t;\n  return k * k * p;\n}\n\nfunction QuadraticBezierP1(t, p) {\n  return 2 * (1 - t) * t * p;\n}\n\nfunction QuadraticBezierP2(t, p) {\n  return t * t * p;\n}\n\nfunction QuadraticBezier(t, p0, p1, p2) {\n  return QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n} //\n\n\nfunction CubicBezierP0(t, p) {\n  var k = 1 - t;\n  return k * k * k * p;\n}\n\nfunction CubicBezierP1(t, p) {\n  var k = 1 - t;\n  return 3 * k * k * t * p;\n}\n\nfunction CubicBezierP2(t, p) {\n  return 3 * (1 - t) * t * t * p;\n}\n\nfunction CubicBezierP3(t, p) {\n  return t * t * t * p;\n}\n\nfunction CubicBezier(t, p0, p1, p2, p3) {\n  return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n}\n\nfunction CubicBezierCurve(v0, v1, v2, v3) {\n  Curve.call(this);\n  this.type = 'CubicBezierCurve';\n  this.v0 = v0 || new Vector2();\n  this.v1 = v1 || new Vector2();\n  this.v2 = v2 || new Vector2();\n  this.v3 = v3 || new Vector2();\n}\n\nCubicBezierCurve.prototype = Object.create(Curve.prototype);\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector2();\n  var v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2,\n      v3 = this.v3;\n  point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n  return point;\n};\n\nCubicBezierCurve.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.v0.copy(source.v0);\n  this.v1.copy(source.v1);\n  this.v2.copy(source.v2);\n  this.v3.copy(source.v3);\n  return this;\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.v0 = this.v0.toArray();\n  data.v1 = this.v1.toArray();\n  data.v2 = this.v2.toArray();\n  data.v3 = this.v3.toArray();\n  return data;\n};\n\nCubicBezierCurve.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.v0.fromArray(json.v0);\n  this.v1.fromArray(json.v1);\n  this.v2.fromArray(json.v2);\n  this.v3.fromArray(json.v3);\n  return this;\n};\n\nfunction CubicBezierCurve3(v0, v1, v2, v3) {\n  Curve.call(this);\n  this.type = 'CubicBezierCurve3';\n  this.v0 = v0 || new Vector3();\n  this.v1 = v1 || new Vector3();\n  this.v2 = v2 || new Vector3();\n  this.v3 = v3 || new Vector3();\n}\n\nCubicBezierCurve3.prototype = Object.create(Curve.prototype);\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector3();\n  var v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2,\n      v3 = this.v3;\n  point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n  return point;\n};\n\nCubicBezierCurve3.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.v0.copy(source.v0);\n  this.v1.copy(source.v1);\n  this.v2.copy(source.v2);\n  this.v3.copy(source.v3);\n  return this;\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.v0 = this.v0.toArray();\n  data.v1 = this.v1.toArray();\n  data.v2 = this.v2.toArray();\n  data.v3 = this.v3.toArray();\n  return data;\n};\n\nCubicBezierCurve3.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.v0.fromArray(json.v0);\n  this.v1.fromArray(json.v1);\n  this.v2.fromArray(json.v2);\n  this.v3.fromArray(json.v3);\n  return this;\n};\n\nfunction LineCurve(v1, v2) {\n  Curve.call(this);\n  this.type = 'LineCurve';\n  this.v1 = v1 || new Vector2();\n  this.v2 = v2 || new Vector2();\n}\n\nLineCurve.prototype = Object.create(Curve.prototype);\nLineCurve.prototype.constructor = LineCurve;\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector2();\n\n  if (t === 1) {\n    point.copy(this.v2);\n  } else {\n    point.copy(this.v2).sub(this.v1);\n    point.multiplyScalar(t).add(this.v1);\n  }\n\n  return point;\n}; // Line curve is linear, so we can overwrite default getPointAt\n\n\nLineCurve.prototype.getPointAt = function (u, optionalTarget) {\n  return this.getPoint(u, optionalTarget);\n};\n\nLineCurve.prototype.getTangent = function ()\n/* t */\n{\n  var tangent = this.v2.clone().sub(this.v1);\n  return tangent.normalize();\n};\n\nLineCurve.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.v1.copy(source.v1);\n  this.v2.copy(source.v2);\n  return this;\n};\n\nLineCurve.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.v1 = this.v1.toArray();\n  data.v2 = this.v2.toArray();\n  return data;\n};\n\nLineCurve.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.v1.fromArray(json.v1);\n  this.v2.fromArray(json.v2);\n  return this;\n};\n\nfunction LineCurve3(v1, v2) {\n  Curve.call(this);\n  this.type = 'LineCurve3';\n  this.v1 = v1 || new Vector3();\n  this.v2 = v2 || new Vector3();\n}\n\nLineCurve3.prototype = Object.create(Curve.prototype);\nLineCurve3.prototype.constructor = LineCurve3;\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector3();\n\n  if (t === 1) {\n    point.copy(this.v2);\n  } else {\n    point.copy(this.v2).sub(this.v1);\n    point.multiplyScalar(t).add(this.v1);\n  }\n\n  return point;\n}; // Line curve is linear, so we can overwrite default getPointAt\n\n\nLineCurve3.prototype.getPointAt = function (u, optionalTarget) {\n  return this.getPoint(u, optionalTarget);\n};\n\nLineCurve3.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.v1.copy(source.v1);\n  this.v2.copy(source.v2);\n  return this;\n};\n\nLineCurve3.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.v1 = this.v1.toArray();\n  data.v2 = this.v2.toArray();\n  return data;\n};\n\nLineCurve3.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.v1.fromArray(json.v1);\n  this.v2.fromArray(json.v2);\n  return this;\n};\n\nfunction QuadraticBezierCurve(v0, v1, v2) {\n  Curve.call(this);\n  this.type = 'QuadraticBezierCurve';\n  this.v0 = v0 || new Vector2();\n  this.v1 = v1 || new Vector2();\n  this.v2 = v2 || new Vector2();\n}\n\nQuadraticBezierCurve.prototype = Object.create(Curve.prototype);\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector2();\n  var v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2;\n  point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n  return point;\n};\n\nQuadraticBezierCurve.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.v0.copy(source.v0);\n  this.v1.copy(source.v1);\n  this.v2.copy(source.v2);\n  return this;\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.v0 = this.v0.toArray();\n  data.v1 = this.v1.toArray();\n  data.v2 = this.v2.toArray();\n  return data;\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.v0.fromArray(json.v0);\n  this.v1.fromArray(json.v1);\n  this.v2.fromArray(json.v2);\n  return this;\n};\n\nfunction QuadraticBezierCurve3(v0, v1, v2) {\n  Curve.call(this);\n  this.type = 'QuadraticBezierCurve3';\n  this.v0 = v0 || new Vector3();\n  this.v1 = v1 || new Vector3();\n  this.v2 = v2 || new Vector3();\n}\n\nQuadraticBezierCurve3.prototype = Object.create(Curve.prototype);\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector3();\n  var v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2;\n  point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n  return point;\n};\n\nQuadraticBezierCurve3.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.v0.copy(source.v0);\n  this.v1.copy(source.v1);\n  this.v2.copy(source.v2);\n  return this;\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.v0 = this.v0.toArray();\n  data.v1 = this.v1.toArray();\n  data.v2 = this.v2.toArray();\n  return data;\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.v0.fromArray(json.v0);\n  this.v1.fromArray(json.v1);\n  this.v2.fromArray(json.v2);\n  return this;\n};\n\nfunction SplineCurve(points\n/* array of Vector2 */\n) {\n  Curve.call(this);\n  this.type = 'SplineCurve';\n  this.points = points || [];\n}\n\nSplineCurve.prototype = Object.create(Curve.prototype);\nSplineCurve.prototype.constructor = SplineCurve;\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function (t, optionalTarget) {\n  var point = optionalTarget || new Vector2();\n  var points = this.points;\n  var p = (points.length - 1) * t;\n  var intPoint = Math.floor(p);\n  var weight = p - intPoint;\n  var p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n  var p1 = points[intPoint];\n  var p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n  var p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n  point.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n  return point;\n};\n\nSplineCurve.prototype.copy = function (source) {\n  Curve.prototype.copy.call(this, source);\n  this.points = [];\n\n  for (var i = 0, l = source.points.length; i < l; i++) {\n    var point = source.points[i];\n    this.points.push(point.clone());\n  }\n\n  return this;\n};\n\nSplineCurve.prototype.toJSON = function () {\n  var data = Curve.prototype.toJSON.call(this);\n  data.points = [];\n\n  for (var i = 0, l = this.points.length; i < l; i++) {\n    var point = this.points[i];\n    data.points.push(point.toArray());\n  }\n\n  return data;\n};\n\nSplineCurve.prototype.fromJSON = function (json) {\n  Curve.prototype.fromJSON.call(this, json);\n  this.points = [];\n\n  for (var i = 0, l = json.points.length; i < l; i++) {\n    var point = json.points[i];\n    this.points.push(new Vector2().fromArray(point));\n  }\n\n  return this;\n};\n\nvar Curves = /*#__PURE__*/Object.freeze({\n  ArcCurve: ArcCurve,\n  CatmullRomCurve3: CatmullRomCurve3,\n  CubicBezierCurve: CubicBezierCurve,\n  CubicBezierCurve3: CubicBezierCurve3,\n  EllipseCurve: EllipseCurve,\n  LineCurve: LineCurve,\n  LineCurve3: LineCurve3,\n  QuadraticBezierCurve: QuadraticBezierCurve,\n  QuadraticBezierCurve3: QuadraticBezierCurve3,\n  SplineCurve: SplineCurve\n});\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n  Curve.call(this);\n  this.type = 'CurvePath';\n  this.curves = [];\n  this.autoClose = false; // Automatically closes the path\n}\n\nCurvePath.prototype = Object.assign(Object.create(Curve.prototype), {\n  constructor: CurvePath,\n  add: function (curve) {\n    this.curves.push(curve);\n  },\n  closePath: function () {\n    // Add a line curve if start and end of lines are not connected\n    var startPoint = this.curves[0].getPoint(0);\n    var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n    if (!startPoint.equals(endPoint)) {\n      this.curves.push(new LineCurve(endPoint, startPoint));\n    }\n  },\n  // To get accurate point with reference to\n  // entire path distance at time t,\n  // following has to be done:\n  // 1. Length of each sub path have to be known\n  // 2. Locate and identify type of curve\n  // 3. Get t for the curve\n  // 4. Return curve.getPointAt(t')\n  getPoint: function (t) {\n    var d = t * this.getLength();\n    var curveLengths = this.getCurveLengths();\n    var i = 0; // To think about boundaries points.\n\n    while (i < curveLengths.length) {\n      if (curveLengths[i] >= d) {\n        var diff = curveLengths[i] - d;\n        var curve = this.curves[i];\n        var segmentLength = curve.getLength();\n        var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n        return curve.getPointAt(u);\n      }\n\n      i++;\n    }\n\n    return null; // loop where sum != 0, sum > d , sum+1 <d\n  },\n  // We cannot use the default THREE.Curve getPoint() with getLength() because in\n  // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n  // getPoint() depends on getLength\n  getLength: function () {\n    var lens = this.getCurveLengths();\n    return lens[lens.length - 1];\n  },\n  // cacheLengths must be recalculated.\n  updateArcLengths: function () {\n    this.needsUpdate = true;\n    this.cacheLengths = null;\n    this.getCurveLengths();\n  },\n  // Compute lengths and cache them\n  // We cannot overwrite getLengths() because UtoT mapping uses it.\n  getCurveLengths: function () {\n    // We use cache values if curves and cache array are same length\n    if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n      return this.cacheLengths;\n    } // Get length of sub-curve\n    // Push sums into cached array\n\n\n    var lengths = [],\n        sums = 0;\n\n    for (var i = 0, l = this.curves.length; i < l; i++) {\n      sums += this.curves[i].getLength();\n      lengths.push(sums);\n    }\n\n    this.cacheLengths = lengths;\n    return lengths;\n  },\n  getSpacedPoints: function (divisions) {\n    if (divisions === undefined) divisions = 40;\n    var points = [];\n\n    for (var i = 0; i <= divisions; i++) {\n      points.push(this.getPoint(i / divisions));\n    }\n\n    if (this.autoClose) {\n      points.push(points[0]);\n    }\n\n    return points;\n  },\n  getPoints: function (divisions) {\n    divisions = divisions || 12;\n    var points = [],\n        last;\n\n    for (var i = 0, curves = this.curves; i < curves.length; i++) {\n      var curve = curves[i];\n      var resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n      var pts = curve.getPoints(resolution);\n\n      for (var j = 0; j < pts.length; j++) {\n        var point = pts[j];\n        if (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n        points.push(point);\n        last = point;\n      }\n    }\n\n    if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n      points.push(points[0]);\n    }\n\n    return points;\n  },\n  copy: function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.curves = [];\n\n    for (var i = 0, l = source.curves.length; i < l; i++) {\n      var curve = source.curves[i];\n      this.curves.push(curve.clone());\n    }\n\n    this.autoClose = source.autoClose;\n    return this;\n  },\n  toJSON: function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.autoClose = this.autoClose;\n    data.curves = [];\n\n    for (var i = 0, l = this.curves.length; i < l; i++) {\n      var curve = this.curves[i];\n      data.curves.push(curve.toJSON());\n    }\n\n    return data;\n  },\n  fromJSON: function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.autoClose = json.autoClose;\n    this.curves = [];\n\n    for (var i = 0, l = json.curves.length; i < l; i++) {\n      var curve = json.curves[i];\n      this.curves.push(new Curves[curve.type]().fromJSON(curve));\n    }\n\n    return this;\n  }\n});\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path(points) {\n  CurvePath.call(this);\n  this.type = 'Path';\n  this.currentPoint = new Vector2();\n\n  if (points) {\n    this.setFromPoints(points);\n  }\n}\n\nPath.prototype = Object.assign(Object.create(CurvePath.prototype), {\n  constructor: Path,\n  setFromPoints: function (points) {\n    this.moveTo(points[0].x, points[0].y);\n\n    for (var i = 1, l = points.length; i < l; i++) {\n      this.lineTo(points[i].x, points[i].y);\n    }\n  },\n  moveTo: function (x, y) {\n    this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n  },\n  lineTo: function (x, y) {\n    var curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n    this.curves.push(curve);\n    this.currentPoint.set(x, y);\n  },\n  quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n    var curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n    this.curves.push(curve);\n    this.currentPoint.set(aX, aY);\n  },\n  bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n    var curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n    this.curves.push(curve);\n    this.currentPoint.set(aX, aY);\n  },\n  splineThru: function (pts\n  /*Array of Vector*/\n  ) {\n    var npts = [this.currentPoint.clone()].concat(pts);\n    var curve = new SplineCurve(npts);\n    this.curves.push(curve);\n    this.currentPoint.copy(pts[pts.length - 1]);\n  },\n  arc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    var x0 = this.currentPoint.x;\n    var y0 = this.currentPoint.y;\n    this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n  },\n  absarc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n  },\n  ellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    var x0 = this.currentPoint.x;\n    var y0 = this.currentPoint.y;\n    this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n  },\n  absellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    var curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n    if (this.curves.length > 0) {\n      // if a previous curve is present, attempt to join\n      var firstPoint = curve.getPoint(0);\n\n      if (!firstPoint.equals(this.currentPoint)) {\n        this.lineTo(firstPoint.x, firstPoint.y);\n      }\n    }\n\n    this.curves.push(curve);\n    var lastPoint = curve.getPoint(1);\n    this.currentPoint.copy(lastPoint);\n  },\n  copy: function (source) {\n    CurvePath.prototype.copy.call(this, source);\n    this.currentPoint.copy(source.currentPoint);\n    return this;\n  },\n  toJSON: function () {\n    var data = CurvePath.prototype.toJSON.call(this);\n    data.currentPoint = this.currentPoint.toArray();\n    return data;\n  },\n  fromJSON: function (json) {\n    CurvePath.prototype.fromJSON.call(this, json);\n    this.currentPoint.fromArray(json.currentPoint);\n    return this;\n  }\n});\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape(points) {\n  Path.call(this, points);\n  this.uuid = _Math.generateUUID();\n  this.type = 'Shape';\n  this.holes = [];\n}\n\nShape.prototype = Object.assign(Object.create(Path.prototype), {\n  constructor: Shape,\n  getPointsHoles: function (divisions) {\n    var holesPts = [];\n\n    for (var i = 0, l = this.holes.length; i < l; i++) {\n      holesPts[i] = this.holes[i].getPoints(divisions);\n    }\n\n    return holesPts;\n  },\n  // get points of shape and holes (keypoints based on segments parameter)\n  extractPoints: function (divisions) {\n    return {\n      shape: this.getPoints(divisions),\n      holes: this.getPointsHoles(divisions)\n    };\n  },\n  copy: function (source) {\n    Path.prototype.copy.call(this, source);\n    this.holes = [];\n\n    for (var i = 0, l = source.holes.length; i < l; i++) {\n      var hole = source.holes[i];\n      this.holes.push(hole.clone());\n    }\n\n    return this;\n  },\n  toJSON: function () {\n    var data = Path.prototype.toJSON.call(this);\n    data.uuid = this.uuid;\n    data.holes = [];\n\n    for (var i = 0, l = this.holes.length; i < l; i++) {\n      var hole = this.holes[i];\n      data.holes.push(hole.toJSON());\n    }\n\n    return data;\n  },\n  fromJSON: function (json) {\n    Path.prototype.fromJSON.call(this, json);\n    this.uuid = json.uuid;\n    this.holes = [];\n\n    for (var i = 0, l = json.holes.length; i < l; i++) {\n      var hole = json.holes[i];\n      this.holes.push(new Path().fromJSON(hole));\n    }\n\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light(color, intensity) {\n  Object3D.call(this);\n  this.type = 'Light';\n  this.color = new Color(color);\n  this.intensity = intensity !== undefined ? intensity : 1;\n  this.receiveShadow = undefined;\n}\n\nLight.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Light,\n  isLight: true,\n  copy: function (source) {\n    Object3D.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.intensity = source.intensity;\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = Object3D.prototype.toJSON.call(this, meta);\n    data.object.color = this.color.getHex();\n    data.object.intensity = this.intensity;\n    if (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n    if (this.distance !== undefined) data.object.distance = this.distance;\n    if (this.angle !== undefined) data.object.angle = this.angle;\n    if (this.decay !== undefined) data.object.decay = this.decay;\n    if (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n    if (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n    return data;\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight(skyColor, groundColor, intensity) {\n  Light.call(this, skyColor, intensity);\n  this.type = 'HemisphereLight';\n  this.castShadow = undefined;\n  this.position.copy(Object3D.DefaultUp);\n  this.updateMatrix();\n  this.groundColor = new Color(groundColor);\n}\n\nHemisphereLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: HemisphereLight,\n  isHemisphereLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.groundColor.copy(source.groundColor);\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow(camera) {\n  this.camera = camera;\n  this.bias = 0;\n  this.radius = 1;\n  this.mapSize = new Vector2(512, 512);\n  this.map = null;\n  this.matrix = new Matrix4();\n}\n\nObject.assign(LightShadow.prototype, {\n  copy: function (source) {\n    this.camera = source.camera.clone();\n    this.bias = source.bias;\n    this.radius = source.radius;\n    this.mapSize.copy(source.mapSize);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  toJSON: function () {\n    var object = {};\n    if (this.bias !== 0) object.bias = this.bias;\n    if (this.radius !== 1) object.radius = this.radius;\n    if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n    object.camera = this.camera.toJSON(false).object;\n    delete object.camera.matrix;\n    return object;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n  LightShadow.call(this, new PerspectiveCamera(50, 1, 0.5, 500));\n}\n\nSpotLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n  constructor: SpotLightShadow,\n  isSpotLightShadow: true,\n  update: function (light) {\n    var camera = this.camera;\n    var fov = _Math.RAD2DEG * 2 * light.angle;\n    var aspect = this.mapSize.width / this.mapSize.height;\n    var far = light.distance || camera.far;\n\n    if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n      camera.fov = fov;\n      camera.aspect = aspect;\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight(color, intensity, distance, angle, penumbra, decay) {\n  Light.call(this, color, intensity);\n  this.type = 'SpotLight';\n  this.position.copy(Object3D.DefaultUp);\n  this.updateMatrix();\n  this.target = new Object3D();\n  Object.defineProperty(this, 'power', {\n    get: function () {\n      // intensity = power per solid angle.\n      // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n      return this.intensity * Math.PI;\n    },\n    set: function (power) {\n      // intensity = power per solid angle.\n      // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n      this.intensity = power / Math.PI;\n    }\n  });\n  this.distance = distance !== undefined ? distance : 0;\n  this.angle = angle !== undefined ? angle : Math.PI / 3;\n  this.penumbra = penumbra !== undefined ? penumbra : 0;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n  this.shadow = new SpotLightShadow();\n}\n\nSpotLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: SpotLight,\n  isSpotLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.distance = source.distance;\n    this.angle = source.angle;\n    this.penumbra = source.penumbra;\n    this.decay = source.decay;\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLight(color, intensity, distance, decay) {\n  Light.call(this, color, intensity);\n  this.type = 'PointLight';\n  Object.defineProperty(this, 'power', {\n    get: function () {\n      // intensity = power per solid angle.\n      // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n      return this.intensity * 4 * Math.PI;\n    },\n    set: function (power) {\n      // intensity = power per solid angle.\n      // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n      this.intensity = power / (4 * Math.PI);\n    }\n  });\n  this.distance = distance !== undefined ? distance : 0;\n  this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n  this.shadow = new LightShadow(new PerspectiveCamera(90, 1, 0.5, 500));\n}\n\nPointLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: PointLight,\n  isPointLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.distance = source.distance;\n    this.decay = source.decay;\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow() {\n  LightShadow.call(this, new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n}\n\nDirectionalLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n  constructor: DirectionalLightShadow\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight(color, intensity) {\n  Light.call(this, color, intensity);\n  this.type = 'DirectionalLight';\n  this.position.copy(Object3D.DefaultUp);\n  this.updateMatrix();\n  this.target = new Object3D();\n  this.shadow = new DirectionalLightShadow();\n}\n\nDirectionalLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: DirectionalLight,\n  isDirectionalLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.target = source.target.clone();\n    this.shadow = source.shadow.clone();\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight(color, intensity) {\n  Light.call(this, color, intensity);\n  this.type = 'AmbientLight';\n  this.castShadow = undefined;\n}\n\nAmbientLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: AmbientLight,\n  isAmbientLight: true\n});\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight(color, intensity, width, height) {\n  Light.call(this, color, intensity);\n  this.type = 'RectAreaLight';\n  this.width = width !== undefined ? width : 10;\n  this.height = height !== undefined ? height : 10;\n}\n\nRectAreaLight.prototype = Object.assign(Object.create(Light.prototype), {\n  constructor: RectAreaLight,\n  isRectAreaLight: true,\n  copy: function (source) {\n    Light.prototype.copy.call(this, source);\n    this.width = source.width;\n    this.height = source.height;\n    return this;\n  },\n  toJSON: function (meta) {\n    var data = Light.prototype.toJSON.call(this, meta);\n    data.object.width = this.width;\n    data.object.height = this.height;\n    return data;\n  }\n});\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrack.call(this, name, times, values, interpolation);\n}\n\nStringKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: StringKeyframeTrack,\n  ValueTypeName: 'string',\n  ValueBufferType: Array,\n  DefaultInterpolation: InterpolateDiscrete,\n  InterpolantFactoryMethodLinear: undefined,\n  InterpolantFactoryMethodSmooth: undefined\n});\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack(name, times, values) {\n  KeyframeTrack.call(this, name, times, values);\n}\n\nBooleanKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: BooleanKeyframeTrack,\n  ValueTypeName: 'bool',\n  ValueBufferType: Array,\n  DefaultInterpolation: InterpolateDiscrete,\n  InterpolantFactoryMethodLinear: undefined,\n  InterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed\n  // representation of a single value and a custom interpolant that\n  // computes \"firstValue ^ isOdd( index )\".\n\n});\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  this.parameterPositions = parameterPositions;\n  this._cachedIndex = 0;\n  this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n  this.sampleValues = sampleValues;\n  this.valueSize = sampleSize;\n}\n\nObject.assign(Interpolant.prototype, {\n  evaluate: function (t) {\n    var pp = this.parameterPositions,\n        i1 = this._cachedIndex,\n        t1 = pp[i1],\n        t0 = pp[i1 - 1];\n\n    validate_interval: {\n      seek: {\n        var right;\n\n        linear_scan: {\n          //- See http://jsperf.com/comparison-to-undefined/3\n          //- slower code:\n          //-\n          //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n          forward_scan: if (!(t < t1)) {\n            for (var giveUpAt = i1 + 2;;) {\n              if (t1 === undefined) {\n                if (t < t0) break forward_scan; // after end\n\n                i1 = pp.length;\n                this._cachedIndex = i1;\n                return this.afterEnd_(i1 - 1, t, t0);\n              }\n\n              if (i1 === giveUpAt) break; // this loop\n\n              t0 = t1;\n              t1 = pp[++i1];\n\n              if (t < t1) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            } // prepare binary search on the right side of the index\n\n\n            right = pp.length;\n            break linear_scan;\n          } //- slower code:\n          //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n          if (!(t >= t0)) {\n            // looping?\n            var t1global = pp[1];\n\n            if (t < t1global) {\n              i1 = 2; // + 1, using the scan for the details\n\n              t0 = t1global;\n            } // linear reverse scan\n\n\n            for (var giveUpAt = i1 - 2;;) {\n              if (t0 === undefined) {\n                // before start\n                this._cachedIndex = 0;\n                return this.beforeStart_(0, t, t1);\n              }\n\n              if (i1 === giveUpAt) break; // this loop\n\n              t1 = t0;\n              t0 = pp[--i1 - 1];\n\n              if (t >= t0) {\n                // we have arrived at the sought interval\n                break seek;\n              }\n            } // prepare binary search on the left side of the index\n\n\n            right = i1;\n            i1 = 0;\n            break linear_scan;\n          } // the interval is valid\n\n\n          break validate_interval;\n        } // linear scan\n        // binary search\n\n\n        while (i1 < right) {\n          var mid = i1 + right >>> 1;\n\n          if (t < pp[mid]) {\n            right = mid;\n          } else {\n            i1 = mid + 1;\n          }\n        }\n\n        t1 = pp[i1];\n        t0 = pp[i1 - 1]; // check boundary cases, again\n\n        if (t0 === undefined) {\n          this._cachedIndex = 0;\n          return this.beforeStart_(0, t, t1);\n        }\n\n        if (t1 === undefined) {\n          i1 = pp.length;\n          this._cachedIndex = i1;\n          return this.afterEnd_(i1 - 1, t0, t);\n        }\n      } // seek\n\n\n      this._cachedIndex = i1;\n      this.intervalChanged_(i1, t0, t1);\n    } // validate_interval\n\n\n    return this.interpolate_(i1, t0, t, t1);\n  },\n  settings: null,\n  // optional, subclass-specific settings structure\n  // Note: The indirection allows central control of many interpolants.\n  // --- Protected interface\n  DefaultSettings_: {},\n  getSettings_: function () {\n    return this.settings || this.DefaultSettings_;\n  },\n  copySampleValue_: function (index) {\n    // copies a sample value to the result buffer\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset = index * stride;\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = values[offset + i];\n    }\n\n    return result;\n  },\n  // Template methods for derived classes:\n  interpolate_: function ()\n  /* i1, t0, t, t1 */\n  {\n    throw new Error('call to abstract method'); // implementations shall return this.resultBuffer\n  },\n  intervalChanged_: function ()\n  /* i1, t0, t1 */\n  {// empty\n  }\n}); //!\\ DECLARE ALIAS AFTER assign prototype !\n\nObject.assign(Interpolant.prototype, {\n  //( 0, t, t0 ), returns this.resultBuffer\n  beforeStart_: Interpolant.prototype.copySampleValue_,\n  //( N-1, tN-1, t ), returns this.resultBuffer\n  afterEnd_: Interpolant.prototype.copySampleValue_\n});\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n  constructor: QuaternionLinearInterpolant,\n  interpolate_: function (i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset = i1 * stride,\n        alpha = (t - t0) / (t1 - t0);\n\n    for (var end = offset + stride; offset !== end; offset += 4) {\n      Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n    }\n\n    return result;\n  }\n});\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrack.call(this, name, times, values, interpolation);\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: QuaternionKeyframeTrack,\n  ValueTypeName: 'quaternion',\n  // ValueBufferType is inherited\n  DefaultInterpolation: InterpolateLinear,\n  InterpolantFactoryMethodLinear: function (result) {\n    return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n});\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrack.call(this, name, times, values, interpolation);\n}\n\nColorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: ColorKeyframeTrack,\n  ValueTypeName: 'color' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n  // Note: Very basic implementation and nothing special yet.\n  // However, this is the place for color space parameterization.\n\n});\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrack.call(this, name, times, values, interpolation);\n}\n\nNumberKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: NumberKeyframeTrack,\n  ValueTypeName: 'number' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n\n});\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  this._weightPrev = -0;\n  this._offsetPrev = -0;\n  this._weightNext = -0;\n  this._offsetNext = -0;\n}\n\nCubicInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n  constructor: CubicInterpolant,\n  DefaultSettings_: {\n    endingStart: ZeroCurvatureEnding,\n    endingEnd: ZeroCurvatureEnding\n  },\n  intervalChanged_: function (i1, t0, t1) {\n    var pp = this.parameterPositions,\n        iPrev = i1 - 2,\n        iNext = i1 + 1,\n        tPrev = pp[iPrev],\n        tNext = pp[iNext];\n\n    if (tPrev === undefined) {\n      switch (this.getSettings_().endingStart) {\n        case ZeroSlopeEnding:\n          // f'(t0) = 0\n          iPrev = i1;\n          tPrev = 2 * t0 - t1;\n          break;\n\n        case WrapAroundEnding:\n          // use the other end of the curve\n          iPrev = pp.length - 2;\n          tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n          break;\n\n        default:\n          // ZeroCurvatureEnding\n          // f''(t0) = 0 a.k.a. Natural Spline\n          iPrev = i1;\n          tPrev = t1;\n      }\n    }\n\n    if (tNext === undefined) {\n      switch (this.getSettings_().endingEnd) {\n        case ZeroSlopeEnding:\n          // f'(tN) = 0\n          iNext = i1;\n          tNext = 2 * t1 - t0;\n          break;\n\n        case WrapAroundEnding:\n          // use the other end of the curve\n          iNext = 1;\n          tNext = t1 + pp[1] - pp[0];\n          break;\n\n        default:\n          // ZeroCurvatureEnding\n          // f''(tN) = 0, a.k.a. Natural Spline\n          iNext = i1 - 1;\n          tNext = t0;\n      }\n    }\n\n    var halfDt = (t1 - t0) * 0.5,\n        stride = this.valueSize;\n    this._weightPrev = halfDt / (t0 - tPrev);\n    this._weightNext = halfDt / (tNext - t1);\n    this._offsetPrev = iPrev * stride;\n    this._offsetNext = iNext * stride;\n  },\n  interpolate_: function (i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        o1 = i1 * stride,\n        o0 = o1 - stride,\n        oP = this._offsetPrev,\n        oN = this._offsetNext,\n        wP = this._weightPrev,\n        wN = this._weightNext,\n        p = (t - t0) / (t1 - t0),\n        pp = p * p,\n        ppp = pp * p; // evaluate polynomials\n\n    var sP = -wP * ppp + 2 * wP * pp - wP * p;\n    var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n    var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n    var sN = wN * ppp - wN * pp; // combine data linearly\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n    }\n\n    return result;\n  }\n});\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n}\n\nLinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n  constructor: LinearInterpolant,\n  interpolate_: function (i1, t0, t, t1) {\n    var result = this.resultBuffer,\n        values = this.sampleValues,\n        stride = this.valueSize,\n        offset1 = i1 * stride,\n        offset0 = offset1 - stride,\n        weight1 = (t - t0) / (t1 - t0),\n        weight0 = 1 - weight1;\n\n    for (var i = 0; i !== stride; ++i) {\n      result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n    }\n\n    return result;\n  }\n});\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n  Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n}\n\nDiscreteInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n  constructor: DiscreteInterpolant,\n  interpolate_: function (i1\n  /*, t0, t, t1 */\n  ) {\n    return this.copySampleValue_(i1 - 1);\n  }\n});\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n  // same as Array.prototype.slice, but also works on typed arrays\n  arraySlice: function (array, from, to) {\n    if (AnimationUtils.isTypedArray(array)) {\n      // in ios9 array.subarray(from, undefined) will return empty array\n      // but array.subarray(from) or array.subarray(from, len) is correct\n      return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n    }\n\n    return array.slice(from, to);\n  },\n  // converts an array to a specific type\n  convertArray: function (array, type, forceClone) {\n    if (!array || // let 'undefined' and 'null' pass\n    !forceClone && array.constructor === type) return array;\n\n    if (typeof type.BYTES_PER_ELEMENT === 'number') {\n      return new type(array); // create typed array\n    }\n\n    return Array.prototype.slice.call(array); // create Array\n  },\n  isTypedArray: function (object) {\n    return ArrayBuffer.isView(object) && !(object instanceof DataView);\n  },\n  // returns an array by which times and values can be sorted\n  getKeyframeOrder: function (times) {\n    function compareTime(i, j) {\n      return times[i] - times[j];\n    }\n\n    var n = times.length;\n    var result = new Array(n);\n\n    for (var i = 0; i !== n; ++i) result[i] = i;\n\n    result.sort(compareTime);\n    return result;\n  },\n  // uses the array previously returned by 'getKeyframeOrder' to sort data\n  sortedArray: function (values, stride, order) {\n    var nValues = values.length;\n    var result = new values.constructor(nValues);\n\n    for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n      var srcOffset = order[i] * stride;\n\n      for (var j = 0; j !== stride; ++j) {\n        result[dstOffset++] = values[srcOffset + j];\n      }\n    }\n\n    return result;\n  },\n  // function for parsing AOS keyframe formats\n  flattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n    var i = 1,\n        key = jsonKeys[0];\n\n    while (key !== undefined && key[valuePropertyName] === undefined) {\n      key = jsonKeys[i++];\n    }\n\n    if (key === undefined) return; // no data\n\n    var value = key[valuePropertyName];\n    if (value === undefined) return; // no data\n\n    if (Array.isArray(value)) {\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push.apply(values, value); // push all elements\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else if (value.toArray !== undefined) {\n      // ...assume THREE.Math-ish\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          value.toArray(values, values.length);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    } else {\n      // otherwise push as-is\n      do {\n        value = key[valuePropertyName];\n\n        if (value !== undefined) {\n          times.push(key.time);\n          values.push(value);\n        }\n\n        key = jsonKeys[i++];\n      } while (key !== undefined);\n    }\n  }\n};\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack(name, times, values, interpolation) {\n  if (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n  if (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n  this.name = name;\n  this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n  this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n  this.setInterpolation(interpolation || this.DefaultInterpolation);\n  this.validate();\n  this.optimize();\n} // Static methods:\n\n\nObject.assign(KeyframeTrack, {\n  // Serialization (in static context, because of constructor invocation\n  // and automatic invocation of .toJSON):\n  parse: function (json) {\n    if (json.type === undefined) {\n      throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n    }\n\n    var trackType = KeyframeTrack._getTrackTypeForValueTypeName(json.type);\n\n    if (json.times === undefined) {\n      var times = [],\n          values = [];\n      AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n      json.times = times;\n      json.values = values;\n    } // derived classes can define a static parse method\n\n\n    if (trackType.parse !== undefined) {\n      return trackType.parse(json);\n    } else {\n      // by default, we assume a constructor compatible with the base\n      return new trackType(json.name, json.times, json.values, json.interpolation);\n    }\n  },\n  toJSON: function (track) {\n    var trackType = track.constructor;\n    var json; // derived classes can define a static toJSON method\n\n    if (trackType.toJSON !== undefined) {\n      json = trackType.toJSON(track);\n    } else {\n      // by default, we assume the data can be serialized as-is\n      json = {\n        'name': track.name,\n        'times': AnimationUtils.convertArray(track.times, Array),\n        'values': AnimationUtils.convertArray(track.values, Array)\n      };\n      var interpolation = track.getInterpolation();\n\n      if (interpolation !== track.DefaultInterpolation) {\n        json.interpolation = interpolation;\n      }\n    }\n\n    json.type = track.ValueTypeName; // mandatory\n\n    return json;\n  },\n  _getTrackTypeForValueTypeName: function (typeName) {\n    switch (typeName.toLowerCase()) {\n      case 'scalar':\n      case 'double':\n      case 'float':\n      case 'number':\n      case 'integer':\n        return NumberKeyframeTrack;\n\n      case 'vector':\n      case 'vector2':\n      case 'vector3':\n      case 'vector4':\n        return VectorKeyframeTrack;\n\n      case 'color':\n        return ColorKeyframeTrack;\n\n      case 'quaternion':\n        return QuaternionKeyframeTrack;\n\n      case 'bool':\n      case 'boolean':\n        return BooleanKeyframeTrack;\n\n      case 'string':\n        return StringKeyframeTrack;\n    }\n\n    throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n  }\n});\nObject.assign(KeyframeTrack.prototype, {\n  constructor: KeyframeTrack,\n  TimeBufferType: Float32Array,\n  ValueBufferType: Float32Array,\n  DefaultInterpolation: InterpolateLinear,\n  InterpolantFactoryMethodDiscrete: function (result) {\n    return new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodLinear: function (result) {\n    return new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  InterpolantFactoryMethodSmooth: function (result) {\n    return new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n  },\n  setInterpolation: function (interpolation) {\n    var factoryMethod;\n\n    switch (interpolation) {\n      case InterpolateDiscrete:\n        factoryMethod = this.InterpolantFactoryMethodDiscrete;\n        break;\n\n      case InterpolateLinear:\n        factoryMethod = this.InterpolantFactoryMethodLinear;\n        break;\n\n      case InterpolateSmooth:\n        factoryMethod = this.InterpolantFactoryMethodSmooth;\n        break;\n    }\n\n    if (factoryMethod === undefined) {\n      var message = \"unsupported interpolation for \" + this.ValueTypeName + \" keyframe track named \" + this.name;\n\n      if (this.createInterpolant === undefined) {\n        // fall back to default, unless the default itself is messed up\n        if (interpolation !== this.DefaultInterpolation) {\n          this.setInterpolation(this.DefaultInterpolation);\n        } else {\n          throw new Error(message); // fatal, in this case\n        }\n      }\n\n      console.warn('THREE.KeyframeTrack:', message);\n      return;\n    }\n\n    this.createInterpolant = factoryMethod;\n  },\n  getInterpolation: function () {\n    switch (this.createInterpolant) {\n      case this.InterpolantFactoryMethodDiscrete:\n        return InterpolateDiscrete;\n\n      case this.InterpolantFactoryMethodLinear:\n        return InterpolateLinear;\n\n      case this.InterpolantFactoryMethodSmooth:\n        return InterpolateSmooth;\n    }\n  },\n  getValueSize: function () {\n    return this.values.length / this.times.length;\n  },\n  // move all keyframes either forwards or backwards in time\n  shift: function (timeOffset) {\n    if (timeOffset !== 0.0) {\n      var times = this.times;\n\n      for (var i = 0, n = times.length; i !== n; ++i) {\n        times[i] += timeOffset;\n      }\n    }\n\n    return this;\n  },\n  // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n  scale: function (timeScale) {\n    if (timeScale !== 1.0) {\n      var times = this.times;\n\n      for (var i = 0, n = times.length; i !== n; ++i) {\n        times[i] *= timeScale;\n      }\n    }\n\n    return this;\n  },\n  // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n  // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n  trim: function (startTime, endTime) {\n    var times = this.times,\n        nKeys = times.length,\n        from = 0,\n        to = nKeys - 1;\n\n    while (from !== nKeys && times[from] < startTime) {\n      ++from;\n    }\n\n    while (to !== -1 && times[to] > endTime) {\n      --to;\n    }\n\n    ++to; // inclusive -> exclusive bound\n\n    if (from !== 0 || to !== nKeys) {\n      // empty tracks are forbidden, so keep at least one keyframe\n      if (from >= to) to = Math.max(to, 1), from = to - 1;\n      var stride = this.getValueSize();\n      this.times = AnimationUtils.arraySlice(times, from, to);\n      this.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n    }\n\n    return this;\n  },\n  // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n  validate: function () {\n    var valid = true;\n    var valueSize = this.getValueSize();\n\n    if (valueSize - Math.floor(valueSize) !== 0) {\n      console.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n      valid = false;\n    }\n\n    var times = this.times,\n        values = this.values,\n        nKeys = times.length;\n\n    if (nKeys === 0) {\n      console.error('THREE.KeyframeTrack: Track is empty.', this);\n      valid = false;\n    }\n\n    var prevTime = null;\n\n    for (var i = 0; i !== nKeys; i++) {\n      var currTime = times[i];\n\n      if (typeof currTime === 'number' && isNaN(currTime)) {\n        console.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n        valid = false;\n        break;\n      }\n\n      if (prevTime !== null && prevTime > currTime) {\n        console.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n        valid = false;\n        break;\n      }\n\n      prevTime = currTime;\n    }\n\n    if (values !== undefined) {\n      if (AnimationUtils.isTypedArray(values)) {\n        for (var i = 0, n = values.length; i !== n; ++i) {\n          var value = values[i];\n\n          if (isNaN(value)) {\n            console.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\n            valid = false;\n            break;\n          }\n        }\n      }\n    }\n\n    return valid;\n  },\n  // removes equivalent sequential keys as common in morph target sequences\n  // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n  optimize: function () {\n    var times = this.times,\n        values = this.values,\n        stride = this.getValueSize(),\n        smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n        writeIndex = 1,\n        lastIndex = times.length - 1;\n\n    for (var i = 1; i < lastIndex; ++i) {\n      var keep = false;\n      var time = times[i];\n      var timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n      if (time !== timeNext && (i !== 1 || time !== time[0])) {\n        if (!smoothInterpolation) {\n          // remove unnecessary keyframes same as their neighbors\n          var offset = i * stride,\n              offsetP = offset - stride,\n              offsetN = offset + stride;\n\n          for (var j = 0; j !== stride; ++j) {\n            var value = values[offset + j];\n\n            if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n              keep = true;\n              break;\n            }\n          }\n        } else {\n          keep = true;\n        }\n      } // in-place compaction\n\n\n      if (keep) {\n        if (i !== writeIndex) {\n          times[writeIndex] = times[i];\n          var readOffset = i * stride,\n              writeOffset = writeIndex * stride;\n\n          for (var j = 0; j !== stride; ++j) {\n            values[writeOffset + j] = values[readOffset + j];\n          }\n        }\n\n        ++writeIndex;\n      }\n    } // flush last keyframe (compaction looks ahead)\n\n\n    if (lastIndex > 0) {\n      times[writeIndex] = times[lastIndex];\n\n      for (var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\n        values[writeOffset + j] = values[readOffset + j];\n      }\n\n      ++writeIndex;\n    }\n\n    if (writeIndex !== times.length) {\n      this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n      this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n    }\n\n    return this;\n  }\n});\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack(name, times, values, interpolation) {\n  KeyframeTrack.call(this, name, times, values, interpolation);\n}\n\nVectorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n  constructor: VectorKeyframeTrack,\n  ValueTypeName: 'vector' // ValueBufferType is inherited\n  // DefaultInterpolation is inherited\n\n});\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip(name, duration, tracks) {\n  this.name = name;\n  this.tracks = tracks;\n  this.duration = duration !== undefined ? duration : -1;\n  this.uuid = _Math.generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n  if (this.duration < 0) {\n    this.resetDuration();\n  }\n\n  this.optimize();\n}\n\nObject.assign(AnimationClip, {\n  parse: function (json) {\n    var tracks = [],\n        jsonTracks = json.tracks,\n        frameTime = 1.0 / (json.fps || 1.0);\n\n    for (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n      tracks.push(KeyframeTrack.parse(jsonTracks[i]).scale(frameTime));\n    }\n\n    return new AnimationClip(json.name, json.duration, tracks);\n  },\n  toJSON: function (clip) {\n    var tracks = [],\n        clipTracks = clip.tracks;\n    var json = {\n      'name': clip.name,\n      'duration': clip.duration,\n      'tracks': tracks,\n      'uuid': clip.uuid\n    };\n\n    for (var i = 0, n = clipTracks.length; i !== n; ++i) {\n      tracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n    }\n\n    return json;\n  },\n  CreateFromMorphTargetSequence: function (name, morphTargetSequence, fps, noLoop) {\n    var numMorphTargets = morphTargetSequence.length;\n    var tracks = [];\n\n    for (var i = 0; i < numMorphTargets; i++) {\n      var times = [];\n      var values = [];\n      times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n      values.push(0, 1, 0);\n      var order = AnimationUtils.getKeyframeOrder(times);\n      times = AnimationUtils.sortedArray(times, 1, order);\n      values = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n      // last frame as well for perfect loop.\n\n      if (!noLoop && times[0] === 0) {\n        times.push(numMorphTargets);\n        values.push(values[0]);\n      }\n\n      tracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n    }\n\n    return new AnimationClip(name, -1, tracks);\n  },\n  findByName: function (objectOrClipArray, name) {\n    var clipArray = objectOrClipArray;\n\n    if (!Array.isArray(objectOrClipArray)) {\n      var o = objectOrClipArray;\n      clipArray = o.geometry && o.geometry.animations || o.animations;\n    }\n\n    for (var i = 0; i < clipArray.length; i++) {\n      if (clipArray[i].name === name) {\n        return clipArray[i];\n      }\n    }\n\n    return null;\n  },\n  CreateClipsFromMorphTargetSequences: function (morphTargets, fps, noLoop) {\n    var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n    // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n    var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n    // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n    for (var i = 0, il = morphTargets.length; i < il; i++) {\n      var morphTarget = morphTargets[i];\n      var parts = morphTarget.name.match(pattern);\n\n      if (parts && parts.length > 1) {\n        var name = parts[1];\n        var animationMorphTargets = animationToMorphTargets[name];\n\n        if (!animationMorphTargets) {\n          animationToMorphTargets[name] = animationMorphTargets = [];\n        }\n\n        animationMorphTargets.push(morphTarget);\n      }\n    }\n\n    var clips = [];\n\n    for (var name in animationToMorphTargets) {\n      clips.push(AnimationClip.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n    }\n\n    return clips;\n  },\n  // parse the animation.hierarchy format\n  parseAnimation: function (animation, bones) {\n    if (!animation) {\n      console.error('THREE.AnimationClip: No animation in JSONLoader data.');\n      return null;\n    }\n\n    var addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n      // only return track if there are actually keys.\n      if (animationKeys.length !== 0) {\n        var times = [];\n        var values = [];\n        AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n        if (times.length !== 0) {\n          destTracks.push(new trackType(trackName, times, values));\n        }\n      }\n    };\n\n    var tracks = [];\n    var clipName = animation.name || 'default'; // automatic length determination in AnimationClip.\n\n    var duration = animation.length || -1;\n    var fps = animation.fps || 30;\n    var hierarchyTracks = animation.hierarchy || [];\n\n    for (var h = 0; h < hierarchyTracks.length; h++) {\n      var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n      if (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n      if (animationKeys[0].morphTargets) {\n        // figure out all morph targets used in this track\n        var morphTargetNames = {};\n\n        for (var k = 0; k < animationKeys.length; k++) {\n          if (animationKeys[k].morphTargets) {\n            for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n              morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n            }\n          }\n        } // create a track for each morph target with all zero\n        // morphTargetInfluences except for the keys in which\n        // the morphTarget is named.\n\n\n        for (var morphTargetName in morphTargetNames) {\n          var times = [];\n          var values = [];\n\n          for (var m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n            var animationKey = animationKeys[k];\n            times.push(animationKey.time);\n            values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n          }\n\n          tracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n        }\n\n        duration = morphTargetNames.length * (fps || 1.0);\n      } else {\n        // ...assume skeletal animation\n        var boneName = '.bones[' + bones[h].name + ']';\n        addNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n        addNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n        addNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n      }\n    }\n\n    if (tracks.length === 0) {\n      return null;\n    }\n\n    var clip = new AnimationClip(clipName, duration, tracks);\n    return clip;\n  }\n});\nObject.assign(AnimationClip.prototype, {\n  resetDuration: function () {\n    var tracks = this.tracks,\n        duration = 0;\n\n    for (var i = 0, n = tracks.length; i !== n; ++i) {\n      var track = this.tracks[i];\n      duration = Math.max(duration, track.times[track.times.length - 1]);\n    }\n\n    this.duration = duration;\n  },\n  trim: function () {\n    for (var i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].trim(0, this.duration);\n    }\n\n    return this;\n  },\n  optimize: function () {\n    for (var i = 0; i < this.tracks.length; i++) {\n      this.tracks[i].optimize();\n    }\n\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  this.textures = {};\n}\n\nObject.assign(MaterialLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  setTextures: function (value) {\n    this.textures = value;\n  },\n  parse: function (json) {\n    var textures = this.textures;\n\n    function getTexture(name) {\n      if (textures[name] === undefined) {\n        console.warn('THREE.MaterialLoader: Undefined texture', name);\n      }\n\n      return textures[name];\n    }\n\n    var material = new Materials[json.type]();\n    if (json.uuid !== undefined) material.uuid = json.uuid;\n    if (json.name !== undefined) material.name = json.name;\n    if (json.color !== undefined) material.color.setHex(json.color);\n    if (json.roughness !== undefined) material.roughness = json.roughness;\n    if (json.metalness !== undefined) material.metalness = json.metalness;\n    if (json.emissive !== undefined) material.emissive.setHex(json.emissive);\n    if (json.specular !== undefined) material.specular.setHex(json.specular);\n    if (json.shininess !== undefined) material.shininess = json.shininess;\n    if (json.clearCoat !== undefined) material.clearCoat = json.clearCoat;\n    if (json.clearCoatRoughness !== undefined) material.clearCoatRoughness = json.clearCoatRoughness;\n    if (json.uniforms !== undefined) material.uniforms = json.uniforms;\n    if (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n    if (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n    if (json.vertexColors !== undefined) material.vertexColors = json.vertexColors;\n    if (json.fog !== undefined) material.fog = json.fog;\n    if (json.flatShading !== undefined) material.flatShading = json.flatShading;\n    if (json.blending !== undefined) material.blending = json.blending;\n    if (json.side !== undefined) material.side = json.side;\n    if (json.opacity !== undefined) material.opacity = json.opacity;\n    if (json.transparent !== undefined) material.transparent = json.transparent;\n    if (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n    if (json.depthTest !== undefined) material.depthTest = json.depthTest;\n    if (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n    if (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n    if (json.wireframe !== undefined) material.wireframe = json.wireframe;\n    if (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n    if (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n    if (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n    if (json.rotation !== undefined) material.rotation = json.rotation;\n    if (json.linewidth !== 1) material.linewidth = json.linewidth;\n    if (json.dashSize !== undefined) material.dashSize = json.dashSize;\n    if (json.gapSize !== undefined) material.gapSize = json.gapSize;\n    if (json.scale !== undefined) material.scale = json.scale;\n    if (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n    if (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n    if (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n    if (json.skinning !== undefined) material.skinning = json.skinning;\n    if (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\n    if (json.dithering !== undefined) material.dithering = json.dithering;\n    if (json.visible !== undefined) material.visible = json.visible;\n    if (json.userData !== undefined) material.userData = json.userData; // Deprecated\n\n    if (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n    // for PointsMaterial\n\n    if (json.size !== undefined) material.size = json.size;\n    if (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n    if (json.map !== undefined) material.map = getTexture(json.map);\n\n    if (json.alphaMap !== undefined) {\n      material.alphaMap = getTexture(json.alphaMap);\n      material.transparent = true;\n    }\n\n    if (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n    if (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n    if (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n    if (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n    if (json.normalScale !== undefined) {\n      var normalScale = json.normalScale;\n\n      if (Array.isArray(normalScale) === false) {\n        // Blender exporter used to export a scalar. See #7459\n        normalScale = [normalScale, normalScale];\n      }\n\n      material.normalScale = new Vector2().fromArray(normalScale);\n    }\n\n    if (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n    if (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n    if (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n    if (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n    if (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n    if (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n    if (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n    if (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n    if (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n    if (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n    if (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n    if (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n    if (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n    if (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n    if (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n    return material;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(BufferGeometryLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.load(url, function (text) {\n      onLoad(scope.parse(JSON.parse(text)));\n    }, onProgress, onError);\n  },\n  parse: function (json) {\n    var geometry = new BufferGeometry();\n    var index = json.data.index;\n\n    if (index !== undefined) {\n      var typedArray = new TYPED_ARRAYS[index.type](index.array);\n      geometry.setIndex(new BufferAttribute(typedArray, 1));\n    }\n\n    var attributes = json.data.attributes;\n\n    for (var key in attributes) {\n      var attribute = attributes[key];\n      var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n      geometry.addAttribute(key, new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized));\n    }\n\n    var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n    if (groups !== undefined) {\n      for (var i = 0, n = groups.length; i !== n; ++i) {\n        var group = groups[i];\n        geometry.addGroup(group.start, group.count, group.materialIndex);\n      }\n    }\n\n    var boundingSphere = json.data.boundingSphere;\n\n    if (boundingSphere !== undefined) {\n      var center = new Vector3();\n\n      if (boundingSphere.center !== undefined) {\n        center.fromArray(boundingSphere.center);\n      }\n\n      geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n    }\n\n    return geometry;\n  }\n});\nvar TYPED_ARRAYS = {\n  Int8Array: Int8Array,\n  Uint8Array: Uint8Array,\n  // Workaround for IE11 pre KB2929437. See #11440\n  Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n  Int16Array: Int16Array,\n  Uint16Array: Uint16Array,\n  Int32Array: Int32Array,\n  Uint32Array: Uint32Array,\n  Float32Array: Float32Array,\n  Float64Array: Float64Array\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n  handlers: [],\n  add: function (regex, loader) {\n    this.handlers.push(regex, loader);\n  },\n  get: function (file) {\n    var handlers = this.handlers;\n\n    for (var i = 0, l = handlers.length; i < l; i += 2) {\n      var regex = handlers[i];\n      var loader = handlers[i + 1];\n\n      if (regex.test(file)) {\n        return loader;\n      }\n    }\n\n    return null;\n  }\n};\nObject.assign(Loader.prototype, {\n  crossOrigin: 'anonymous',\n  onLoadStart: function () {},\n  onLoadProgress: function () {},\n  onLoadComplete: function () {},\n  initMaterials: function (materials, texturePath, crossOrigin) {\n    var array = [];\n\n    for (var i = 0; i < materials.length; ++i) {\n      array[i] = this.createMaterial(materials[i], texturePath, crossOrigin);\n    }\n\n    return array;\n  },\n  createMaterial: function () {\n    var BlendingMode = {\n      NoBlending: NoBlending,\n      NormalBlending: NormalBlending,\n      AdditiveBlending: AdditiveBlending,\n      SubtractiveBlending: SubtractiveBlending,\n      MultiplyBlending: MultiplyBlending,\n      CustomBlending: CustomBlending\n    };\n    var color = new Color();\n    var textureLoader = new TextureLoader();\n    var materialLoader = new MaterialLoader();\n    return function createMaterial(m, texturePath, crossOrigin) {\n      // convert from old material format\n      var textures = {};\n\n      function loadTexture(path, repeat, offset, wrap, anisotropy) {\n        var fullPath = texturePath + path;\n        var loader = Loader.Handlers.get(fullPath);\n        var texture;\n\n        if (loader !== null) {\n          texture = loader.load(fullPath);\n        } else {\n          textureLoader.setCrossOrigin(crossOrigin);\n          texture = textureLoader.load(fullPath);\n        }\n\n        if (repeat !== undefined) {\n          texture.repeat.fromArray(repeat);\n          if (repeat[0] !== 1) texture.wrapS = RepeatWrapping;\n          if (repeat[1] !== 1) texture.wrapT = RepeatWrapping;\n        }\n\n        if (offset !== undefined) {\n          texture.offset.fromArray(offset);\n        }\n\n        if (wrap !== undefined) {\n          if (wrap[0] === 'repeat') texture.wrapS = RepeatWrapping;\n          if (wrap[0] === 'mirror') texture.wrapS = MirroredRepeatWrapping;\n          if (wrap[1] === 'repeat') texture.wrapT = RepeatWrapping;\n          if (wrap[1] === 'mirror') texture.wrapT = MirroredRepeatWrapping;\n        }\n\n        if (anisotropy !== undefined) {\n          texture.anisotropy = anisotropy;\n        }\n\n        var uuid = _Math.generateUUID();\n\n        textures[uuid] = texture;\n        return uuid;\n      } //\n\n\n      var json = {\n        uuid: _Math.generateUUID(),\n        type: 'MeshLambertMaterial'\n      };\n\n      for (var name in m) {\n        var value = m[name];\n\n        switch (name) {\n          case 'DbgColor':\n          case 'DbgIndex':\n          case 'opticalDensity':\n          case 'illumination':\n            break;\n\n          case 'DbgName':\n            json.name = value;\n            break;\n\n          case 'blending':\n            json.blending = BlendingMode[value];\n            break;\n\n          case 'colorAmbient':\n          case 'mapAmbient':\n            console.warn('THREE.Loader.createMaterial:', name, 'is no longer supported.');\n            break;\n\n          case 'colorDiffuse':\n            json.color = color.fromArray(value).getHex();\n            break;\n\n          case 'colorSpecular':\n            json.specular = color.fromArray(value).getHex();\n            break;\n\n          case 'colorEmissive':\n            json.emissive = color.fromArray(value).getHex();\n            break;\n\n          case 'specularCoef':\n            json.shininess = value;\n            break;\n\n          case 'shading':\n            if (value.toLowerCase() === 'basic') json.type = 'MeshBasicMaterial';\n            if (value.toLowerCase() === 'phong') json.type = 'MeshPhongMaterial';\n            if (value.toLowerCase() === 'standard') json.type = 'MeshStandardMaterial';\n            break;\n\n          case 'mapDiffuse':\n            json.map = loadTexture(value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy);\n            break;\n\n          case 'mapDiffuseRepeat':\n          case 'mapDiffuseOffset':\n          case 'mapDiffuseWrap':\n          case 'mapDiffuseAnisotropy':\n            break;\n\n          case 'mapEmissive':\n            json.emissiveMap = loadTexture(value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy);\n            break;\n\n          case 'mapEmissiveRepeat':\n          case 'mapEmissiveOffset':\n          case 'mapEmissiveWrap':\n          case 'mapEmissiveAnisotropy':\n            break;\n\n          case 'mapLight':\n            json.lightMap = loadTexture(value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy);\n            break;\n\n          case 'mapLightRepeat':\n          case 'mapLightOffset':\n          case 'mapLightWrap':\n          case 'mapLightAnisotropy':\n            break;\n\n          case 'mapAO':\n            json.aoMap = loadTexture(value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy);\n            break;\n\n          case 'mapAORepeat':\n          case 'mapAOOffset':\n          case 'mapAOWrap':\n          case 'mapAOAnisotropy':\n            break;\n\n          case 'mapBump':\n            json.bumpMap = loadTexture(value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy);\n            break;\n\n          case 'mapBumpScale':\n            json.bumpScale = value;\n            break;\n\n          case 'mapBumpRepeat':\n          case 'mapBumpOffset':\n          case 'mapBumpWrap':\n          case 'mapBumpAnisotropy':\n            break;\n\n          case 'mapNormal':\n            json.normalMap = loadTexture(value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy);\n            break;\n\n          case 'mapNormalFactor':\n            json.normalScale = value;\n            break;\n\n          case 'mapNormalRepeat':\n          case 'mapNormalOffset':\n          case 'mapNormalWrap':\n          case 'mapNormalAnisotropy':\n            break;\n\n          case 'mapSpecular':\n            json.specularMap = loadTexture(value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy);\n            break;\n\n          case 'mapSpecularRepeat':\n          case 'mapSpecularOffset':\n          case 'mapSpecularWrap':\n          case 'mapSpecularAnisotropy':\n            break;\n\n          case 'mapMetalness':\n            json.metalnessMap = loadTexture(value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy);\n            break;\n\n          case 'mapMetalnessRepeat':\n          case 'mapMetalnessOffset':\n          case 'mapMetalnessWrap':\n          case 'mapMetalnessAnisotropy':\n            break;\n\n          case 'mapRoughness':\n            json.roughnessMap = loadTexture(value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy);\n            break;\n\n          case 'mapRoughnessRepeat':\n          case 'mapRoughnessOffset':\n          case 'mapRoughnessWrap':\n          case 'mapRoughnessAnisotropy':\n            break;\n\n          case 'mapAlpha':\n            json.alphaMap = loadTexture(value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy);\n            break;\n\n          case 'mapAlphaRepeat':\n          case 'mapAlphaOffset':\n          case 'mapAlphaWrap':\n          case 'mapAlphaAnisotropy':\n            break;\n\n          case 'flipSided':\n            json.side = BackSide;\n            break;\n\n          case 'doubleSided':\n            json.side = DoubleSide;\n            break;\n\n          case 'transparency':\n            console.warn('THREE.Loader.createMaterial: transparency has been renamed to opacity');\n            json.opacity = value;\n            break;\n\n          case 'depthTest':\n          case 'depthWrite':\n          case 'colorWrite':\n          case 'opacity':\n          case 'reflectivity':\n          case 'transparent':\n          case 'visible':\n          case 'wireframe':\n            json[name] = value;\n            break;\n\n          case 'vertexColors':\n            if (value === true) json.vertexColors = VertexColors;\n            if (value === 'face') json.vertexColors = FaceColors;\n            break;\n\n          default:\n            console.error('THREE.Loader.createMaterial: Unsupported', name, value);\n            break;\n        }\n      }\n\n      if (json.type === 'MeshBasicMaterial') delete json.emissive;\n      if (json.type !== 'MeshPhongMaterial') delete json.specular;\n      if (json.opacity < 1) json.transparent = true;\n      materialLoader.setTextures(textures);\n      return materialLoader.parse(json);\n    };\n  }()\n});\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n  decodeText: function (array) {\n    if (typeof TextDecoder !== 'undefined') {\n      return new TextDecoder().decode(array);\n    } // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n    // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n    var s = '';\n\n    for (var i = 0, il = array.length; i < il; i++) {\n      // Implicitly assumes little-endian.\n      s += String.fromCharCode(array[i]);\n    } // Merges multi-byte utf-8 characters.\n\n\n    return decodeURIComponent(escape(s));\n  },\n  extractUrlBase: function (url) {\n    var index = url.lastIndexOf('/');\n    if (index === -1) return './';\n    return url.substr(0, index + 1);\n  }\n};\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader(manager) {\n  if (typeof manager === 'boolean') {\n    console.warn('THREE.JSONLoader: showStatus parameter has been removed from constructor.');\n    manager = undefined;\n  }\n\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  this.withCredentials = false;\n}\n\nObject.assign(JSONLoader.prototype, {\n  crossOrigin: 'anonymous',\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var texturePath = this.texturePath && typeof this.texturePath === 'string' ? this.texturePath : LoaderUtils.extractUrlBase(url);\n    var loader = new FileLoader(this.manager);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      var json = JSON.parse(text);\n      var metadata = json.metadata;\n\n      if (metadata !== undefined) {\n        var type = metadata.type;\n\n        if (type !== undefined) {\n          if (type.toLowerCase() === 'object') {\n            console.error('THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.');\n            return;\n          }\n        }\n      }\n\n      var object = scope.parse(json, texturePath);\n      onLoad(object.geometry, object.materials);\n    }, onProgress, onError);\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n    return this;\n  },\n  setTexturePath: function (value) {\n    this.texturePath = value;\n    return this;\n  },\n  parse: function () {\n    function parseModel(json, geometry) {\n      function isBitSet(value, position) {\n        return value & 1 << position;\n      }\n\n      var i,\n          j,\n          fi,\n          offset,\n          zLength,\n          colorIndex,\n          normalIndex,\n          uvIndex,\n          materialIndex,\n          type,\n          isQuad,\n          hasMaterial,\n          hasFaceVertexUv,\n          hasFaceNormal,\n          hasFaceVertexNormal,\n          hasFaceColor,\n          hasFaceVertexColor,\n          vertex,\n          face,\n          faceA,\n          faceB,\n          hex,\n          normal,\n          uvLayer,\n          uv,\n          u,\n          v,\n          faces = json.faces,\n          vertices = json.vertices,\n          normals = json.normals,\n          colors = json.colors,\n          scale = json.scale,\n          nUvLayers = 0;\n\n      if (json.uvs !== undefined) {\n        // disregard empty arrays\n        for (i = 0; i < json.uvs.length; i++) {\n          if (json.uvs[i].length) nUvLayers++;\n        }\n\n        for (i = 0; i < nUvLayers; i++) {\n          geometry.faceVertexUvs[i] = [];\n        }\n      }\n\n      offset = 0;\n      zLength = vertices.length;\n\n      while (offset < zLength) {\n        vertex = new Vector3();\n        vertex.x = vertices[offset++] * scale;\n        vertex.y = vertices[offset++] * scale;\n        vertex.z = vertices[offset++] * scale;\n        geometry.vertices.push(vertex);\n      }\n\n      offset = 0;\n      zLength = faces.length;\n\n      while (offset < zLength) {\n        type = faces[offset++];\n        isQuad = isBitSet(type, 0);\n        hasMaterial = isBitSet(type, 1);\n        hasFaceVertexUv = isBitSet(type, 3);\n        hasFaceNormal = isBitSet(type, 4);\n        hasFaceVertexNormal = isBitSet(type, 5);\n        hasFaceColor = isBitSet(type, 6);\n        hasFaceVertexColor = isBitSet(type, 7); // console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n        if (isQuad) {\n          faceA = new Face3();\n          faceA.a = faces[offset];\n          faceA.b = faces[offset + 1];\n          faceA.c = faces[offset + 3];\n          faceB = new Face3();\n          faceB.a = faces[offset + 1];\n          faceB.b = faces[offset + 2];\n          faceB.c = faces[offset + 3];\n          offset += 4;\n\n          if (hasMaterial) {\n            materialIndex = faces[offset++];\n            faceA.materialIndex = materialIndex;\n            faceB.materialIndex = materialIndex;\n          } // to get face <=> uv index correspondence\n\n\n          fi = geometry.faces.length;\n\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n              geometry.faceVertexUvs[i][fi + 1] = [];\n\n              for (j = 0; j < 4; j++) {\n                uvIndex = faces[offset++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new Vector2(u, v);\n                if (j !== 2) geometry.faceVertexUvs[i][fi].push(uv);\n                if (j !== 0) geometry.faceVertexUvs[i][fi + 1].push(uv);\n              }\n            }\n          }\n\n          if (hasFaceNormal) {\n            normalIndex = faces[offset++] * 3;\n            faceA.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n            faceB.normal.copy(faceA.normal);\n          }\n\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 4; i++) {\n              normalIndex = faces[offset++] * 3;\n              normal = new Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              if (i !== 2) faceA.vertexNormals.push(normal);\n              if (i !== 0) faceB.vertexNormals.push(normal);\n            }\n          }\n\n          if (hasFaceColor) {\n            colorIndex = faces[offset++];\n            hex = colors[colorIndex];\n            faceA.color.setHex(hex);\n            faceB.color.setHex(hex);\n          }\n\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 4; i++) {\n              colorIndex = faces[offset++];\n              hex = colors[colorIndex];\n              if (i !== 2) faceA.vertexColors.push(new Color(hex));\n              if (i !== 0) faceB.vertexColors.push(new Color(hex));\n            }\n          }\n\n          geometry.faces.push(faceA);\n          geometry.faces.push(faceB);\n        } else {\n          face = new Face3();\n          face.a = faces[offset++];\n          face.b = faces[offset++];\n          face.c = faces[offset++];\n\n          if (hasMaterial) {\n            materialIndex = faces[offset++];\n            face.materialIndex = materialIndex;\n          } // to get face <=> uv index correspondence\n\n\n          fi = geometry.faces.length;\n\n          if (hasFaceVertexUv) {\n            for (i = 0; i < nUvLayers; i++) {\n              uvLayer = json.uvs[i];\n              geometry.faceVertexUvs[i][fi] = [];\n\n              for (j = 0; j < 3; j++) {\n                uvIndex = faces[offset++];\n                u = uvLayer[uvIndex * 2];\n                v = uvLayer[uvIndex * 2 + 1];\n                uv = new Vector2(u, v);\n                geometry.faceVertexUvs[i][fi].push(uv);\n              }\n            }\n          }\n\n          if (hasFaceNormal) {\n            normalIndex = faces[offset++] * 3;\n            face.normal.set(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n          }\n\n          if (hasFaceVertexNormal) {\n            for (i = 0; i < 3; i++) {\n              normalIndex = faces[offset++] * 3;\n              normal = new Vector3(normals[normalIndex++], normals[normalIndex++], normals[normalIndex]);\n              face.vertexNormals.push(normal);\n            }\n          }\n\n          if (hasFaceColor) {\n            colorIndex = faces[offset++];\n            face.color.setHex(colors[colorIndex]);\n          }\n\n          if (hasFaceVertexColor) {\n            for (i = 0; i < 3; i++) {\n              colorIndex = faces[offset++];\n              face.vertexColors.push(new Color(colors[colorIndex]));\n            }\n          }\n\n          geometry.faces.push(face);\n        }\n      }\n    }\n\n    function parseSkin(json, geometry) {\n      var influencesPerVertex = json.influencesPerVertex !== undefined ? json.influencesPerVertex : 2;\n\n      if (json.skinWeights) {\n        for (var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex) {\n          var x = json.skinWeights[i];\n          var y = influencesPerVertex > 1 ? json.skinWeights[i + 1] : 0;\n          var z = influencesPerVertex > 2 ? json.skinWeights[i + 2] : 0;\n          var w = influencesPerVertex > 3 ? json.skinWeights[i + 3] : 0;\n          geometry.skinWeights.push(new Vector4(x, y, z, w));\n        }\n      }\n\n      if (json.skinIndices) {\n        for (var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex) {\n          var a = json.skinIndices[i];\n          var b = influencesPerVertex > 1 ? json.skinIndices[i + 1] : 0;\n          var c = influencesPerVertex > 2 ? json.skinIndices[i + 2] : 0;\n          var d = influencesPerVertex > 3 ? json.skinIndices[i + 3] : 0;\n          geometry.skinIndices.push(new Vector4(a, b, c, d));\n        }\n      }\n\n      geometry.bones = json.bones;\n\n      if (geometry.bones && geometry.bones.length > 0 && (geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length)) {\n        console.warn('When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' + geometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.');\n      }\n    }\n\n    function parseMorphing(json, geometry) {\n      var scale = json.scale;\n\n      if (json.morphTargets !== undefined) {\n        for (var i = 0, l = json.morphTargets.length; i < l; i++) {\n          geometry.morphTargets[i] = {};\n          geometry.morphTargets[i].name = json.morphTargets[i].name;\n          geometry.morphTargets[i].vertices = [];\n          var dstVertices = geometry.morphTargets[i].vertices;\n          var srcVertices = json.morphTargets[i].vertices;\n\n          for (var v = 0, vl = srcVertices.length; v < vl; v += 3) {\n            var vertex = new Vector3();\n            vertex.x = srcVertices[v] * scale;\n            vertex.y = srcVertices[v + 1] * scale;\n            vertex.z = srcVertices[v + 2] * scale;\n            dstVertices.push(vertex);\n          }\n        }\n      }\n\n      if (json.morphColors !== undefined && json.morphColors.length > 0) {\n        console.warn('THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.');\n        var faces = geometry.faces;\n        var morphColors = json.morphColors[0].colors;\n\n        for (var i = 0, l = faces.length; i < l; i++) {\n          faces[i].color.fromArray(morphColors, i * 3);\n        }\n      }\n    }\n\n    function parseAnimations(json, geometry) {\n      var outputAnimations = []; // parse old style Bone/Hierarchy animations\n\n      var animations = [];\n\n      if (json.animation !== undefined) {\n        animations.push(json.animation);\n      }\n\n      if (json.animations !== undefined) {\n        if (json.animations.length) {\n          animations = animations.concat(json.animations);\n        } else {\n          animations.push(json.animations);\n        }\n      }\n\n      for (var i = 0; i < animations.length; i++) {\n        var clip = AnimationClip.parseAnimation(animations[i], geometry.bones);\n        if (clip) outputAnimations.push(clip);\n      } // parse implicit morph animations\n\n\n      if (geometry.morphTargets) {\n        // TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n        var morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences(geometry.morphTargets, 10);\n        outputAnimations = outputAnimations.concat(morphAnimationClips);\n      }\n\n      if (outputAnimations.length > 0) geometry.animations = outputAnimations;\n    }\n\n    return function parse(json, texturePath) {\n      if (json.data !== undefined) {\n        // Geometry 4.0 spec\n        json = json.data;\n      }\n\n      if (json.scale !== undefined) {\n        json.scale = 1.0 / json.scale;\n      } else {\n        json.scale = 1.0;\n      }\n\n      var geometry = new Geometry();\n      parseModel(json, geometry);\n      parseSkin(json, geometry);\n      parseMorphing(json, geometry);\n      parseAnimations(json, geometry);\n      geometry.computeFaceNormals();\n      geometry.computeBoundingSphere();\n\n      if (json.materials === undefined || json.materials.length === 0) {\n        return {\n          geometry: geometry\n        };\n      } else {\n        var materials = Loader.prototype.initMaterials(json.materials, texturePath, this.crossOrigin);\n        return {\n          geometry: geometry,\n          materials: materials\n        };\n      }\n    };\n  }()\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  this.texturePath = '';\n}\n\nObject.assign(ObjectLoader.prototype, {\n  crossOrigin: 'anonymous',\n  load: function (url, onLoad, onProgress, onError) {\n    if (this.texturePath === '') {\n      this.texturePath = url.substring(0, url.lastIndexOf('/') + 1);\n    }\n\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.load(url, function (text) {\n      var json = null;\n\n      try {\n        json = JSON.parse(text);\n      } catch (error) {\n        if (onError !== undefined) onError(error);\n        console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n        return;\n      }\n\n      var metadata = json.metadata;\n\n      if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n        console.error('THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.');\n        return;\n      }\n\n      scope.parse(json, onLoad);\n    }, onProgress, onError);\n  },\n  setTexturePath: function (value) {\n    this.texturePath = value;\n    return this;\n  },\n  setCrossOrigin: function (value) {\n    this.crossOrigin = value;\n    return this;\n  },\n  parse: function (json, onLoad) {\n    var shapes = this.parseShape(json.shapes);\n    var geometries = this.parseGeometries(json.geometries, shapes);\n    var images = this.parseImages(json.images, function () {\n      if (onLoad !== undefined) onLoad(object);\n    });\n    var textures = this.parseTextures(json.textures, images);\n    var materials = this.parseMaterials(json.materials, textures);\n    var object = this.parseObject(json.object, geometries, materials);\n\n    if (json.animations) {\n      object.animations = this.parseAnimations(json.animations);\n    }\n\n    if (json.images === undefined || json.images.length === 0) {\n      if (onLoad !== undefined) onLoad(object);\n    }\n\n    return object;\n  },\n  parseShape: function (json) {\n    var shapes = {};\n\n    if (json !== undefined) {\n      for (var i = 0, l = json.length; i < l; i++) {\n        var shape = new Shape().fromJSON(json[i]);\n        shapes[shape.uuid] = shape;\n      }\n    }\n\n    return shapes;\n  },\n  parseGeometries: function (json, shapes) {\n    var geometries = {};\n\n    if (json !== undefined) {\n      var geometryLoader = new JSONLoader();\n      var bufferGeometryLoader = new BufferGeometryLoader();\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var geometry;\n        var data = json[i];\n\n        switch (data.type) {\n          case 'PlaneGeometry':\n          case 'PlaneBufferGeometry':\n            geometry = new Geometries[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n            break;\n\n          case 'BoxGeometry':\n          case 'BoxBufferGeometry':\n          case 'CubeGeometry':\n            // backwards compatible\n            geometry = new Geometries[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n            break;\n\n          case 'CircleGeometry':\n          case 'CircleBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'CylinderGeometry':\n          case 'CylinderBufferGeometry':\n            geometry = new Geometries[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'ConeGeometry':\n          case 'ConeBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'SphereGeometry':\n          case 'SphereBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'DodecahedronGeometry':\n          case 'DodecahedronBufferGeometry':\n          case 'IcosahedronGeometry':\n          case 'IcosahedronBufferGeometry':\n          case 'OctahedronGeometry':\n          case 'OctahedronBufferGeometry':\n          case 'TetrahedronGeometry':\n          case 'TetrahedronBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.detail);\n            break;\n\n          case 'RingGeometry':\n          case 'RingBufferGeometry':\n            geometry = new Geometries[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n            break;\n\n          case 'TorusGeometry':\n          case 'TorusBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n            break;\n\n          case 'TorusKnotGeometry':\n          case 'TorusKnotBufferGeometry':\n            geometry = new Geometries[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n            break;\n\n          case 'LatheGeometry':\n          case 'LatheBufferGeometry':\n            geometry = new Geometries[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n            break;\n\n          case 'PolyhedronGeometry':\n          case 'PolyhedronBufferGeometry':\n            geometry = new Geometries[data.type](data.vertices, data.indices, data.radius, data.details);\n            break;\n\n          case 'ShapeGeometry':\n          case 'ShapeBufferGeometry':\n            var geometryShapes = [];\n\n            for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n              var shape = shapes[data.shapes[j]];\n              geometryShapes.push(shape);\n            }\n\n            geometry = new Geometries[data.type](geometryShapes, data.curveSegments);\n            break;\n\n          case 'ExtrudeGeometry':\n          case 'ExtrudeBufferGeometry':\n            var geometryShapes = [];\n\n            for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n              var shape = shapes[data.shapes[j]];\n              geometryShapes.push(shape);\n            }\n\n            var extrudePath = data.options.extrudePath;\n\n            if (extrudePath !== undefined) {\n              data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n            }\n\n            geometry = new Geometries[data.type](geometryShapes, data.options);\n            break;\n\n          case 'BufferGeometry':\n            geometry = bufferGeometryLoader.parse(data);\n            break;\n\n          case 'Geometry':\n            geometry = geometryLoader.parse(data, this.texturePath).geometry;\n            break;\n\n          default:\n            console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n            continue;\n        }\n\n        geometry.uuid = data.uuid;\n        if (data.name !== undefined) geometry.name = data.name;\n        if (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n        geometries[data.uuid] = geometry;\n      }\n    }\n\n    return geometries;\n  },\n  parseMaterials: function (json, textures) {\n    var materials = {};\n\n    if (json !== undefined) {\n      var loader = new MaterialLoader();\n      loader.setTextures(textures);\n\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n\n        if (data.type === 'MultiMaterial') {\n          // Deprecated\n          var array = [];\n\n          for (var j = 0; j < data.materials.length; j++) {\n            array.push(loader.parse(data.materials[j]));\n          }\n\n          materials[data.uuid] = array;\n        } else {\n          materials[data.uuid] = loader.parse(data);\n        }\n      }\n    }\n\n    return materials;\n  },\n  parseAnimations: function (json) {\n    var animations = [];\n\n    for (var i = 0; i < json.length; i++) {\n      var data = json[i];\n      var clip = AnimationClip.parse(data);\n      if (data.uuid !== undefined) clip.uuid = data.uuid;\n      animations.push(clip);\n    }\n\n    return animations;\n  },\n  parseImages: function (json, onLoad) {\n    var scope = this;\n    var images = {};\n\n    function loadImage(url) {\n      scope.manager.itemStart(url);\n      return loader.load(url, function () {\n        scope.manager.itemEnd(url);\n      }, undefined, function () {\n        scope.manager.itemEnd(url);\n        scope.manager.itemError(url);\n      });\n    }\n\n    if (json !== undefined && json.length > 0) {\n      var manager = new LoadingManager(onLoad);\n      var loader = new ImageLoader(manager);\n      loader.setCrossOrigin(this.crossOrigin);\n\n      for (var i = 0, il = json.length; i < il; i++) {\n        var image = json[i];\n        var url = image.url;\n\n        if (Array.isArray(url)) {\n          // load array of images e.g CubeTexture\n          images[image.uuid] = [];\n\n          for (var j = 0, jl = url.length; j < jl; j++) {\n            var currentUrl = url[j];\n            var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(currentUrl) ? currentUrl : scope.texturePath + currentUrl;\n            images[image.uuid].push(loadImage(path));\n          }\n        } else {\n          // load single image\n          var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.texturePath + image.url;\n          images[image.uuid] = loadImage(path);\n        }\n      }\n    }\n\n    return images;\n  },\n  parseTextures: function (json, images) {\n    function parseConstant(value, type) {\n      if (typeof value === 'number') return value;\n      console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n      return type[value];\n    }\n\n    var textures = {};\n\n    if (json !== undefined) {\n      for (var i = 0, l = json.length; i < l; i++) {\n        var data = json[i];\n\n        if (data.image === undefined) {\n          console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n        }\n\n        if (images[data.image] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined image', data.image);\n        }\n\n        var texture;\n\n        if (Array.isArray(images[data.image])) {\n          texture = new CubeTexture(images[data.image]);\n        } else {\n          texture = new Texture(images[data.image]);\n        }\n\n        texture.needsUpdate = true;\n        texture.uuid = data.uuid;\n        if (data.name !== undefined) texture.name = data.name;\n        if (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n        if (data.offset !== undefined) texture.offset.fromArray(data.offset);\n        if (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n        if (data.center !== undefined) texture.center.fromArray(data.center);\n        if (data.rotation !== undefined) texture.rotation = data.rotation;\n\n        if (data.wrap !== undefined) {\n          texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n          texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n        }\n\n        if (data.format !== undefined) texture.format = data.format;\n        if (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n        if (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n        if (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n        if (data.flipY !== undefined) texture.flipY = data.flipY;\n        textures[data.uuid] = texture;\n      }\n    }\n\n    return textures;\n  },\n  parseObject: function (data, geometries, materials) {\n    var object;\n\n    function getGeometry(name) {\n      if (geometries[name] === undefined) {\n        console.warn('THREE.ObjectLoader: Undefined geometry', name);\n      }\n\n      return geometries[name];\n    }\n\n    function getMaterial(name) {\n      if (name === undefined) return undefined;\n\n      if (Array.isArray(name)) {\n        var array = [];\n\n        for (var i = 0, l = name.length; i < l; i++) {\n          var uuid = name[i];\n\n          if (materials[uuid] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined material', uuid);\n          }\n\n          array.push(materials[uuid]);\n        }\n\n        return array;\n      }\n\n      if (materials[name] === undefined) {\n        console.warn('THREE.ObjectLoader: Undefined material', name);\n      }\n\n      return materials[name];\n    }\n\n    switch (data.type) {\n      case 'Scene':\n        object = new Scene();\n\n        if (data.background !== undefined) {\n          if (Number.isInteger(data.background)) {\n            object.background = new Color(data.background);\n          }\n        }\n\n        if (data.fog !== undefined) {\n          if (data.fog.type === 'Fog') {\n            object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n          } else if (data.fog.type === 'FogExp2') {\n            object.fog = new FogExp2(data.fog.color, data.fog.density);\n          }\n        }\n\n        break;\n\n      case 'PerspectiveCamera':\n        object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n        if (data.focus !== undefined) object.focus = data.focus;\n        if (data.zoom !== undefined) object.zoom = data.zoom;\n        if (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n        if (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n        if (data.view !== undefined) object.view = Object.assign({}, data.view);\n        break;\n\n      case 'OrthographicCamera':\n        object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n        if (data.zoom !== undefined) object.zoom = data.zoom;\n        if (data.view !== undefined) object.view = Object.assign({}, data.view);\n        break;\n\n      case 'AmbientLight':\n        object = new AmbientLight(data.color, data.intensity);\n        break;\n\n      case 'DirectionalLight':\n        object = new DirectionalLight(data.color, data.intensity);\n        break;\n\n      case 'PointLight':\n        object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n        break;\n\n      case 'RectAreaLight':\n        object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n        break;\n\n      case 'SpotLight':\n        object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n        break;\n\n      case 'HemisphereLight':\n        object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n        break;\n\n      case 'SkinnedMesh':\n        console.warn('THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.');\n\n      case 'Mesh':\n        var geometry = getGeometry(data.geometry);\n        var material = getMaterial(data.material);\n\n        if (geometry.bones && geometry.bones.length > 0) {\n          object = new SkinnedMesh(geometry, material);\n        } else {\n          object = new Mesh(geometry, material);\n        }\n\n        break;\n\n      case 'LOD':\n        object = new LOD();\n        break;\n\n      case 'Line':\n        object = new Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n        break;\n\n      case 'LineLoop':\n        object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n\n      case 'LineSegments':\n        object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n\n      case 'PointCloud':\n      case 'Points':\n        object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n        break;\n\n      case 'Sprite':\n        object = new Sprite(getMaterial(data.material));\n        break;\n\n      case 'Group':\n        object = new Group();\n        break;\n\n      default:\n        object = new Object3D();\n    }\n\n    object.uuid = data.uuid;\n    if (data.name !== undefined) object.name = data.name;\n\n    if (data.matrix !== undefined) {\n      object.matrix.fromArray(data.matrix);\n      if (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n      if (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n    } else {\n      if (data.position !== undefined) object.position.fromArray(data.position);\n      if (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n      if (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n      if (data.scale !== undefined) object.scale.fromArray(data.scale);\n    }\n\n    if (data.castShadow !== undefined) object.castShadow = data.castShadow;\n    if (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n    if (data.shadow) {\n      if (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n      if (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n      if (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n      if (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n    }\n\n    if (data.visible !== undefined) object.visible = data.visible;\n    if (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n    if (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n    if (data.userData !== undefined) object.userData = data.userData;\n    if (data.layers !== undefined) object.layers.mask = data.layers;\n\n    if (data.children !== undefined) {\n      var children = data.children;\n\n      for (var i = 0; i < children.length; i++) {\n        object.add(this.parseObject(children[i], geometries, materials));\n      }\n    }\n\n    if (data.type === 'LOD') {\n      var levels = data.levels;\n\n      for (var l = 0; l < levels.length; l++) {\n        var level = levels[l];\n        var child = object.getObjectByProperty('uuid', level.object);\n\n        if (child !== undefined) {\n          object.addLevel(child, level.distance);\n        }\n      }\n    }\n\n    return object;\n  }\n});\nvar TEXTURE_MAPPING = {\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  SphericalReflectionMapping: SphericalReflectionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping,\n  CubeUVRefractionMapping: CubeUVRefractionMapping\n};\nvar TEXTURE_WRAPPING = {\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping\n};\nvar TEXTURE_FILTER = {\n  NearestFilter: NearestFilter,\n  NearestMipMapNearestFilter: NearestMipMapNearestFilter,\n  NearestMipMapLinearFilter: NearestMipMapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipMapNearestFilter: LinearMipMapNearestFilter,\n  LinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\nfunction ImageBitmapLoader(manager) {\n  if (typeof createImageBitmap === 'undefined') {\n    console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n  }\n\n  if (typeof fetch === 'undefined') {\n    console.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n  }\n\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n  this.options = undefined;\n}\n\nImageBitmapLoader.prototype = {\n  constructor: ImageBitmapLoader,\n  setOptions: function setOptions(options) {\n    this.options = options;\n    return this;\n  },\n  load: function (url, onLoad, onProgress, onError) {\n    if (url === undefined) url = '';\n    if (this.path !== undefined) url = this.path + url;\n    url = this.manager.resolveURL(url);\n    var scope = this;\n    var cached = Cache.get(url);\n\n    if (cached !== undefined) {\n      scope.manager.itemStart(url);\n      setTimeout(function () {\n        if (onLoad) onLoad(cached);\n        scope.manager.itemEnd(url);\n      }, 0);\n      return cached;\n    }\n\n    fetch(url).then(function (res) {\n      return res.blob();\n    }).then(function (blob) {\n      return createImageBitmap(blob, scope.options);\n    }).then(function (imageBitmap) {\n      Cache.add(url, imageBitmap);\n      if (onLoad) onLoad(imageBitmap);\n      scope.manager.itemEnd(url);\n    }).catch(function (e) {\n      if (onError) onError(e);\n      scope.manager.itemEnd(url);\n      scope.manager.itemError(url);\n    });\n  },\n  setCrossOrigin: function ()\n  /* value */\n  {\n    return this;\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  }\n};\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n  this.type = 'ShapePath';\n  this.color = new Color();\n  this.subPaths = [];\n  this.currentPath = null;\n}\n\nObject.assign(ShapePath.prototype, {\n  moveTo: function (x, y) {\n    this.currentPath = new Path();\n    this.subPaths.push(this.currentPath);\n    this.currentPath.moveTo(x, y);\n  },\n  lineTo: function (x, y) {\n    this.currentPath.lineTo(x, y);\n  },\n  quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n    this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n  },\n  bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n    this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n  },\n  splineThru: function (pts) {\n    this.currentPath.splineThru(pts);\n  },\n  toShapes: function (isCCW, noHoles) {\n    function toShapesNoHoles(inSubpaths) {\n      var shapes = [];\n\n      for (var i = 0, l = inSubpaths.length; i < l; i++) {\n        var tmpPath = inSubpaths[i];\n        var tmpShape = new Shape();\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n      }\n\n      return shapes;\n    }\n\n    function isPointInsidePolygon(inPt, inPolygon) {\n      var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n      // toggling of inside/outside at every single! intersection point of an edge\n      //  with the horizontal line through inPt, left of inPt\n      //  not counting lowerY endpoints of edges and whole edges on that line\n\n      var inside = false;\n\n      for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n        var edgeLowPt = inPolygon[p];\n        var edgeHighPt = inPolygon[q];\n        var edgeDx = edgeHighPt.x - edgeLowPt.x;\n        var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n        if (Math.abs(edgeDy) > Number.EPSILON) {\n          // not parallel\n          if (edgeDy < 0) {\n            edgeLowPt = inPolygon[q];\n            edgeDx = -edgeDx;\n            edgeHighPt = inPolygon[p];\n            edgeDy = -edgeDy;\n          }\n\n          if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n          if (inPt.y === edgeLowPt.y) {\n            if (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n            // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n          } else {\n            var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n            if (perpEdge === 0) return true; // inPt is on contour ?\n\n            if (perpEdge < 0) continue;\n            inside = !inside; // true intersection left of inPt\n          }\n        } else {\n          // parallel or collinear\n          if (inPt.y !== edgeLowPt.y) continue; // parallel\n          // edge lies on the same horizontal line as inPt\n\n          if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n          // continue;\n        }\n      }\n\n      return inside;\n    }\n\n    var isClockWise = ShapeUtils.isClockWise;\n    var subPaths = this.subPaths;\n    if (subPaths.length === 0) return [];\n    if (noHoles === true) return toShapesNoHoles(subPaths);\n    var solid,\n        tmpPath,\n        tmpShape,\n        shapes = [];\n\n    if (subPaths.length === 1) {\n      tmpPath = subPaths[0];\n      tmpShape = new Shape();\n      tmpShape.curves = tmpPath.curves;\n      shapes.push(tmpShape);\n      return shapes;\n    }\n\n    var holesFirst = !isClockWise(subPaths[0].getPoints());\n    holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n    var betterShapeHoles = [];\n    var newShapes = [];\n    var newShapeHoles = [];\n    var mainIdx = 0;\n    var tmpPoints;\n    newShapes[mainIdx] = undefined;\n    newShapeHoles[mainIdx] = [];\n\n    for (var i = 0, l = subPaths.length; i < l; i++) {\n      tmpPath = subPaths[i];\n      tmpPoints = tmpPath.getPoints();\n      solid = isClockWise(tmpPoints);\n      solid = isCCW ? !solid : solid;\n\n      if (solid) {\n        if (!holesFirst && newShapes[mainIdx]) mainIdx++;\n        newShapes[mainIdx] = {\n          s: new Shape(),\n          p: tmpPoints\n        };\n        newShapes[mainIdx].s.curves = tmpPath.curves;\n        if (holesFirst) mainIdx++;\n        newShapeHoles[mainIdx] = []; //console.log('cw', i);\n      } else {\n        newShapeHoles[mainIdx].push({\n          h: tmpPath,\n          p: tmpPoints[0]\n        }); //console.log('ccw', i);\n      }\n    } // only Holes? -> probably all Shapes with wrong orientation\n\n\n    if (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n    if (newShapes.length > 1) {\n      var ambiguous = false;\n      var toChange = [];\n\n      for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        betterShapeHoles[sIdx] = [];\n      }\n\n      for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n        var sho = newShapeHoles[sIdx];\n\n        for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n          var ho = sho[hIdx];\n          var hole_unassigned = true;\n\n          for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n            if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n              if (sIdx !== s2Idx) toChange.push({\n                froms: sIdx,\n                tos: s2Idx,\n                hole: hIdx\n              });\n\n              if (hole_unassigned) {\n                hole_unassigned = false;\n                betterShapeHoles[s2Idx].push(ho);\n              } else {\n                ambiguous = true;\n              }\n            }\n          }\n\n          if (hole_unassigned) {\n            betterShapeHoles[sIdx].push(ho);\n          }\n        }\n      } // console.log(\"ambiguous: \", ambiguous);\n\n\n      if (toChange.length > 0) {\n        // console.log(\"to change: \", toChange);\n        if (!ambiguous) newShapeHoles = betterShapeHoles;\n      }\n    }\n\n    var tmpHoles;\n\n    for (var i = 0, il = newShapes.length; i < il; i++) {\n      tmpShape = newShapes[i].s;\n      shapes.push(tmpShape);\n      tmpHoles = newShapeHoles[i];\n\n      for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n        tmpShape.holes.push(tmpHoles[j].h);\n      }\n    } //console.log(\"shape\", shapes);\n\n\n    return shapes;\n  }\n});\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Font(data) {\n  this.type = 'Font';\n  this.data = data;\n}\n\nObject.assign(Font.prototype, {\n  isFont: true,\n  generateShapes: function (text, size) {\n    if (size === undefined) size = 100;\n    var shapes = [];\n    var paths = createPaths(text, size, this.data);\n\n    for (var p = 0, pl = paths.length; p < pl; p++) {\n      Array.prototype.push.apply(shapes, paths[p].toShapes());\n    }\n\n    return shapes;\n  }\n});\n\nfunction createPaths(text, size, data) {\n  var chars = Array.from ? Array.from(text) : String(text).split(''); // see #13988\n\n  var scale = size / data.resolution;\n  var line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n  var paths = [];\n  var offsetX = 0,\n      offsetY = 0;\n\n  for (var i = 0; i < chars.length; i++) {\n    var char = chars[i];\n\n    if (char === '\\n') {\n      offsetX = 0;\n      offsetY -= line_height;\n    } else {\n      var ret = createPath(char, scale, offsetX, offsetY, data);\n      offsetX += ret.offsetX;\n      paths.push(ret.path);\n    }\n  }\n\n  return paths;\n}\n\nfunction createPath(char, scale, offsetX, offsetY, data) {\n  var glyph = data.glyphs[char] || data.glyphs['?'];\n  if (!glyph) return;\n  var path = new ShapePath();\n  var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n  if (glyph.o) {\n    var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n    for (var i = 0, l = outline.length; i < l;) {\n      var action = outline[i++];\n\n      switch (action) {\n        case 'm':\n          // moveTo\n          x = outline[i++] * scale + offsetX;\n          y = outline[i++] * scale + offsetY;\n          path.moveTo(x, y);\n          break;\n\n        case 'l':\n          // lineTo\n          x = outline[i++] * scale + offsetX;\n          y = outline[i++] * scale + offsetY;\n          path.lineTo(x, y);\n          break;\n\n        case 'q':\n          // quadraticCurveTo\n          cpx = outline[i++] * scale + offsetX;\n          cpy = outline[i++] * scale + offsetY;\n          cpx1 = outline[i++] * scale + offsetX;\n          cpy1 = outline[i++] * scale + offsetY;\n          path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n          break;\n\n        case 'b':\n          // bezierCurveTo\n          cpx = outline[i++] * scale + offsetX;\n          cpy = outline[i++] * scale + offsetY;\n          cpx1 = outline[i++] * scale + offsetX;\n          cpy1 = outline[i++] * scale + offsetY;\n          cpx2 = outline[i++] * scale + offsetX;\n          cpy2 = outline[i++] * scale + offsetY;\n          path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n          break;\n      }\n    }\n  }\n\n  return {\n    offsetX: glyph.ha * scale,\n    path: path\n  };\n}\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction FontLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(FontLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.load(url, function (text) {\n      var json;\n\n      try {\n        json = JSON.parse(text);\n      } catch (e) {\n        console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n        json = JSON.parse(text.substring(65, text.length - 2));\n      }\n\n      var font = scope.parse(json);\n      if (onLoad) onLoad(font);\n    }, onProgress, onError);\n  },\n  parse: function (json) {\n    return new Font(json);\n  },\n  setPath: function (value) {\n    this.path = value;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\nvar AudioContext = {\n  getContext: function () {\n    if (context === undefined) {\n      context = new (window.AudioContext || window.webkitAudioContext)();\n    }\n\n    return context;\n  },\n  setContext: function (value) {\n    context = value;\n  }\n};\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader(manager) {\n  this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nObject.assign(AudioLoader.prototype, {\n  load: function (url, onLoad, onProgress, onError) {\n    var loader = new FileLoader(this.manager);\n    loader.setResponseType('arraybuffer');\n    loader.load(url, function (buffer) {\n      // Create a copy of the buffer. The `decodeAudioData` method\n      // detaches the buffer when complete, preventing reuse.\n      var bufferCopy = buffer.slice(0);\n      var context = AudioContext.getContext();\n      context.decodeAudioData(bufferCopy, function (audioBuffer) {\n        onLoad(audioBuffer);\n      });\n    }, onProgress, onError);\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n  this.type = 'StereoCamera';\n  this.aspect = 1;\n  this.eyeSep = 0.064;\n  this.cameraL = new PerspectiveCamera();\n  this.cameraL.layers.enable(1);\n  this.cameraL.matrixAutoUpdate = false;\n  this.cameraR = new PerspectiveCamera();\n  this.cameraR.layers.enable(2);\n  this.cameraR.matrixAutoUpdate = false;\n}\n\nObject.assign(StereoCamera.prototype, {\n  update: function () {\n    var instance, focus, fov, aspect, near, far, zoom, eyeSep;\n    var eyeRight = new Matrix4();\n    var eyeLeft = new Matrix4();\n    return function update(camera) {\n      var needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov || aspect !== camera.aspect * this.aspect || near !== camera.near || far !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n      if (needsUpdate) {\n        instance = this;\n        focus = camera.focus;\n        fov = camera.fov;\n        aspect = camera.aspect * this.aspect;\n        near = camera.near;\n        far = camera.far;\n        zoom = camera.zoom; // Off-axis stereoscopic effect based on\n        // http://paulbourke.net/stereographics/stereorender/\n\n        var projectionMatrix = camera.projectionMatrix.clone();\n        eyeSep = this.eyeSep / 2;\n        var eyeSepOnProjection = eyeSep * near / focus;\n        var ymax = near * Math.tan(_Math.DEG2RAD * fov * 0.5) / zoom;\n        var xmin, xmax; // translate xOffset\n\n        eyeLeft.elements[12] = -eyeSep;\n        eyeRight.elements[12] = eyeSep; // for left eye\n\n        xmin = -ymax * aspect + eyeSepOnProjection;\n        xmax = ymax * aspect + eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n        xmin = -ymax * aspect - eyeSepOnProjection;\n        xmax = ymax * aspect - eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraR.projectionMatrix.copy(projectionMatrix);\n      }\n\n      this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(eyeLeft);\n      this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(eyeRight);\n    };\n  }()\n});\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera(near, far, cubeResolution) {\n  Object3D.call(this);\n  this.type = 'CubeCamera';\n  var fov = 90,\n      aspect = 1;\n  var cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPX.up.set(0, -1, 0);\n  cameraPX.lookAt(new Vector3(1, 0, 0));\n  this.add(cameraPX);\n  var cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNX.up.set(0, -1, 0);\n  cameraNX.lookAt(new Vector3(-1, 0, 0));\n  this.add(cameraNX);\n  var cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPY.up.set(0, 0, 1);\n  cameraPY.lookAt(new Vector3(0, 1, 0));\n  this.add(cameraPY);\n  var cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNY.up.set(0, 0, -1);\n  cameraNY.lookAt(new Vector3(0, -1, 0));\n  this.add(cameraNY);\n  var cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n  cameraPZ.up.set(0, -1, 0);\n  cameraPZ.lookAt(new Vector3(0, 0, 1));\n  this.add(cameraPZ);\n  var cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n  cameraNZ.up.set(0, -1, 0);\n  cameraNZ.lookAt(new Vector3(0, 0, -1));\n  this.add(cameraNZ);\n  var options = {\n    format: RGBFormat,\n    magFilter: LinearFilter,\n    minFilter: LinearFilter\n  };\n  this.renderTarget = new WebGLRenderTargetCube(cubeResolution, cubeResolution, options);\n  this.renderTarget.texture.name = \"CubeCamera\";\n\n  this.update = function (renderer, scene) {\n    if (this.parent === null) this.updateMatrixWorld();\n    var renderTarget = this.renderTarget;\n    var generateMipmaps = renderTarget.texture.generateMipmaps;\n    renderTarget.texture.generateMipmaps = false;\n    renderTarget.activeCubeFace = 0;\n    renderer.render(scene, cameraPX, renderTarget);\n    renderTarget.activeCubeFace = 1;\n    renderer.render(scene, cameraNX, renderTarget);\n    renderTarget.activeCubeFace = 2;\n    renderer.render(scene, cameraPY, renderTarget);\n    renderTarget.activeCubeFace = 3;\n    renderer.render(scene, cameraNY, renderTarget);\n    renderTarget.activeCubeFace = 4;\n    renderer.render(scene, cameraPZ, renderTarget);\n    renderTarget.texture.generateMipmaps = generateMipmaps;\n    renderTarget.activeCubeFace = 5;\n    renderer.render(scene, cameraNZ, renderTarget);\n    renderer.setRenderTarget(null);\n  };\n\n  this.clear = function (renderer, color, depth, stencil) {\n    var renderTarget = this.renderTarget;\n\n    for (var i = 0; i < 6; i++) {\n      renderTarget.activeCubeFace = i;\n      renderer.setRenderTarget(renderTarget);\n      renderer.clear(color, depth, stencil);\n    }\n\n    renderer.setRenderTarget(null);\n  };\n}\n\nCubeCamera.prototype = Object.create(Object3D.prototype);\nCubeCamera.prototype.constructor = CubeCamera;\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n  Object3D.call(this);\n  this.type = 'AudioListener';\n  this.context = AudioContext.getContext();\n  this.gain = this.context.createGain();\n  this.gain.connect(this.context.destination);\n  this.filter = null;\n}\n\nAudioListener.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: AudioListener,\n  getInput: function () {\n    return this.gain;\n  },\n  removeFilter: function () {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n      this.gain.connect(this.context.destination);\n      this.filter = null;\n    }\n\n    return this;\n  },\n  getFilter: function () {\n    return this.filter;\n  },\n  setFilter: function (value) {\n    if (this.filter !== null) {\n      this.gain.disconnect(this.filter);\n      this.filter.disconnect(this.context.destination);\n    } else {\n      this.gain.disconnect(this.context.destination);\n    }\n\n    this.filter = value;\n    this.gain.connect(this.filter);\n    this.filter.connect(this.context.destination);\n    return this;\n  },\n  getMasterVolume: function () {\n    return this.gain.gain.value;\n  },\n  setMasterVolume: function (value) {\n    this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n    return this;\n  },\n  updateMatrixWorld: function () {\n    var position = new Vector3();\n    var quaternion = new Quaternion();\n    var scale = new Vector3();\n    var orientation = new Vector3();\n    return function updateMatrixWorld(force) {\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n      var listener = this.context.listener;\n      var up = this.up;\n      this.matrixWorld.decompose(position, quaternion, scale);\n      orientation.set(0, 0, -1).applyQuaternion(quaternion);\n\n      if (listener.positionX) {\n        listener.positionX.setValueAtTime(position.x, this.context.currentTime);\n        listener.positionY.setValueAtTime(position.y, this.context.currentTime);\n        listener.positionZ.setValueAtTime(position.z, this.context.currentTime);\n        listener.forwardX.setValueAtTime(orientation.x, this.context.currentTime);\n        listener.forwardY.setValueAtTime(orientation.y, this.context.currentTime);\n        listener.forwardZ.setValueAtTime(orientation.z, this.context.currentTime);\n        listener.upX.setValueAtTime(up.x, this.context.currentTime);\n        listener.upY.setValueAtTime(up.y, this.context.currentTime);\n        listener.upZ.setValueAtTime(up.z, this.context.currentTime);\n      } else {\n        listener.setPosition(position.x, position.y, position.z);\n        listener.setOrientation(orientation.x, orientation.y, orientation.z, up.x, up.y, up.z);\n      }\n    };\n  }()\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio(listener) {\n  Object3D.call(this);\n  this.type = 'Audio';\n  this.context = listener.context;\n  this.gain = this.context.createGain();\n  this.gain.connect(listener.getInput());\n  this.autoplay = false;\n  this.buffer = null;\n  this.loop = false;\n  this.startTime = 0;\n  this.offset = 0;\n  this.playbackRate = 1;\n  this.isPlaying = false;\n  this.hasPlaybackControl = true;\n  this.sourceType = 'empty';\n  this.filters = [];\n}\n\nAudio.prototype = Object.assign(Object.create(Object3D.prototype), {\n  constructor: Audio,\n  getOutput: function () {\n    return this.gain;\n  },\n  setNodeSource: function (audioNode) {\n    this.hasPlaybackControl = false;\n    this.sourceType = 'audioNode';\n    this.source = audioNode;\n    this.connect();\n    return this;\n  },\n  setMediaElementSource: function (mediaElement) {\n    this.hasPlaybackControl = false;\n    this.sourceType = 'mediaNode';\n    this.source = this.context.createMediaElementSource(mediaElement);\n    this.connect();\n    return this;\n  },\n  setBuffer: function (audioBuffer) {\n    this.buffer = audioBuffer;\n    this.sourceType = 'buffer';\n    if (this.autoplay) this.play();\n    return this;\n  },\n  play: function () {\n    if (this.isPlaying === true) {\n      console.warn('THREE.Audio: Audio is already playing.');\n      return;\n    }\n\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    var source = this.context.createBufferSource();\n    source.buffer = this.buffer;\n    source.loop = this.loop;\n    source.onended = this.onEnded.bind(this);\n    source.playbackRate.setValueAtTime(this.playbackRate, this.startTime);\n    this.startTime = this.context.currentTime;\n    source.start(this.startTime, this.offset);\n    this.isPlaying = true;\n    this.source = source;\n    return this.connect();\n  },\n  pause: function () {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    if (this.isPlaying === true) {\n      this.source.stop();\n      this.offset += (this.context.currentTime - this.startTime) * this.playbackRate;\n      this.isPlaying = false;\n    }\n\n    return this;\n  },\n  stop: function () {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.source.stop();\n    this.offset = 0;\n    this.isPlaying = false;\n    return this;\n  },\n  connect: function () {\n    if (this.filters.length > 0) {\n      this.source.connect(this.filters[0]);\n\n      for (var i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].connect(this.filters[i]);\n      }\n\n      this.filters[this.filters.length - 1].connect(this.getOutput());\n    } else {\n      this.source.connect(this.getOutput());\n    }\n\n    return this;\n  },\n  disconnect: function () {\n    if (this.filters.length > 0) {\n      this.source.disconnect(this.filters[0]);\n\n      for (var i = 1, l = this.filters.length; i < l; i++) {\n        this.filters[i - 1].disconnect(this.filters[i]);\n      }\n\n      this.filters[this.filters.length - 1].disconnect(this.getOutput());\n    } else {\n      this.source.disconnect(this.getOutput());\n    }\n\n    return this;\n  },\n  getFilters: function () {\n    return this.filters;\n  },\n  setFilters: function (value) {\n    if (!value) value = [];\n\n    if (this.isPlaying === true) {\n      this.disconnect();\n      this.filters = value;\n      this.connect();\n    } else {\n      this.filters = value;\n    }\n\n    return this;\n  },\n  getFilter: function () {\n    return this.getFilters()[0];\n  },\n  setFilter: function (filter) {\n    return this.setFilters(filter ? [filter] : []);\n  },\n  setPlaybackRate: function (value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.playbackRate = value;\n\n    if (this.isPlaying === true) {\n      this.source.playbackRate.setValueAtTime(this.playbackRate, this.context.currentTime);\n    }\n\n    return this;\n  },\n  getPlaybackRate: function () {\n    return this.playbackRate;\n  },\n  onEnded: function () {\n    this.isPlaying = false;\n  },\n  getLoop: function () {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return false;\n    }\n\n    return this.loop;\n  },\n  setLoop: function (value) {\n    if (this.hasPlaybackControl === false) {\n      console.warn('THREE.Audio: this Audio has no playback control.');\n      return;\n    }\n\n    this.loop = value;\n\n    if (this.isPlaying === true) {\n      this.source.loop = this.loop;\n    }\n\n    return this;\n  },\n  getVolume: function () {\n    return this.gain.gain.value;\n  },\n  setVolume: function (value) {\n    this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio(listener) {\n  Audio.call(this, listener);\n  this.panner = this.context.createPanner();\n  this.panner.connect(this.gain);\n}\n\nPositionalAudio.prototype = Object.assign(Object.create(Audio.prototype), {\n  constructor: PositionalAudio,\n  getOutput: function () {\n    return this.panner;\n  },\n  getRefDistance: function () {\n    return this.panner.refDistance;\n  },\n  setRefDistance: function (value) {\n    this.panner.refDistance = value;\n    return this;\n  },\n  getRolloffFactor: function () {\n    return this.panner.rolloffFactor;\n  },\n  setRolloffFactor: function (value) {\n    this.panner.rolloffFactor = value;\n    return this;\n  },\n  getDistanceModel: function () {\n    return this.panner.distanceModel;\n  },\n  setDistanceModel: function (value) {\n    this.panner.distanceModel = value;\n    return this;\n  },\n  getMaxDistance: function () {\n    return this.panner.maxDistance;\n  },\n  setMaxDistance: function (value) {\n    this.panner.maxDistance = value;\n    return this;\n  },\n  setDirectionalCone: function (coneInnerAngle, coneOuterAngle, coneOuterGain) {\n    this.panner.coneInnerAngle = coneInnerAngle;\n    this.panner.coneOuterAngle = coneOuterAngle;\n    this.panner.coneOuterGain = coneOuterGain;\n    return this;\n  },\n  updateMatrixWorld: function () {\n    var position = new Vector3();\n    var quaternion = new Quaternion();\n    var scale = new Vector3();\n    var orientation = new Vector3();\n    return function updateMatrixWorld(force) {\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n      var panner = this.panner;\n      this.matrixWorld.decompose(position, quaternion, scale);\n      orientation.set(0, 0, 1).applyQuaternion(quaternion);\n      panner.setPosition(position.x, position.y, position.z);\n      panner.setOrientation(orientation.x, orientation.y, orientation.z);\n    };\n  }()\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser(audio, fftSize) {\n  this.analyser = audio.context.createAnalyser();\n  this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n  this.data = new Uint8Array(this.analyser.frequencyBinCount);\n  audio.getOutput().connect(this.analyser);\n}\n\nObject.assign(AudioAnalyser.prototype, {\n  getFrequencyData: function () {\n    this.analyser.getByteFrequencyData(this.data);\n    return this.data;\n  },\n  getAverageFrequency: function () {\n    var value = 0,\n        data = this.getFrequencyData();\n\n    for (var i = 0; i < data.length; i++) {\n      value += data[i];\n    }\n\n    return value / data.length;\n  }\n});\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer(binding, typeName, valueSize) {\n  this.binding = binding;\n  this.valueSize = valueSize;\n  var bufferType = Float64Array,\n      mixFunction;\n\n  switch (typeName) {\n    case 'quaternion':\n      mixFunction = this._slerp;\n      break;\n\n    case 'string':\n    case 'bool':\n      bufferType = Array;\n      mixFunction = this._select;\n      break;\n\n    default:\n      mixFunction = this._lerp;\n  }\n\n  this.buffer = new bufferType(valueSize * 4); // layout: [ incoming | accu0 | accu1 | orig ]\n  //\n  // interpolators can use .buffer as their .result\n  // the data then goes to 'incoming'\n  //\n  // 'accu0' and 'accu1' are used frame-interleaved for\n  // the cumulative result and are compared to detect\n  // changes\n  //\n  // 'orig' stores the original state of the property\n\n  this._mixBufferRegion = mixFunction;\n  this.cumulativeWeight = 0;\n  this.useCount = 0;\n  this.referenceCount = 0;\n}\n\nObject.assign(PropertyMixer.prototype, {\n  // accumulate data in the 'incoming' region into 'accu<i>'\n  accumulate: function (accuIndex, weight) {\n    // note: happily accumulating nothing when weight = 0, the caller knows\n    // the weight and shouldn't have made the call in the first place\n    var buffer = this.buffer,\n        stride = this.valueSize,\n        offset = accuIndex * stride + stride,\n        currentWeight = this.cumulativeWeight;\n\n    if (currentWeight === 0) {\n      // accuN := incoming * weight\n      for (var i = 0; i !== stride; ++i) {\n        buffer[offset + i] = buffer[i];\n      }\n\n      currentWeight = weight;\n    } else {\n      // accuN := accuN + incoming * weight\n      currentWeight += weight;\n      var mix = weight / currentWeight;\n\n      this._mixBufferRegion(buffer, offset, 0, mix, stride);\n    }\n\n    this.cumulativeWeight = currentWeight;\n  },\n  // apply the state of 'accu<i>' to the binding when accus differ\n  apply: function (accuIndex) {\n    var stride = this.valueSize,\n        buffer = this.buffer,\n        offset = accuIndex * stride + stride,\n        weight = this.cumulativeWeight,\n        binding = this.binding;\n    this.cumulativeWeight = 0;\n\n    if (weight < 1) {\n      // accuN := accuN + original * ( 1 - cumulativeWeight )\n      var originalValueOffset = stride * 3;\n\n      this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n    }\n\n    for (var i = stride, e = stride + stride; i !== e; ++i) {\n      if (buffer[i] !== buffer[i + stride]) {\n        // value has changed -> update scene graph\n        binding.setValue(buffer, offset);\n        break;\n      }\n    }\n  },\n  // remember the state of the bound property and copy it to both accus\n  saveOriginalState: function () {\n    var binding = this.binding;\n    var buffer = this.buffer,\n        stride = this.valueSize,\n        originalValueOffset = stride * 3;\n    binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n    for (var i = stride, e = originalValueOffset; i !== e; ++i) {\n      buffer[i] = buffer[originalValueOffset + i % stride];\n    }\n\n    this.cumulativeWeight = 0;\n  },\n  // apply the state previously taken via 'saveOriginalState' to the binding\n  restoreOriginalState: function () {\n    var originalValueOffset = this.valueSize * 3;\n    this.binding.setValue(this.buffer, originalValueOffset);\n  },\n  // mix functions\n  _select: function (buffer, dstOffset, srcOffset, t, stride) {\n    if (t >= 0.5) {\n      for (var i = 0; i !== stride; ++i) {\n        buffer[dstOffset + i] = buffer[srcOffset + i];\n      }\n    }\n  },\n  _slerp: function (buffer, dstOffset, srcOffset, t) {\n    Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n  },\n  _lerp: function (buffer, dstOffset, srcOffset, t, stride) {\n    var s = 1 - t;\n\n    for (var i = 0; i !== stride; ++i) {\n      var j = dstOffset + i;\n      buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n    }\n  }\n});\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n// Characters [].:/ are reserved for track binding syntax.\n\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite(targetGroup, path, optionalParsedPath) {\n  var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n  this._targetGroup = targetGroup;\n  this._bindings = targetGroup.subscribe_(path, parsedPath);\n}\n\nObject.assign(Composite.prototype, {\n  getValue: function (array, offset) {\n    this.bind(); // bind all binding\n\n    var firstValidIndex = this._targetGroup.nCachedObjects_,\n        binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n    if (binding !== undefined) binding.getValue(array, offset);\n  },\n  setValue: function (array, offset) {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].setValue(array, offset);\n    }\n  },\n  bind: function () {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].bind();\n    }\n  },\n  unbind: function () {\n    var bindings = this._bindings;\n\n    for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n      bindings[i].unbind();\n    }\n  }\n});\n\nfunction PropertyBinding(rootNode, path, parsedPath) {\n  this.path = path;\n  this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n  this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n  this.rootNode = rootNode;\n}\n\nObject.assign(PropertyBinding, {\n  Composite: Composite,\n  create: function (root, path, parsedPath) {\n    if (!(root && root.isAnimationObjectGroup)) {\n      return new PropertyBinding(root, path, parsedPath);\n    } else {\n      return new PropertyBinding.Composite(root, path, parsedPath);\n    }\n  },\n\n  /**\n   * Replaces spaces with underscores and removes unsupported characters from\n   * node names, to ensure compatibility with parseTrackName().\n   *\n   * @param  {string} name Node name to be sanitized.\n   * @return {string}\n   */\n  sanitizeNodeName: function () {\n    var reservedRe = new RegExp('[' + RESERVED_CHARS_RE + ']', 'g');\n    return function sanitizeNodeName(name) {\n      return name.replace(/\\s/g, '_').replace(reservedRe, '');\n    };\n  }(),\n  parseTrackName: function () {\n    // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n    // only latin characters, and the unicode \\p{L} is not yet supported. So\n    // instead, we exclude reserved characters and match everything else.\n    var wordChar = '[^' + RESERVED_CHARS_RE + ']';\n    var wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n    // be matched to parse the rest of the track name.\n\n    var directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n    var nodeRe = /(WCOD+)?/.source.replace('WCOD', wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n    // characters. Accessor may contain any character except closing bracket.\n\n    var objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n    // contain any non-bracket characters.\n\n    var propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', wordChar);\n    var trackRe = new RegExp('' + '^' + directoryRe + nodeRe + objectRe + propertyRe + '$');\n    var supportedObjectNames = ['material', 'materials', 'bones'];\n    return function parseTrackName(trackName) {\n      var matches = trackRe.exec(trackName);\n\n      if (!matches) {\n        throw new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n      }\n\n      var results = {\n        // directoryName: matches[ 1 ], // (tschw) currently unused\n        nodeName: matches[2],\n        objectName: matches[3],\n        objectIndex: matches[4],\n        propertyName: matches[5],\n        // required\n        propertyIndex: matches[6]\n      };\n      var lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n      if (lastDot !== undefined && lastDot !== -1) {\n        var objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against a whitelist. Otherwise, there\n        // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n        // 'bar' could be the objectName, or part of a nodeName (which can\n        // include '.' characters).\n\n        if (supportedObjectNames.indexOf(objectName) !== -1) {\n          results.nodeName = results.nodeName.substring(0, lastDot);\n          results.objectName = objectName;\n        }\n      }\n\n      if (results.propertyName === null || results.propertyName.length === 0) {\n        throw new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n      }\n\n      return results;\n    };\n  }(),\n  findNode: function (root, nodeName) {\n    if (!nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n      return root;\n    } // search into skeleton bones.\n\n\n    if (root.skeleton) {\n      var bone = root.skeleton.getBoneByName(nodeName);\n\n      if (bone !== undefined) {\n        return bone;\n      }\n    } // search into node subtree.\n\n\n    if (root.children) {\n      var searchNodeSubtree = function (children) {\n        for (var i = 0; i < children.length; i++) {\n          var childNode = children[i];\n\n          if (childNode.name === nodeName || childNode.uuid === nodeName) {\n            return childNode;\n          }\n\n          var result = searchNodeSubtree(childNode.children);\n          if (result) return result;\n        }\n\n        return null;\n      };\n\n      var subTreeNode = searchNodeSubtree(root.children);\n\n      if (subTreeNode) {\n        return subTreeNode;\n      }\n    }\n\n    return null;\n  }\n});\nObject.assign(PropertyBinding.prototype, {\n  // prototype, continued\n  // these are used to \"bind\" a nonexistent property\n  _getValue_unavailable: function () {},\n  _setValue_unavailable: function () {},\n  BindingType: {\n    Direct: 0,\n    EntireArray: 1,\n    ArrayElement: 2,\n    HasFromToArray: 3\n  },\n  Versioning: {\n    None: 0,\n    NeedsUpdate: 1,\n    MatrixWorldNeedsUpdate: 2\n  },\n  GetterByBindingType: [function getValue_direct(buffer, offset) {\n    buffer[offset] = this.node[this.propertyName];\n  }, function getValue_array(buffer, offset) {\n    var source = this.resolvedProperty;\n\n    for (var i = 0, n = source.length; i !== n; ++i) {\n      buffer[offset++] = source[i];\n    }\n  }, function getValue_arrayElement(buffer, offset) {\n    buffer[offset] = this.resolvedProperty[this.propertyIndex];\n  }, function getValue_toArray(buffer, offset) {\n    this.resolvedProperty.toArray(buffer, offset);\n  }],\n  SetterByBindingTypeAndVersioning: [[// Direct\n  function setValue_direct(buffer, offset) {\n    this.targetObject[this.propertyName] = buffer[offset];\n  }, function setValue_direct_setNeedsUpdate(buffer, offset) {\n    this.targetObject[this.propertyName] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }, function setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.targetObject[this.propertyName] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// EntireArray\n  function setValue_array(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n  }, function setValue_array_setNeedsUpdate(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n\n    this.targetObject.needsUpdate = true;\n  }, function setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n    var dest = this.resolvedProperty;\n\n    for (var i = 0, n = dest.length; i !== n; ++i) {\n      dest[i] = buffer[offset++];\n    }\n\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// ArrayElement\n  function setValue_arrayElement(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n  }, function setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.needsUpdate = true;\n  }, function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }], [// HasToFromArray\n  function setValue_fromArray(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n  }, function setValue_fromArray_setNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.needsUpdate = true;\n  }, function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n    this.resolvedProperty.fromArray(buffer, offset);\n    this.targetObject.matrixWorldNeedsUpdate = true;\n  }]],\n  getValue: function getValue_unbound(targetArray, offset) {\n    this.bind();\n    this.getValue(targetArray, offset); // Note: This class uses a State pattern on a per-method basis:\n    // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n    // prototype version of these methods with one that represents\n    // the bound state. When the property is not found, the methods\n    // become no-ops.\n  },\n  setValue: function getValue_unbound(sourceArray, offset) {\n    this.bind();\n    this.setValue(sourceArray, offset);\n  },\n  // create getter / setter pair for a property in the scene graph\n  bind: function () {\n    var targetObject = this.node,\n        parsedPath = this.parsedPath,\n        objectName = parsedPath.objectName,\n        propertyName = parsedPath.propertyName,\n        propertyIndex = parsedPath.propertyIndex;\n\n    if (!targetObject) {\n      targetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n      this.node = targetObject;\n    } // set fail state so we can just 'return' on error\n\n\n    this.getValue = this._getValue_unavailable;\n    this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n    if (!targetObject) {\n      console.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n      return;\n    }\n\n    if (objectName) {\n      var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n      switch (objectName) {\n        case 'materials':\n          if (!targetObject.material) {\n            console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n            return;\n          }\n\n          if (!targetObject.material.materials) {\n            console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n            return;\n          }\n\n          targetObject = targetObject.material.materials;\n          break;\n\n        case 'bones':\n          if (!targetObject.skeleton) {\n            console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n            return;\n          } // potential future optimization: skip this if propertyIndex is already an integer\n          // and convert the integer string to a true integer.\n\n\n          targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n          for (var i = 0; i < targetObject.length; i++) {\n            if (targetObject[i].name === objectIndex) {\n              objectIndex = i;\n              break;\n            }\n          }\n\n          break;\n\n        default:\n          if (targetObject[objectName] === undefined) {\n            console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n            return;\n          }\n\n          targetObject = targetObject[objectName];\n      }\n\n      if (objectIndex !== undefined) {\n        if (targetObject[objectIndex] === undefined) {\n          console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n          return;\n        }\n\n        targetObject = targetObject[objectIndex];\n      }\n    } // resolve property\n\n\n    var nodeProperty = targetObject[propertyName];\n\n    if (nodeProperty === undefined) {\n      var nodeName = parsedPath.nodeName;\n      console.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n      return;\n    } // determine versioning scheme\n\n\n    var versioning = this.Versioning.None;\n\n    if (targetObject.needsUpdate !== undefined) {\n      // material\n      versioning = this.Versioning.NeedsUpdate;\n      this.targetObject = targetObject;\n    } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n      // node transform\n      versioning = this.Versioning.MatrixWorldNeedsUpdate;\n      this.targetObject = targetObject;\n    } // determine how the property gets bound\n\n\n    var bindingType = this.BindingType.Direct;\n\n    if (propertyIndex !== undefined) {\n      // access a sub element of the property array (only primitives are supported right now)\n      if (propertyName === \"morphTargetInfluences\") {\n        // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n        // support resolving morphTarget names into indices.\n        if (!targetObject.geometry) {\n          console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n          return;\n        }\n\n        if (targetObject.geometry.isBufferGeometry) {\n          if (!targetObject.geometry.morphAttributes) {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n            return;\n          }\n\n          for (var i = 0; i < this.node.geometry.morphAttributes.position.length; i++) {\n            if (targetObject.geometry.morphAttributes.position[i].name === propertyIndex) {\n              propertyIndex = i;\n              break;\n            }\n          }\n        } else {\n          if (!targetObject.geometry.morphTargets) {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this);\n            return;\n          }\n\n          for (var i = 0; i < this.node.geometry.morphTargets.length; i++) {\n            if (targetObject.geometry.morphTargets[i].name === propertyIndex) {\n              propertyIndex = i;\n              break;\n            }\n          }\n        }\n      }\n\n      bindingType = this.BindingType.ArrayElement;\n      this.resolvedProperty = nodeProperty;\n      this.propertyIndex = propertyIndex;\n    } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n      // must use copy for Object3D.Euler/Quaternion\n      bindingType = this.BindingType.HasFromToArray;\n      this.resolvedProperty = nodeProperty;\n    } else if (Array.isArray(nodeProperty)) {\n      bindingType = this.BindingType.EntireArray;\n      this.resolvedProperty = nodeProperty;\n    } else {\n      this.propertyName = propertyName;\n    } // select getter / setter\n\n\n    this.getValue = this.GetterByBindingType[bindingType];\n    this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n  },\n  unbind: function () {\n    this.node = null; // back to the prototype version of getValue / setValue\n    // note: avoiding to mutate the shape of 'this' via 'delete'\n\n    this.getValue = this._getValue_unbound;\n    this.setValue = this._setValue_unbound;\n  }\n}); //!\\ DECLARE ALIAS AFTER assign prototype !\n\nObject.assign(PropertyBinding.prototype, {\n  // initial state of these methods that calls 'bind'\n  _getValue_unbound: PropertyBinding.prototype.getValue,\n  _setValue_unbound: PropertyBinding.prototype.setValue\n});\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n  this.uuid = _Math.generateUUID(); // cached objects followed by the active ones\n\n  this._objects = Array.prototype.slice.call(arguments);\n  this.nCachedObjects_ = 0; // threshold\n  // note: read by PropertyBinding.Composite\n\n  var indices = {};\n  this._indicesByUUID = indices; // for bookkeeping\n\n  for (var i = 0, n = arguments.length; i !== n; ++i) {\n    indices[arguments[i].uuid] = i;\n  }\n\n  this._paths = []; // inside: string\n\n  this._parsedPaths = []; // inside: { we don't care, here }\n\n  this._bindings = []; // inside: Array< PropertyBinding >\n\n  this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n  var scope = this;\n  this.stats = {\n    objects: {\n      get total() {\n        return scope._objects.length;\n      },\n\n      get inUse() {\n        return this.total - scope.nCachedObjects_;\n      }\n\n    },\n\n    get bindingsPerObject() {\n      return scope._bindings.length;\n    }\n\n  };\n}\n\nObject.assign(AnimationObjectGroup.prototype, {\n  isAnimationObjectGroup: true,\n  add: function () {\n    var objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        paths = this._paths,\n        parsedPaths = this._parsedPaths,\n        bindings = this._bindings,\n        nBindings = bindings.length,\n        knownObject = undefined;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid];\n\n      if (index === undefined) {\n        // unknown object -> add it to the ACTIVE region\n        index = nObjects++;\n        indicesByUUID[uuid] = index;\n        objects.push(object); // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          bindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n        }\n      } else if (index < nCachedObjects) {\n        knownObject = objects[index]; // move existing object to the ACTIVE region\n\n        var firstActiveIndex = --nCachedObjects,\n            lastCachedObject = objects[firstActiveIndex];\n        indicesByUUID[lastCachedObject.uuid] = index;\n        objects[index] = lastCachedObject;\n        indicesByUUID[uuid] = firstActiveIndex;\n        objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          var bindingsForPath = bindings[j],\n              lastCached = bindingsForPath[firstActiveIndex],\n              binding = bindingsForPath[index];\n          bindingsForPath[index] = lastCached;\n\n          if (binding === undefined) {\n            // since we do not bother to create new bindings\n            // for objects that are cached, the binding may\n            // or may not exist\n            binding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n          }\n\n          bindingsForPath[firstActiveIndex] = binding;\n        }\n      } else if (objects[index] !== knownObject) {\n        console.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n      } // else the object is already where we want it to be\n\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  remove: function () {\n    var objects = this._objects,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        bindings = this._bindings,\n        nBindings = bindings.length;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid];\n\n      if (index !== undefined && index >= nCachedObjects) {\n        // move existing object into the CACHED region\n        var lastCachedIndex = nCachedObjects++,\n            firstActiveObject = objects[lastCachedIndex];\n        indicesByUUID[firstActiveObject.uuid] = index;\n        objects[index] = firstActiveObject;\n        indicesByUUID[uuid] = lastCachedIndex;\n        objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n        for (var j = 0, m = nBindings; j !== m; ++j) {\n          var bindingsForPath = bindings[j],\n              firstActive = bindingsForPath[lastCachedIndex],\n              binding = bindingsForPath[index];\n          bindingsForPath[index] = firstActive;\n          bindingsForPath[lastCachedIndex] = binding;\n        }\n      }\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  // remove & forget\n  uncache: function () {\n    var objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        indicesByUUID = this._indicesByUUID,\n        bindings = this._bindings,\n        nBindings = bindings.length;\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      var object = arguments[i],\n          uuid = object.uuid,\n          index = indicesByUUID[uuid];\n\n      if (index !== undefined) {\n        delete indicesByUUID[uuid];\n\n        if (index < nCachedObjects) {\n          // object is cached, shrink the CACHED region\n          var firstActiveIndex = --nCachedObjects,\n              lastCachedObject = objects[firstActiveIndex],\n              lastIndex = --nObjects,\n              lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n          indicesByUUID[lastObject.uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = lastObject;\n          objects.pop(); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                lastCached = bindingsForPath[firstActiveIndex],\n                last = bindingsForPath[lastIndex];\n            bindingsForPath[index] = lastCached;\n            bindingsForPath[firstActiveIndex] = last;\n            bindingsForPath.pop();\n          }\n        } else {\n          // object is active, just swap with the last and pop\n          var lastIndex = --nObjects,\n              lastObject = objects[lastIndex];\n          indicesByUUID[lastObject.uuid] = index;\n          objects[index] = lastObject;\n          objects.pop(); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j];\n            bindingsForPath[index] = bindingsForPath[lastIndex];\n            bindingsForPath.pop();\n          }\n        } // cached or active\n\n      } // if object is known\n\n    } // for arguments\n\n\n    this.nCachedObjects_ = nCachedObjects;\n  },\n  // Internal interface used by befriended PropertyBinding.Composite:\n  subscribe_: function (path, parsedPath) {\n    // returns an array of bindings for the given path that is changed\n    // according to the contained objects in the group\n    var indicesByPath = this._bindingsIndicesByPath,\n        index = indicesByPath[path],\n        bindings = this._bindings;\n    if (index !== undefined) return bindings[index];\n    var paths = this._paths,\n        parsedPaths = this._parsedPaths,\n        objects = this._objects,\n        nObjects = objects.length,\n        nCachedObjects = this.nCachedObjects_,\n        bindingsForPath = new Array(nObjects);\n    index = bindings.length;\n    indicesByPath[path] = index;\n    paths.push(path);\n    parsedPaths.push(parsedPath);\n    bindings.push(bindingsForPath);\n\n    for (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n      var object = objects[i];\n      bindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n    }\n\n    return bindingsForPath;\n  },\n  unsubscribe_: function (path) {\n    // tells the group to forget about a property path and no longer\n    // update the array previously obtained with 'subscribe_'\n    var indicesByPath = this._bindingsIndicesByPath,\n        index = indicesByPath[path];\n\n    if (index !== undefined) {\n      var paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          bindings = this._bindings,\n          lastBindingsIndex = bindings.length - 1,\n          lastBindings = bindings[lastBindingsIndex],\n          lastBindingsPath = path[lastBindingsIndex];\n      indicesByPath[lastBindingsPath] = index;\n      bindings[index] = lastBindings;\n      bindings.pop();\n      parsedPaths[index] = parsedPaths[lastBindingsIndex];\n      parsedPaths.pop();\n      paths[index] = paths[lastBindingsIndex];\n      paths.pop();\n    }\n  }\n});\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction(mixer, clip, localRoot) {\n  this._mixer = mixer;\n  this._clip = clip;\n  this._localRoot = localRoot || null;\n  var tracks = clip.tracks,\n      nTracks = tracks.length,\n      interpolants = new Array(nTracks);\n  var interpolantSettings = {\n    endingStart: ZeroCurvatureEnding,\n    endingEnd: ZeroCurvatureEnding\n  };\n\n  for (var i = 0; i !== nTracks; ++i) {\n    var interpolant = tracks[i].createInterpolant(null);\n    interpolants[i] = interpolant;\n    interpolant.settings = interpolantSettings;\n  }\n\n  this._interpolantSettings = interpolantSettings;\n  this._interpolants = interpolants; // bound by the mixer\n  // inside: PropertyMixer (managed by the mixer)\n\n  this._propertyBindings = new Array(nTracks);\n  this._cacheIndex = null; // for the memory manager\n\n  this._byClipCacheIndex = null; // for the memory manager\n\n  this._timeScaleInterpolant = null;\n  this._weightInterpolant = null;\n  this.loop = LoopRepeat;\n  this._loopCount = -1; // global mixer time when the action is to be started\n  // it's set back to 'null' upon start of the action\n\n  this._startTime = null; // scaled local time of the action\n  // gets clamped or wrapped to 0..clip.duration according to loop\n\n  this.time = 0;\n  this.timeScale = 1;\n  this._effectiveTimeScale = 1;\n  this.weight = 1;\n  this._effectiveWeight = 1;\n  this.repetitions = Infinity; // no. of repetitions when looping\n\n  this.paused = false; // true -> zero effective time scale\n\n  this.enabled = true; // false -> zero effective weight\n\n  this.clampWhenFinished = false; // keep feeding the last frame?\n\n  this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n  this.zeroSlopeAtEnd = true; // clips for start, loop and end\n}\n\nObject.assign(AnimationAction.prototype, {\n  // State & Scheduling\n  play: function () {\n    this._mixer._activateAction(this);\n\n    return this;\n  },\n  stop: function () {\n    this._mixer._deactivateAction(this);\n\n    return this.reset();\n  },\n  reset: function () {\n    this.paused = false;\n    this.enabled = true;\n    this.time = 0; // restart clip\n\n    this._loopCount = -1; // forget previous loops\n\n    this._startTime = null; // forget scheduling\n\n    return this.stopFading().stopWarping();\n  },\n  isRunning: function () {\n    return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n  },\n  // return true when play has been called\n  isScheduled: function () {\n    return this._mixer._isActiveAction(this);\n  },\n  startAt: function (time) {\n    this._startTime = time;\n    return this;\n  },\n  setLoop: function (mode, repetitions) {\n    this.loop = mode;\n    this.repetitions = repetitions;\n    return this;\n  },\n  // Weight\n  // set the weight stopping any scheduled fading\n  // although .enabled = false yields an effective weight of zero, this\n  // method does *not* change .enabled, because it would be confusing\n  setEffectiveWeight: function (weight) {\n    this.weight = weight; // note: same logic as when updated at runtime\n\n    this._effectiveWeight = this.enabled ? weight : 0;\n    return this.stopFading();\n  },\n  // return the weight considering fading and .enabled\n  getEffectiveWeight: function () {\n    return this._effectiveWeight;\n  },\n  fadeIn: function (duration) {\n    return this._scheduleFading(duration, 0, 1);\n  },\n  fadeOut: function (duration) {\n    return this._scheduleFading(duration, 1, 0);\n  },\n  crossFadeFrom: function (fadeOutAction, duration, warp) {\n    fadeOutAction.fadeOut(duration);\n    this.fadeIn(duration);\n\n    if (warp) {\n      var fadeInDuration = this._clip.duration,\n          fadeOutDuration = fadeOutAction._clip.duration,\n          startEndRatio = fadeOutDuration / fadeInDuration,\n          endStartRatio = fadeInDuration / fadeOutDuration;\n      fadeOutAction.warp(1.0, startEndRatio, duration);\n      this.warp(endStartRatio, 1.0, duration);\n    }\n\n    return this;\n  },\n  crossFadeTo: function (fadeInAction, duration, warp) {\n    return fadeInAction.crossFadeFrom(this, duration, warp);\n  },\n  stopFading: function () {\n    var weightInterpolant = this._weightInterpolant;\n\n    if (weightInterpolant !== null) {\n      this._weightInterpolant = null;\n\n      this._mixer._takeBackControlInterpolant(weightInterpolant);\n    }\n\n    return this;\n  },\n  // Time Scale Control\n  // set the time scale stopping any scheduled warping\n  // although .paused = true yields an effective time scale of zero, this\n  // method does *not* change .paused, because it would be confusing\n  setEffectiveTimeScale: function (timeScale) {\n    this.timeScale = timeScale;\n    this._effectiveTimeScale = this.paused ? 0 : timeScale;\n    return this.stopWarping();\n  },\n  // return the time scale considering warping and .paused\n  getEffectiveTimeScale: function () {\n    return this._effectiveTimeScale;\n  },\n  setDuration: function (duration) {\n    this.timeScale = this._clip.duration / duration;\n    return this.stopWarping();\n  },\n  syncWith: function (action) {\n    this.time = action.time;\n    this.timeScale = action.timeScale;\n    return this.stopWarping();\n  },\n  halt: function (duration) {\n    return this.warp(this._effectiveTimeScale, 0, duration);\n  },\n  warp: function (startTimeScale, endTimeScale, duration) {\n    var mixer = this._mixer,\n        now = mixer.time,\n        interpolant = this._timeScaleInterpolant,\n        timeScale = this.timeScale;\n\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant();\n      this._timeScaleInterpolant = interpolant;\n    }\n\n    var times = interpolant.parameterPositions,\n        values = interpolant.sampleValues;\n    times[0] = now;\n    times[1] = now + duration;\n    values[0] = startTimeScale / timeScale;\n    values[1] = endTimeScale / timeScale;\n    return this;\n  },\n  stopWarping: function () {\n    var timeScaleInterpolant = this._timeScaleInterpolant;\n\n    if (timeScaleInterpolant !== null) {\n      this._timeScaleInterpolant = null;\n\n      this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n    }\n\n    return this;\n  },\n  // Object Accessors\n  getMixer: function () {\n    return this._mixer;\n  },\n  getClip: function () {\n    return this._clip;\n  },\n  getRoot: function () {\n    return this._localRoot || this._mixer._root;\n  },\n  // Interna\n  _update: function (time, deltaTime, timeDirection, accuIndex) {\n    // called by the mixer\n    if (!this.enabled) {\n      // call ._updateWeight() to update ._effectiveWeight\n      this._updateWeight(time);\n\n      return;\n    }\n\n    var startTime = this._startTime;\n\n    if (startTime !== null) {\n      // check for scheduled start of action\n      var timeRunning = (time - startTime) * timeDirection;\n\n      if (timeRunning < 0 || timeDirection === 0) {\n        return; // yet to come / don't decide when delta = 0\n      } // start\n\n\n      this._startTime = null; // unschedule\n\n      deltaTime = timeDirection * timeRunning;\n    } // apply time scale and advance time\n\n\n    deltaTime *= this._updateTimeScale(time);\n\n    var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n    // an effective weight of 0\n\n\n    var weight = this._updateWeight(time);\n\n    if (weight > 0) {\n      var interpolants = this._interpolants;\n      var propertyMixers = this._propertyBindings;\n\n      for (var j = 0, m = interpolants.length; j !== m; ++j) {\n        interpolants[j].evaluate(clipTime);\n        propertyMixers[j].accumulate(accuIndex, weight);\n      }\n    }\n  },\n  _updateWeight: function (time) {\n    var weight = 0;\n\n    if (this.enabled) {\n      weight = this.weight;\n      var interpolant = this._weightInterpolant;\n\n      if (interpolant !== null) {\n        var interpolantValue = interpolant.evaluate(time)[0];\n        weight *= interpolantValue;\n\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopFading();\n\n          if (interpolantValue === 0) {\n            // faded out, disable\n            this.enabled = false;\n          }\n        }\n      }\n    }\n\n    this._effectiveWeight = weight;\n    return weight;\n  },\n  _updateTimeScale: function (time) {\n    var timeScale = 0;\n\n    if (!this.paused) {\n      timeScale = this.timeScale;\n      var interpolant = this._timeScaleInterpolant;\n\n      if (interpolant !== null) {\n        var interpolantValue = interpolant.evaluate(time)[0];\n        timeScale *= interpolantValue;\n\n        if (time > interpolant.parameterPositions[1]) {\n          this.stopWarping();\n\n          if (timeScale === 0) {\n            // motion has halted, pause\n            this.paused = true;\n          } else {\n            // warp done - apply final time scale\n            this.timeScale = timeScale;\n          }\n        }\n      }\n    }\n\n    this._effectiveTimeScale = timeScale;\n    return timeScale;\n  },\n  _updateTime: function (deltaTime) {\n    var time = this.time + deltaTime;\n    if (deltaTime === 0) return time;\n    var duration = this._clip.duration,\n        loop = this.loop,\n        loopCount = this._loopCount;\n\n    if (loop === LoopOnce) {\n      if (loopCount === -1) {\n        // just started\n        this._loopCount = 0;\n\n        this._setEndings(true, true, false);\n      }\n\n      handle_stop: {\n        if (time >= duration) {\n          time = duration;\n        } else if (time < 0) {\n          time = 0;\n        } else break handle_stop;\n\n        if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\n        this._mixer.dispatchEvent({\n          type: 'finished',\n          action: this,\n          direction: deltaTime < 0 ? -1 : 1\n        });\n      }\n    } else {\n      // repetitive Repeat or PingPong\n      var pingPong = loop === LoopPingPong;\n\n      if (loopCount === -1) {\n        // just started\n        if (deltaTime >= 0) {\n          loopCount = 0;\n\n          this._setEndings(true, this.repetitions === 0, pingPong);\n        } else {\n          // when looping in reverse direction, the initial\n          // transition through zero counts as a repetition,\n          // so leave loopCount at -1\n          this._setEndings(this.repetitions === 0, true, pingPong);\n        }\n      }\n\n      if (time >= duration || time < 0) {\n        // wrap around\n        var loopDelta = Math.floor(time / duration); // signed\n\n        time -= duration * loopDelta;\n        loopCount += Math.abs(loopDelta);\n        var pending = this.repetitions - loopCount;\n\n        if (pending <= 0) {\n          // have to stop (switch state, clamp time, fire event)\n          if (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n          time = deltaTime > 0 ? duration : 0;\n\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime > 0 ? 1 : -1\n          });\n        } else {\n          // keep running\n          if (pending === 1) {\n            // entering the last round\n            var atStart = deltaTime < 0;\n\n            this._setEndings(atStart, !atStart, pingPong);\n          } else {\n            this._setEndings(false, false, pingPong);\n          }\n\n          this._loopCount = loopCount;\n\n          this._mixer.dispatchEvent({\n            type: 'loop',\n            action: this,\n            loopDelta: loopDelta\n          });\n        }\n      }\n\n      if (pingPong && (loopCount & 1) === 1) {\n        // invert time for the \"pong round\"\n        this.time = time;\n        return duration - time;\n      }\n    }\n\n    this.time = time;\n    return time;\n  },\n  _setEndings: function (atStart, atEnd, pingPong) {\n    var settings = this._interpolantSettings;\n\n    if (pingPong) {\n      settings.endingStart = ZeroSlopeEnding;\n      settings.endingEnd = ZeroSlopeEnding;\n    } else {\n      // assuming for LoopOnce atStart == atEnd == true\n      if (atStart) {\n        settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n      } else {\n        settings.endingStart = WrapAroundEnding;\n      }\n\n      if (atEnd) {\n        settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n      } else {\n        settings.endingEnd = WrapAroundEnding;\n      }\n    }\n  },\n  _scheduleFading: function (duration, weightNow, weightThen) {\n    var mixer = this._mixer,\n        now = mixer.time,\n        interpolant = this._weightInterpolant;\n\n    if (interpolant === null) {\n      interpolant = mixer._lendControlInterpolant();\n      this._weightInterpolant = interpolant;\n    }\n\n    var times = interpolant.parameterPositions,\n        values = interpolant.sampleValues;\n    times[0] = now;\n    values[0] = weightNow;\n    times[1] = now + duration;\n    values[1] = weightThen;\n    return this;\n  }\n});\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer(root) {\n  this._root = root;\n\n  this._initMemoryManager();\n\n  this._accuIndex = 0;\n  this.time = 0;\n  this.timeScale = 1.0;\n}\n\nAnimationMixer.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n  constructor: AnimationMixer,\n  _bindAction: function (action, prototypeAction) {\n    var root = action._localRoot || this._root,\n        tracks = action._clip.tracks,\n        nTracks = tracks.length,\n        bindings = action._propertyBindings,\n        interpolants = action._interpolants,\n        rootUuid = root.uuid,\n        bindingsByRoot = this._bindingsByRootAndName,\n        bindingsByName = bindingsByRoot[rootUuid];\n\n    if (bindingsByName === undefined) {\n      bindingsByName = {};\n      bindingsByRoot[rootUuid] = bindingsByName;\n    }\n\n    for (var i = 0; i !== nTracks; ++i) {\n      var track = tracks[i],\n          trackName = track.name,\n          binding = bindingsByName[trackName];\n\n      if (binding !== undefined) {\n        bindings[i] = binding;\n      } else {\n        binding = bindings[i];\n\n        if (binding !== undefined) {\n          // existing binding, make sure the cache knows\n          if (binding._cacheIndex === null) {\n            ++binding.referenceCount;\n\n            this._addInactiveBinding(binding, rootUuid, trackName);\n          }\n\n          continue;\n        }\n\n        var path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n        binding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n        ++binding.referenceCount;\n\n        this._addInactiveBinding(binding, rootUuid, trackName);\n\n        bindings[i] = binding;\n      }\n\n      interpolants[i].resultBuffer = binding.buffer;\n    }\n  },\n  _activateAction: function (action) {\n    if (!this._isActiveAction(action)) {\n      if (action._cacheIndex === null) {\n        // this action has been forgotten by the cache, but the user\n        // appears to be still using it -> rebind\n        var rootUuid = (action._localRoot || this._root).uuid,\n            clipUuid = action._clip.uuid,\n            actionsForClip = this._actionsByClip[clipUuid];\n\n        this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n        this._addInactiveAction(action, clipUuid, rootUuid);\n      }\n\n      var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (binding.useCount++ === 0) {\n          this._lendBinding(binding);\n\n          binding.saveOriginalState();\n        }\n      }\n\n      this._lendAction(action);\n    }\n  },\n  _deactivateAction: function (action) {\n    if (this._isActiveAction(action)) {\n      var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (--binding.useCount === 0) {\n          binding.restoreOriginalState();\n\n          this._takeBackBinding(binding);\n        }\n      }\n\n      this._takeBackAction(action);\n    }\n  },\n  // Memory manager\n  _initMemoryManager: function () {\n    this._actions = []; // 'nActiveActions' followed by inactive ones\n\n    this._nActiveActions = 0;\n    this._actionsByClip = {}; // inside:\n    // {\n    // \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n    // \t\tactionByRoot: AnimationAction\t\t\t- lookup\n    // }\n\n    this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n    this._nActiveBindings = 0;\n    this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n    this._controlInterpolants = []; // same game as above\n\n    this._nActiveControlInterpolants = 0;\n    var scope = this;\n    this.stats = {\n      actions: {\n        get total() {\n          return scope._actions.length;\n        },\n\n        get inUse() {\n          return scope._nActiveActions;\n        }\n\n      },\n      bindings: {\n        get total() {\n          return scope._bindings.length;\n        },\n\n        get inUse() {\n          return scope._nActiveBindings;\n        }\n\n      },\n      controlInterpolants: {\n        get total() {\n          return scope._controlInterpolants.length;\n        },\n\n        get inUse() {\n          return scope._nActiveControlInterpolants;\n        }\n\n      }\n    };\n  },\n  // Memory management for AnimationAction objects\n  _isActiveAction: function (action) {\n    var index = action._cacheIndex;\n    return index !== null && index < this._nActiveActions;\n  },\n  _addInactiveAction: function (action, clipUuid, rootUuid) {\n    var actions = this._actions,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid];\n\n    if (actionsForClip === undefined) {\n      actionsForClip = {\n        knownActions: [action],\n        actionByRoot: {}\n      };\n      action._byClipCacheIndex = 0;\n      actionsByClip[clipUuid] = actionsForClip;\n    } else {\n      var knownActions = actionsForClip.knownActions;\n      action._byClipCacheIndex = knownActions.length;\n      knownActions.push(action);\n    }\n\n    action._cacheIndex = actions.length;\n    actions.push(action);\n    actionsForClip.actionByRoot[rootUuid] = action;\n  },\n  _removeInactiveAction: function (action) {\n    var actions = this._actions,\n        lastInactiveAction = actions[actions.length - 1],\n        cacheIndex = action._cacheIndex;\n    lastInactiveAction._cacheIndex = cacheIndex;\n    actions[cacheIndex] = lastInactiveAction;\n    actions.pop();\n    action._cacheIndex = null;\n    var clipUuid = action._clip.uuid,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid],\n        knownActionsForClip = actionsForClip.knownActions,\n        lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n        byClipCacheIndex = action._byClipCacheIndex;\n    lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n    knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n    knownActionsForClip.pop();\n    action._byClipCacheIndex = null;\n    var actionByRoot = actionsForClip.actionByRoot,\n        rootUuid = (action._localRoot || this._root).uuid;\n    delete actionByRoot[rootUuid];\n\n    if (knownActionsForClip.length === 0) {\n      delete actionsByClip[clipUuid];\n    }\n\n    this._removeInactiveBindingsForAction(action);\n  },\n  _removeInactiveBindingsForAction: function (action) {\n    var bindings = action._propertyBindings;\n\n    for (var i = 0, n = bindings.length; i !== n; ++i) {\n      var binding = bindings[i];\n\n      if (--binding.referenceCount === 0) {\n        this._removeInactiveBinding(binding);\n      }\n    }\n  },\n  _lendAction: function (action) {\n    // [ active actions |  inactive actions  ]\n    // [  active actions >| inactive actions ]\n    //                 s        a\n    //                  <-swap->\n    //                 a        s\n    var actions = this._actions,\n        prevIndex = action._cacheIndex,\n        lastActiveIndex = this._nActiveActions++,\n        firstInactiveAction = actions[lastActiveIndex];\n    action._cacheIndex = lastActiveIndex;\n    actions[lastActiveIndex] = action;\n    firstInactiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = firstInactiveAction;\n  },\n  _takeBackAction: function (action) {\n    // [  active actions  | inactive actions ]\n    // [ active actions |< inactive actions  ]\n    //        a        s\n    //         <-swap->\n    //        s        a\n    var actions = this._actions,\n        prevIndex = action._cacheIndex,\n        firstInactiveIndex = --this._nActiveActions,\n        lastActiveAction = actions[firstInactiveIndex];\n    action._cacheIndex = firstInactiveIndex;\n    actions[firstInactiveIndex] = action;\n    lastActiveAction._cacheIndex = prevIndex;\n    actions[prevIndex] = lastActiveAction;\n  },\n  // Memory management for PropertyMixer objects\n  _addInactiveBinding: function (binding, rootUuid, trackName) {\n    var bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid],\n        bindings = this._bindings;\n\n    if (bindingByName === undefined) {\n      bindingByName = {};\n      bindingsByRoot[rootUuid] = bindingByName;\n    }\n\n    bindingByName[trackName] = binding;\n    binding._cacheIndex = bindings.length;\n    bindings.push(binding);\n  },\n  _removeInactiveBinding: function (binding) {\n    var bindings = this._bindings,\n        propBinding = binding.binding,\n        rootUuid = propBinding.rootNode.uuid,\n        trackName = propBinding.path,\n        bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid],\n        lastInactiveBinding = bindings[bindings.length - 1],\n        cacheIndex = binding._cacheIndex;\n    lastInactiveBinding._cacheIndex = cacheIndex;\n    bindings[cacheIndex] = lastInactiveBinding;\n    bindings.pop();\n    delete bindingByName[trackName];\n\n    remove_empty_map: {\n      for (var _ in bindingByName) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\n      delete bindingsByRoot[rootUuid];\n    }\n  },\n  _lendBinding: function (binding) {\n    var bindings = this._bindings,\n        prevIndex = binding._cacheIndex,\n        lastActiveIndex = this._nActiveBindings++,\n        firstInactiveBinding = bindings[lastActiveIndex];\n    binding._cacheIndex = lastActiveIndex;\n    bindings[lastActiveIndex] = binding;\n    firstInactiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = firstInactiveBinding;\n  },\n  _takeBackBinding: function (binding) {\n    var bindings = this._bindings,\n        prevIndex = binding._cacheIndex,\n        firstInactiveIndex = --this._nActiveBindings,\n        lastActiveBinding = bindings[firstInactiveIndex];\n    binding._cacheIndex = firstInactiveIndex;\n    bindings[firstInactiveIndex] = binding;\n    lastActiveBinding._cacheIndex = prevIndex;\n    bindings[prevIndex] = lastActiveBinding;\n  },\n  // Memory management of Interpolants for weight and time scale\n  _lendControlInterpolant: function () {\n    var interpolants = this._controlInterpolants,\n        lastActiveIndex = this._nActiveControlInterpolants++,\n        interpolant = interpolants[lastActiveIndex];\n\n    if (interpolant === undefined) {\n      interpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n      interpolant.__cacheIndex = lastActiveIndex;\n      interpolants[lastActiveIndex] = interpolant;\n    }\n\n    return interpolant;\n  },\n  _takeBackControlInterpolant: function (interpolant) {\n    var interpolants = this._controlInterpolants,\n        prevIndex = interpolant.__cacheIndex,\n        firstInactiveIndex = --this._nActiveControlInterpolants,\n        lastActiveInterpolant = interpolants[firstInactiveIndex];\n    interpolant.__cacheIndex = firstInactiveIndex;\n    interpolants[firstInactiveIndex] = interpolant;\n    lastActiveInterpolant.__cacheIndex = prevIndex;\n    interpolants[prevIndex] = lastActiveInterpolant;\n  },\n  _controlInterpolantsResultBuffer: new Float32Array(1),\n  // return an action for a clip optionally using a custom root target\n  // object (this method allocates a lot of dynamic memory in case a\n  // previously unknown clip/root combination is specified)\n  clipAction: function (clip, optionalRoot) {\n    var root = optionalRoot || this._root,\n        rootUuid = root.uuid,\n        clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n        clipUuid = clipObject !== null ? clipObject.uuid : clip,\n        actionsForClip = this._actionsByClip[clipUuid],\n        prototypeAction = null;\n\n    if (actionsForClip !== undefined) {\n      var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n      if (existingAction !== undefined) {\n        return existingAction;\n      } // we know the clip, so we don't have to parse all\n      // the bindings again but can just copy\n\n\n      prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n      if (clipObject === null) clipObject = prototypeAction._clip;\n    } // clip must be known when specified via string\n\n\n    if (clipObject === null) return null; // allocate all resources required to run it\n\n    var newAction = new AnimationAction(this, clipObject, optionalRoot);\n\n    this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n    this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n    return newAction;\n  },\n  // get an existing action\n  existingAction: function (clip, optionalRoot) {\n    var root = optionalRoot || this._root,\n        rootUuid = root.uuid,\n        clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n        clipUuid = clipObject ? clipObject.uuid : clip,\n        actionsForClip = this._actionsByClip[clipUuid];\n\n    if (actionsForClip !== undefined) {\n      return actionsForClip.actionByRoot[rootUuid] || null;\n    }\n\n    return null;\n  },\n  // deactivates all previously scheduled actions\n  stopAllAction: function () {\n    var actions = this._actions,\n        nActions = this._nActiveActions,\n        bindings = this._bindings,\n        nBindings = this._nActiveBindings;\n    this._nActiveActions = 0;\n    this._nActiveBindings = 0;\n\n    for (var i = 0; i !== nActions; ++i) {\n      actions[i].reset();\n    }\n\n    for (var i = 0; i !== nBindings; ++i) {\n      bindings[i].useCount = 0;\n    }\n\n    return this;\n  },\n  // advance the time and update apply the animation\n  update: function (deltaTime) {\n    deltaTime *= this.timeScale;\n    var actions = this._actions,\n        nActions = this._nActiveActions,\n        time = this.time += deltaTime,\n        timeDirection = Math.sign(deltaTime),\n        accuIndex = this._accuIndex ^= 1; // run active actions\n\n    for (var i = 0; i !== nActions; ++i) {\n      var action = actions[i];\n\n      action._update(time, deltaTime, timeDirection, accuIndex);\n    } // update scene graph\n\n\n    var bindings = this._bindings,\n        nBindings = this._nActiveBindings;\n\n    for (var i = 0; i !== nBindings; ++i) {\n      bindings[i].apply(accuIndex);\n    }\n\n    return this;\n  },\n  // return this mixer's root target object\n  getRoot: function () {\n    return this._root;\n  },\n  // free all resources specific to a particular clip\n  uncacheClip: function (clip) {\n    var actions = this._actions,\n        clipUuid = clip.uuid,\n        actionsByClip = this._actionsByClip,\n        actionsForClip = actionsByClip[clipUuid];\n\n    if (actionsForClip !== undefined) {\n      // note: just calling _removeInactiveAction would mess up the\n      // iteration state and also require updating the state we can\n      // just throw away\n      var actionsToRemove = actionsForClip.knownActions;\n\n      for (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n        var action = actionsToRemove[i];\n\n        this._deactivateAction(action);\n\n        var cacheIndex = action._cacheIndex,\n            lastInactiveAction = actions[actions.length - 1];\n        action._cacheIndex = null;\n        action._byClipCacheIndex = null;\n        lastInactiveAction._cacheIndex = cacheIndex;\n        actions[cacheIndex] = lastInactiveAction;\n        actions.pop();\n\n        this._removeInactiveBindingsForAction(action);\n      }\n\n      delete actionsByClip[clipUuid];\n    }\n  },\n  // free all resources specific to a particular root target object\n  uncacheRoot: function (root) {\n    var rootUuid = root.uuid,\n        actionsByClip = this._actionsByClip;\n\n    for (var clipUuid in actionsByClip) {\n      var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n          action = actionByRoot[rootUuid];\n\n      if (action !== undefined) {\n        this._deactivateAction(action);\n\n        this._removeInactiveAction(action);\n      }\n    }\n\n    var bindingsByRoot = this._bindingsByRootAndName,\n        bindingByName = bindingsByRoot[rootUuid];\n\n    if (bindingByName !== undefined) {\n      for (var trackName in bindingByName) {\n        var binding = bindingByName[trackName];\n        binding.restoreOriginalState();\n\n        this._removeInactiveBinding(binding);\n      }\n    }\n  },\n  // remove a targeted clip from the cache\n  uncacheAction: function (clip, optionalRoot) {\n    var action = this.existingAction(clip, optionalRoot);\n\n    if (action !== null) {\n      this._deactivateAction(action);\n\n      this._removeInactiveAction(action);\n    }\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform(value) {\n  if (typeof value === 'string') {\n    console.warn('THREE.Uniform: Type parameter is no longer needed.');\n    value = arguments[1];\n  }\n\n  this.value = value;\n}\n\nUniform.prototype.clone = function () {\n  return new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n};\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\n\nfunction InstancedBufferGeometry() {\n  BufferGeometry.call(this);\n  this.type = 'InstancedBufferGeometry';\n  this.maxInstancedCount = undefined;\n}\n\nInstancedBufferGeometry.prototype = Object.assign(Object.create(BufferGeometry.prototype), {\n  constructor: InstancedBufferGeometry,\n  isInstancedBufferGeometry: true,\n  copy: function (source) {\n    BufferGeometry.prototype.copy.call(this, source);\n    this.maxInstancedCount = source.maxInstancedCount;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  }\n});\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute(interleavedBuffer, itemSize, offset, normalized) {\n  this.data = interleavedBuffer;\n  this.itemSize = itemSize;\n  this.offset = offset;\n  this.normalized = normalized === true;\n}\n\nObject.defineProperties(InterleavedBufferAttribute.prototype, {\n  count: {\n    get: function () {\n      return this.data.count;\n    }\n  },\n  array: {\n    get: function () {\n      return this.data.array;\n    }\n  }\n});\nObject.assign(InterleavedBufferAttribute.prototype, {\n  isInterleavedBufferAttribute: true,\n  setX: function (index, x) {\n    this.data.array[index * this.data.stride + this.offset] = x;\n    return this;\n  },\n  setY: function (index, y) {\n    this.data.array[index * this.data.stride + this.offset + 1] = y;\n    return this;\n  },\n  setZ: function (index, z) {\n    this.data.array[index * this.data.stride + this.offset + 2] = z;\n    return this;\n  },\n  setW: function (index, w) {\n    this.data.array[index * this.data.stride + this.offset + 3] = w;\n    return this;\n  },\n  getX: function (index) {\n    return this.data.array[index * this.data.stride + this.offset];\n  },\n  getY: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 1];\n  },\n  getZ: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 2];\n  },\n  getW: function (index) {\n    return this.data.array[index * this.data.stride + this.offset + 3];\n  },\n  setXY: function (index, x, y) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    return this;\n  },\n  setXYZ: function (index, x, y, z) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    return this;\n  },\n  setXYZW: function (index, x, y, z, w) {\n    index = index * this.data.stride + this.offset;\n    this.data.array[index + 0] = x;\n    this.data.array[index + 1] = y;\n    this.data.array[index + 2] = z;\n    this.data.array[index + 3] = w;\n    return this;\n  }\n});\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer(array, stride) {\n  this.array = array;\n  this.stride = stride;\n  this.count = array !== undefined ? array.length / stride : 0;\n  this.dynamic = false;\n  this.updateRange = {\n    offset: 0,\n    count: -1\n  };\n  this.version = 0;\n}\n\nObject.defineProperty(InterleavedBuffer.prototype, 'needsUpdate', {\n  set: function (value) {\n    if (value === true) this.version++;\n  }\n});\nObject.assign(InterleavedBuffer.prototype, {\n  isInterleavedBuffer: true,\n  onUploadCallback: function () {},\n  setArray: function (array) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n\n    this.count = array !== undefined ? array.length / this.stride : 0;\n    this.array = array;\n    return this;\n  },\n  setDynamic: function (value) {\n    this.dynamic = value;\n    return this;\n  },\n  copy: function (source) {\n    this.array = new source.array.constructor(source.array);\n    this.count = source.count;\n    this.stride = source.stride;\n    this.dynamic = source.dynamic;\n    return this;\n  },\n  copyAt: function (index1, attribute, index2) {\n    index1 *= this.stride;\n    index2 *= attribute.stride;\n\n    for (var i = 0, l = this.stride; i < l; i++) {\n      this.array[index1 + i] = attribute.array[index2 + i];\n    }\n\n    return this;\n  },\n  set: function (value, offset) {\n    if (offset === undefined) offset = 0;\n    this.array.set(value, offset);\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  onUpload: function (callback) {\n    this.onUploadCallback = callback;\n    return this;\n  }\n});\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer(array, stride, meshPerAttribute) {\n  InterleavedBuffer.call(this, array, stride);\n  this.meshPerAttribute = meshPerAttribute || 1;\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign(Object.create(InterleavedBuffer.prototype), {\n  constructor: InstancedInterleavedBuffer,\n  isInstancedInterleavedBuffer: true,\n  copy: function (source) {\n    InterleavedBuffer.prototype.copy.call(this, source);\n    this.meshPerAttribute = source.meshPerAttribute;\n    return this;\n  }\n});\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute(array, itemSize, meshPerAttribute) {\n  BufferAttribute.call(this, array, itemSize);\n  this.meshPerAttribute = meshPerAttribute || 1;\n}\n\nInstancedBufferAttribute.prototype = Object.assign(Object.create(BufferAttribute.prototype), {\n  constructor: InstancedBufferAttribute,\n  isInstancedBufferAttribute: true,\n  copy: function (source) {\n    BufferAttribute.prototype.copy.call(this, source);\n    this.meshPerAttribute = source.meshPerAttribute;\n    return this;\n  }\n});\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster(origin, direction, near, far) {\n  this.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n  this.near = near || 0;\n  this.far = far || Infinity;\n  this.params = {\n    Mesh: {},\n    Line: {},\n    LOD: {},\n    Points: {\n      threshold: 1\n    },\n    Sprite: {}\n  };\n  Object.defineProperties(this.params, {\n    PointCloud: {\n      get: function () {\n        console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n        return this.Points;\n      }\n    }\n  });\n}\n\nfunction ascSort(a, b) {\n  return a.distance - b.distance;\n}\n\nfunction intersectObject(object, raycaster, intersects, recursive) {\n  if (object.visible === false) return;\n  object.raycast(raycaster, intersects);\n\n  if (recursive === true) {\n    var children = object.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      intersectObject(children[i], raycaster, intersects, true);\n    }\n  }\n}\n\nObject.assign(Raycaster.prototype, {\n  linePrecision: 1,\n  set: function (origin, direction) {\n    // direction is assumed to be normalized (for accurate distance calculations)\n    this.ray.set(origin, direction);\n  },\n  setFromCamera: function (coords, camera) {\n    if (camera && camera.isPerspectiveCamera) {\n      this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n      this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n    } else if (camera && camera.isOrthographicCamera) {\n      this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n      this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n    } else {\n      console.error('THREE.Raycaster: Unsupported camera type.');\n    }\n  },\n  intersectObject: function (object, recursive, optionalTarget) {\n    var intersects = optionalTarget || [];\n    intersectObject(object, this, intersects, recursive);\n    intersects.sort(ascSort);\n    return intersects;\n  },\n  intersectObjects: function (objects, recursive, optionalTarget) {\n    var intersects = optionalTarget || [];\n\n    if (Array.isArray(objects) === false) {\n      console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n      return intersects;\n    }\n\n    for (var i = 0, l = objects.length; i < l; i++) {\n      intersectObject(objects[i], this, intersects, recursive);\n    }\n\n    intersects.sort(ascSort);\n    return intersects;\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock(autoStart) {\n  this.autoStart = autoStart !== undefined ? autoStart : true;\n  this.startTime = 0;\n  this.oldTime = 0;\n  this.elapsedTime = 0;\n  this.running = false;\n}\n\nObject.assign(Clock.prototype, {\n  start: function () {\n    this.startTime = (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\n    this.oldTime = this.startTime;\n    this.elapsedTime = 0;\n    this.running = true;\n  },\n  stop: function () {\n    this.getElapsedTime();\n    this.running = false;\n    this.autoStart = false;\n  },\n  getElapsedTime: function () {\n    this.getDelta();\n    return this.elapsedTime;\n  },\n  getDelta: function () {\n    var diff = 0;\n\n    if (this.autoStart && !this.running) {\n      this.start();\n      return 0;\n    }\n\n    if (this.running) {\n      var newTime = (typeof performance === 'undefined' ? Date : performance).now();\n      diff = (newTime - this.oldTime) / 1000;\n      this.oldTime = newTime;\n      this.elapsedTime += diff;\n    }\n\n    return diff;\n  }\n});\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical(radius, phi, theta) {\n  this.radius = radius !== undefined ? radius : 1.0;\n  this.phi = phi !== undefined ? phi : 0; // up / down towards top and bottom pole\n\n  this.theta = theta !== undefined ? theta : 0; // around the equator of the sphere\n\n  return this;\n}\n\nObject.assign(Spherical.prototype, {\n  set: function (radius, phi, theta) {\n    this.radius = radius;\n    this.phi = phi;\n    this.theta = theta;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (other) {\n    this.radius = other.radius;\n    this.phi = other.phi;\n    this.theta = other.theta;\n    return this;\n  },\n  // restrict phi to be betwee EPS and PI-EPS\n  makeSafe: function () {\n    var EPS = 0.000001;\n    this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n    return this;\n  },\n  setFromVector3: function (vec3) {\n    this.radius = vec3.length();\n\n    if (this.radius === 0) {\n      this.theta = 0;\n      this.phi = 0;\n    } else {\n      this.theta = Math.atan2(vec3.x, vec3.z); // equator angle around y-up axis\n\n      this.phi = Math.acos(_Math.clamp(vec3.y / this.radius, -1, 1)); // polar angle\n    }\n\n    return this;\n  }\n});\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical(radius, theta, y) {\n  this.radius = radius !== undefined ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\n  this.theta = theta !== undefined ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n  this.y = y !== undefined ? y : 0; // height above the x-z plane\n\n  return this;\n}\n\nObject.assign(Cylindrical.prototype, {\n  set: function (radius, theta, y) {\n    this.radius = radius;\n    this.theta = theta;\n    this.y = y;\n    return this;\n  },\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (other) {\n    this.radius = other.radius;\n    this.theta = other.theta;\n    this.y = other.y;\n    return this;\n  },\n  setFromVector3: function (vec3) {\n    this.radius = Math.sqrt(vec3.x * vec3.x + vec3.z * vec3.z);\n    this.theta = Math.atan2(vec3.x, vec3.z);\n    this.y = vec3.y;\n    return this;\n  }\n});\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2(min, max) {\n  this.min = min !== undefined ? min : new Vector2(+Infinity, +Infinity);\n  this.max = max !== undefined ? max : new Vector2(-Infinity, -Infinity);\n}\n\nObject.assign(Box2.prototype, {\n  set: function (min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  },\n  setFromPoints: function (points) {\n    this.makeEmpty();\n\n    for (var i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n\n    return this;\n  },\n  setFromCenterAndSize: function () {\n    var v1 = new Vector2();\n    return function setFromCenterAndSize(center, size) {\n      var halfSize = v1.copy(size).multiplyScalar(0.5);\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    };\n  }(),\n  clone: function () {\n    return new this.constructor().copy(this);\n  },\n  copy: function (box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  },\n  makeEmpty: function () {\n    this.min.x = this.min.y = +Infinity;\n    this.max.x = this.max.y = -Infinity;\n    return this;\n  },\n  isEmpty: function () {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n    return this.max.x < this.min.x || this.max.y < this.min.y;\n  },\n  getCenter: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Box2: .getCenter() target is now required');\n      target = new Vector2();\n    }\n\n    return this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n  },\n  getSize: function (target) {\n    if (target === undefined) {\n      console.warn('THREE.Box2: .getSize() target is now required');\n      target = new Vector2();\n    }\n\n    return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n  },\n  expandByPoint: function (point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  },\n  expandByVector: function (vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  },\n  expandByScalar: function (scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  },\n  containsPoint: function (point) {\n    return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n  },\n  containsBox: function (box) {\n    return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n  },\n  getParameter: function (point, target) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n    if (target === undefined) {\n      console.warn('THREE.Box2: .getParameter() target is now required');\n      target = new Vector2();\n    }\n\n    return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n  },\n  intersectsBox: function (box) {\n    // using 4 splitting planes to rule out intersections\n    return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n  },\n  clampPoint: function (point, target) {\n    if (target === undefined) {\n      console.warn('THREE.Box2: .clampPoint() target is now required');\n      target = new Vector2();\n    }\n\n    return target.copy(point).clamp(this.min, this.max);\n  },\n  distanceToPoint: function () {\n    var v1 = new Vector2();\n    return function distanceToPoint(point) {\n      var clampedPoint = v1.copy(point).clamp(this.min, this.max);\n      return clampedPoint.sub(point).length();\n    };\n  }(),\n  intersect: function (box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  },\n  union: function (box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  },\n  translate: function (offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  },\n  equals: function (box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n});\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject(material) {\n  Object3D.call(this);\n  this.material = material;\n\n  this.render = function ()\n  /* renderCallback */\n  {};\n}\n\nImmediateRenderObject.prototype = Object.create(Object3D.prototype);\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper(object, size, hex, linewidth) {\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xff0000;\n  var width = linewidth !== undefined ? linewidth : 1; //\n\n  var nNormals = 0;\n  var objGeometry = this.object.geometry;\n\n  if (objGeometry && objGeometry.isGeometry) {\n    nNormals = objGeometry.faces.length * 3;\n  } else if (objGeometry && objGeometry.isBufferGeometry) {\n    nNormals = objGeometry.attributes.normal.count;\n  } //\n\n\n  var geometry = new BufferGeometry();\n  var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n  geometry.addAttribute('position', positions);\n  LineSegments.call(this, geometry, new LineBasicMaterial({\n    color: color,\n    linewidth: width\n  })); //\n\n  this.matrixAutoUpdate = false;\n  this.update();\n}\n\nVertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = function () {\n  var v1 = new Vector3();\n  var v2 = new Vector3();\n  var normalMatrix = new Matrix3();\n  return function update() {\n    var keys = ['a', 'b', 'c'];\n    this.object.updateMatrixWorld(true);\n    normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      var vertices = objGeometry.vertices;\n      var faces = objGeometry.faces;\n      var idx = 0;\n\n      for (var i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n\n        for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          var vertex = vertices[face[keys[j]]];\n          var normal = face.vertexNormals[j];\n          v1.copy(vertex).applyMatrix4(matrixWorld);\n          v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n          position.setXYZ(idx, v1.x, v1.y, v1.z);\n          idx = idx + 1;\n          position.setXYZ(idx, v2.x, v2.y, v2.z);\n          idx = idx + 1;\n        }\n      }\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n      var objPos = objGeometry.attributes.position;\n      var objNorm = objGeometry.attributes.normal;\n      var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n      for (var j = 0, jl = objPos.count; j < jl; j++) {\n        v1.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n        v2.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n        v2.applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n        position.setXYZ(idx, v1.x, v1.y, v1.z);\n        idx = idx + 1;\n        position.setXYZ(idx, v2.x, v2.y, v2.z);\n        idx = idx + 1;\n      }\n    }\n\n    position.needsUpdate = true;\n  };\n}();\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nfunction SpotLightHelper(light, color) {\n  Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.color = color;\n  var geometry = new BufferGeometry();\n  var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n  for (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n    var p1 = i / l * Math.PI * 2;\n    var p2 = j / l * Math.PI * 2;\n    positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n  }\n\n  geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n  var material = new LineBasicMaterial({\n    fog: false\n  });\n  this.cone = new LineSegments(geometry, material);\n  this.add(this.cone);\n  this.update();\n}\n\nSpotLightHelper.prototype = Object.create(Object3D.prototype);\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n  this.cone.geometry.dispose();\n  this.cone.material.dispose();\n};\n\nSpotLightHelper.prototype.update = function () {\n  var vector = new Vector3();\n  var vector2 = new Vector3();\n  return function update() {\n    this.light.updateMatrixWorld();\n    var coneLength = this.light.distance ? this.light.distance : 1000;\n    var coneWidth = coneLength * Math.tan(this.light.angle);\n    this.cone.scale.set(coneWidth, coneWidth, coneLength);\n    vector.setFromMatrixPosition(this.light.matrixWorld);\n    vector2.setFromMatrixPosition(this.light.target.matrixWorld);\n    this.cone.lookAt(vector2.sub(vector));\n\n    if (this.color !== undefined) {\n      this.cone.material.color.set(this.color);\n    } else {\n      this.cone.material.color.copy(this.light.color);\n    }\n  };\n}();\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n\nfunction getBoneList(object) {\n  var boneList = [];\n\n  if (object && object.isBone) {\n    boneList.push(object);\n  }\n\n  for (var i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, getBoneList(object.children[i]));\n  }\n\n  return boneList;\n}\n\nfunction SkeletonHelper(object) {\n  var bones = getBoneList(object);\n  var geometry = new BufferGeometry();\n  var vertices = [];\n  var colors = [];\n  var color1 = new Color(0, 0, 1);\n  var color2 = new Color(0, 1, 0);\n\n  for (var i = 0; i < bones.length; i++) {\n    var bone = bones[i];\n\n    if (bone.parent && bone.parent.isBone) {\n      vertices.push(0, 0, 0);\n      vertices.push(0, 0, 0);\n      colors.push(color1.r, color1.g, color1.b);\n      colors.push(color2.r, color2.g, color2.b);\n    }\n  }\n\n  geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n  var material = new LineBasicMaterial({\n    vertexColors: VertexColors,\n    depthTest: false,\n    depthWrite: false,\n    transparent: true\n  });\n  LineSegments.call(this, geometry, material);\n  this.root = object;\n  this.bones = bones;\n  this.matrix = object.matrixWorld;\n  this.matrixAutoUpdate = false;\n}\n\nSkeletonHelper.prototype = Object.create(LineSegments.prototype);\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n  var vector = new Vector3();\n  var boneMatrix = new Matrix4();\n  var matrixWorldInv = new Matrix4();\n  return function updateMatrixWorld(force) {\n    var bones = this.bones;\n    var geometry = this.geometry;\n    var position = geometry.getAttribute('position');\n    matrixWorldInv.getInverse(this.root.matrixWorld);\n\n    for (var i = 0, j = 0; i < bones.length; i++) {\n      var bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        boneMatrix.multiplyMatrices(matrixWorldInv, bone.matrixWorld);\n        vector.setFromMatrixPosition(boneMatrix);\n        position.setXYZ(j, vector.x, vector.y, vector.z);\n        boneMatrix.multiplyMatrices(matrixWorldInv, bone.parent.matrixWorld);\n        vector.setFromMatrixPosition(boneMatrix);\n        position.setXYZ(j + 1, vector.x, vector.y, vector.z);\n        j += 2;\n      }\n    }\n\n    geometry.getAttribute('position').needsUpdate = true;\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n  };\n}();\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLightHelper(light, sphereSize, color) {\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.color = color;\n  var geometry = new SphereBufferGeometry(sphereSize, 4, 2);\n  var material = new MeshBasicMaterial({\n    wireframe: true,\n    fog: false\n  });\n  Mesh.call(this, geometry, material);\n  this.matrix = this.light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.update();\n  /*\n  var distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n  var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n  \tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n  this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n  \tvar d = light.distance;\n  \tif ( d === 0.0 ) {\n  \t\tthis.lightDistance.visible = false;\n  \t} else {\n  \t\tthis.lightDistance.scale.set( d, d, d );\n  \t}\n  \tthis.add( this.lightDistance );\n  */\n}\n\nPointLightHelper.prototype = Object.create(Mesh.prototype);\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n  this.geometry.dispose();\n  this.material.dispose();\n};\n\nPointLightHelper.prototype.update = function () {\n  if (this.color !== undefined) {\n    this.material.color.set(this.color);\n  } else {\n    this.material.color.copy(this.light.color);\n  }\n  /*\n  var d = this.light.distance;\n  \tif ( d === 0.0 ) {\n  \t\tthis.lightDistance.visible = false;\n  \t} else {\n  \t\tthis.lightDistance.visible = true;\n  \tthis.lightDistance.scale.set( d, d, d );\n  \t}\n  */\n\n};\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nfunction RectAreaLightHelper(light, color) {\n  Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.color = color;\n  var material = new LineBasicMaterial({\n    fog: false\n  });\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new BufferAttribute(new Float32Array(5 * 3), 3));\n  this.line = new Line(geometry, material);\n  this.add(this.line);\n  this.update();\n}\n\nRectAreaLightHelper.prototype = Object.create(Object3D.prototype);\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n  this.children[0].geometry.dispose();\n  this.children[0].material.dispose();\n};\n\nRectAreaLightHelper.prototype.update = function () {\n  // calculate new dimensions of the helper\n  var hx = this.light.width * 0.5;\n  var hy = this.light.height * 0.5;\n  var position = this.line.geometry.attributes.position;\n  var array = position.array; // update vertices\n\n  array[0] = hx;\n  array[1] = -hy;\n  array[2] = 0;\n  array[3] = hx;\n  array[4] = hy;\n  array[5] = 0;\n  array[6] = -hx;\n  array[7] = hy;\n  array[8] = 0;\n  array[9] = -hx;\n  array[10] = -hy;\n  array[11] = 0;\n  array[12] = hx;\n  array[13] = -hy;\n  array[14] = 0;\n  position.needsUpdate = true;\n\n  if (this.color !== undefined) {\n    this.line.material.color.set(this.color);\n  } else {\n    this.line.material.color.copy(this.light.color);\n  }\n};\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n\nfunction HemisphereLightHelper(light, size, color) {\n  Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.color = color;\n  var geometry = new OctahedronBufferGeometry(size);\n  geometry.rotateY(Math.PI * 0.5);\n  this.material = new MeshBasicMaterial({\n    wireframe: true,\n    fog: false\n  });\n  if (this.color === undefined) this.material.vertexColors = VertexColors;\n  var position = geometry.getAttribute('position');\n  var colors = new Float32Array(position.count * 3);\n  geometry.addAttribute('color', new BufferAttribute(colors, 3));\n  this.add(new Mesh(geometry, this.material));\n  this.update();\n}\n\nHemisphereLightHelper.prototype = Object.create(Object3D.prototype);\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n  this.children[0].geometry.dispose();\n  this.children[0].material.dispose();\n};\n\nHemisphereLightHelper.prototype.update = function () {\n  var vector = new Vector3();\n  var color1 = new Color();\n  var color2 = new Color();\n  return function update() {\n    var mesh = this.children[0];\n\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n    } else {\n      var colors = mesh.geometry.getAttribute('color');\n      color1.copy(this.light.color);\n      color2.copy(this.light.groundColor);\n\n      for (var i = 0, l = colors.count; i < l; i++) {\n        var color = i < l / 2 ? color1 : color2;\n        colors.setXYZ(i, color.r, color.g, color.b);\n      }\n\n      colors.needsUpdate = true;\n    }\n\n    mesh.lookAt(vector.setFromMatrixPosition(this.light.matrixWorld).negate());\n  };\n}();\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction GridHelper(size, divisions, color1, color2) {\n  size = size || 10;\n  divisions = divisions || 10;\n  color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n  color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n  var center = divisions / 2;\n  var step = size / divisions;\n  var halfSize = size / 2;\n  var vertices = [],\n      colors = [];\n\n  for (var i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n    vertices.push(-halfSize, 0, k, halfSize, 0, k);\n    vertices.push(k, 0, -halfSize, k, 0, halfSize);\n    var color = i === center ? color1 : color2;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n    color.toArray(colors, j);\n    j += 3;\n  }\n\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n  var material = new LineBasicMaterial({\n    vertexColors: VertexColors\n  });\n  LineSegments.call(this, geometry, material);\n}\n\nGridHelper.prototype = Object.create(LineSegments.prototype);\nGridHelper.prototype.constructor = GridHelper;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper(radius, radials, circles, divisions, color1, color2) {\n  radius = radius || 10;\n  radials = radials || 16;\n  circles = circles || 8;\n  divisions = divisions || 64;\n  color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n  color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n  var vertices = [];\n  var colors = [];\n  var x, z;\n  var v, i, j, r, color; // create the radials\n\n  for (i = 0; i <= radials; i++) {\n    v = i / radials * (Math.PI * 2);\n    x = Math.sin(v) * radius;\n    z = Math.cos(v) * radius;\n    vertices.push(0, 0, 0);\n    vertices.push(x, 0, z);\n    color = i & 1 ? color1 : color2;\n    colors.push(color.r, color.g, color.b);\n    colors.push(color.r, color.g, color.b);\n  } // create the circles\n\n\n  for (i = 0; i <= circles; i++) {\n    color = i & 1 ? color1 : color2;\n    r = radius - radius / circles * i;\n\n    for (j = 0; j < divisions; j++) {\n      // first vertex\n      v = j / divisions * (Math.PI * 2);\n      x = Math.sin(v) * r;\n      z = Math.cos(v) * r;\n      vertices.push(x, 0, z);\n      colors.push(color.r, color.g, color.b); // second vertex\n\n      v = (j + 1) / divisions * (Math.PI * 2);\n      x = Math.sin(v) * r;\n      z = Math.cos(v) * r;\n      vertices.push(x, 0, z);\n      colors.push(color.r, color.g, color.b);\n    }\n  }\n\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n  var material = new LineBasicMaterial({\n    vertexColors: VertexColors\n  });\n  LineSegments.call(this, geometry, material);\n}\n\nPolarGridHelper.prototype = Object.create(LineSegments.prototype);\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper(object, size, hex, linewidth) {\n  // FaceNormalsHelper only supports THREE.Geometry\n  this.object = object;\n  this.size = size !== undefined ? size : 1;\n  var color = hex !== undefined ? hex : 0xffff00;\n  var width = linewidth !== undefined ? linewidth : 1; //\n\n  var nNormals = 0;\n  var objGeometry = this.object.geometry;\n\n  if (objGeometry && objGeometry.isGeometry) {\n    nNormals = objGeometry.faces.length;\n  } else {\n    console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');\n  } //\n\n\n  var geometry = new BufferGeometry();\n  var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n  geometry.addAttribute('position', positions);\n  LineSegments.call(this, geometry, new LineBasicMaterial({\n    color: color,\n    linewidth: width\n  })); //\n\n  this.matrixAutoUpdate = false;\n  this.update();\n}\n\nFaceNormalsHelper.prototype = Object.create(LineSegments.prototype);\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = function () {\n  var v1 = new Vector3();\n  var v2 = new Vector3();\n  var normalMatrix = new Matrix3();\n  return function update() {\n    this.object.updateMatrixWorld(true);\n    normalMatrix.getNormalMatrix(this.object.matrixWorld);\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n    var vertices = objGeometry.vertices;\n    var faces = objGeometry.faces;\n    var idx = 0;\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n      var normal = face.normal;\n      v1.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);\n      v2.copy(normal).applyMatrix3(normalMatrix).normalize().multiplyScalar(this.size).add(v1);\n      position.setXYZ(idx, v1.x, v1.y, v1.z);\n      idx = idx + 1;\n      position.setXYZ(idx, v2.x, v2.y, v2.z);\n      idx = idx + 1;\n    }\n\n    position.needsUpdate = true;\n  };\n}();\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nfunction DirectionalLightHelper(light, size, color) {\n  Object3D.call(this);\n  this.light = light;\n  this.light.updateMatrixWorld();\n  this.matrix = light.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.color = color;\n  if (size === undefined) size = 1;\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n  var material = new LineBasicMaterial({\n    fog: false\n  });\n  this.lightPlane = new Line(geometry, material);\n  this.add(this.lightPlane);\n  geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n  this.targetLine = new Line(geometry, material);\n  this.add(this.targetLine);\n  this.update();\n}\n\nDirectionalLightHelper.prototype = Object.create(Object3D.prototype);\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n  this.lightPlane.geometry.dispose();\n  this.lightPlane.material.dispose();\n  this.targetLine.geometry.dispose();\n  this.targetLine.material.dispose();\n};\n\nDirectionalLightHelper.prototype.update = function () {\n  var v1 = new Vector3();\n  var v2 = new Vector3();\n  var v3 = new Vector3();\n  return function update() {\n    v1.setFromMatrixPosition(this.light.matrixWorld);\n    v2.setFromMatrixPosition(this.light.target.matrixWorld);\n    v3.subVectors(v2, v1);\n    this.lightPlane.lookAt(v3);\n\n    if (this.color !== undefined) {\n      this.lightPlane.material.color.set(this.color);\n      this.targetLine.material.color.set(this.color);\n    } else {\n      this.lightPlane.material.color.copy(this.light.color);\n      this.targetLine.material.color.copy(this.light.color);\n    }\n\n    this.targetLine.lookAt(v3);\n    this.targetLine.scale.z = v3.length();\n  };\n}();\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\n\nfunction CameraHelper(camera) {\n  var geometry = new BufferGeometry();\n  var material = new LineBasicMaterial({\n    color: 0xffffff,\n    vertexColors: FaceColors\n  });\n  var vertices = [];\n  var colors = [];\n  var pointMap = {}; // colors\n\n  var colorFrustum = new Color(0xffaa00);\n  var colorCone = new Color(0xff0000);\n  var colorUp = new Color(0x00aaff);\n  var colorTarget = new Color(0xffffff);\n  var colorCross = new Color(0x333333); // near\n\n  addLine('n1', 'n2', colorFrustum);\n  addLine('n2', 'n4', colorFrustum);\n  addLine('n4', 'n3', colorFrustum);\n  addLine('n3', 'n1', colorFrustum); // far\n\n  addLine('f1', 'f2', colorFrustum);\n  addLine('f2', 'f4', colorFrustum);\n  addLine('f4', 'f3', colorFrustum);\n  addLine('f3', 'f1', colorFrustum); // sides\n\n  addLine('n1', 'f1', colorFrustum);\n  addLine('n2', 'f2', colorFrustum);\n  addLine('n3', 'f3', colorFrustum);\n  addLine('n4', 'f4', colorFrustum); // cone\n\n  addLine('p', 'n1', colorCone);\n  addLine('p', 'n2', colorCone);\n  addLine('p', 'n3', colorCone);\n  addLine('p', 'n4', colorCone); // up\n\n  addLine('u1', 'u2', colorUp);\n  addLine('u2', 'u3', colorUp);\n  addLine('u3', 'u1', colorUp); // target\n\n  addLine('c', 't', colorTarget);\n  addLine('p', 'c', colorCross); // cross\n\n  addLine('cn1', 'cn2', colorCross);\n  addLine('cn3', 'cn4', colorCross);\n  addLine('cf1', 'cf2', colorCross);\n  addLine('cf3', 'cf4', colorCross);\n\n  function addLine(a, b, color) {\n    addPoint(a, color);\n    addPoint(b, color);\n  }\n\n  function addPoint(id, color) {\n    vertices.push(0, 0, 0);\n    colors.push(color.r, color.g, color.b);\n\n    if (pointMap[id] === undefined) {\n      pointMap[id] = [];\n    }\n\n    pointMap[id].push(vertices.length / 3 - 1);\n  }\n\n  geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n  LineSegments.call(this, geometry, material);\n  this.camera = camera;\n  if (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n  this.matrix = camera.matrixWorld;\n  this.matrixAutoUpdate = false;\n  this.pointMap = pointMap;\n  this.update();\n}\n\nCameraHelper.prototype = Object.create(LineSegments.prototype);\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n  var geometry, pointMap;\n  var vector = new Vector3();\n  var camera = new Camera();\n\n  function setPoint(point, x, y, z) {\n    vector.set(x, y, z).unproject(camera);\n    var points = pointMap[point];\n\n    if (points !== undefined) {\n      var position = geometry.getAttribute('position');\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        position.setXYZ(points[i], vector.x, vector.y, vector.z);\n      }\n    }\n  }\n\n  return function update() {\n    geometry = this.geometry;\n    pointMap = this.pointMap;\n    var w = 1,\n        h = 1; // we need just camera projection matrix\n    // world matrix must be identity\n\n    camera.projectionMatrix.copy(this.camera.projectionMatrix); // center / target\n\n    setPoint('c', 0, 0, -1);\n    setPoint('t', 0, 0, 1); // near\n\n    setPoint('n1', -w, -h, -1);\n    setPoint('n2', w, -h, -1);\n    setPoint('n3', -w, h, -1);\n    setPoint('n4', w, h, -1); // far\n\n    setPoint('f1', -w, -h, 1);\n    setPoint('f2', w, -h, 1);\n    setPoint('f3', -w, h, 1);\n    setPoint('f4', w, h, 1); // up\n\n    setPoint('u1', w * 0.7, h * 1.1, -1);\n    setPoint('u2', -w * 0.7, h * 1.1, -1);\n    setPoint('u3', 0, h * 2, -1); // cross\n\n    setPoint('cf1', -w, 0, 1);\n    setPoint('cf2', w, 0, 1);\n    setPoint('cf3', 0, -h, 1);\n    setPoint('cf4', 0, h, 1);\n    setPoint('cn1', -w, 0, -1);\n    setPoint('cn2', w, 0, -1);\n    setPoint('cn3', 0, -h, -1);\n    setPoint('cn4', 0, h, -1);\n    geometry.getAttribute('position').needsUpdate = true;\n  };\n}();\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\n\nfunction BoxHelper(object, color) {\n  this.object = object;\n  if (color === undefined) color = 0xffff00;\n  var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n  var positions = new Float32Array(8 * 3);\n  var geometry = new BufferGeometry();\n  geometry.setIndex(new BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new BufferAttribute(positions, 3));\n  LineSegments.call(this, geometry, new LineBasicMaterial({\n    color: color\n  }));\n  this.matrixAutoUpdate = false;\n  this.update();\n}\n\nBoxHelper.prototype = Object.create(LineSegments.prototype);\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = function () {\n  var box = new Box3();\n  return function update(object) {\n    if (object !== undefined) {\n      console.warn('THREE.BoxHelper: .update() has no longer arguments.');\n    }\n\n    if (this.object !== undefined) {\n      box.setFromObject(this.object);\n    }\n\n    if (box.isEmpty()) return;\n    var min = box.min;\n    var max = box.max;\n    /*\n      5____4\n    1/___0/|\n    | 6__|_7\n    2/___3/\n    \t0: max.x, max.y, max.z\n    1: min.x, max.y, max.z\n    2: min.x, min.y, max.z\n    3: max.x, min.y, max.z\n    4: max.x, max.y, min.z\n    5: min.x, max.y, min.z\n    6: min.x, min.y, min.z\n    7: max.x, min.y, min.z\n    */\n\n    var position = this.geometry.attributes.position;\n    var array = position.array;\n    array[0] = max.x;\n    array[1] = max.y;\n    array[2] = max.z;\n    array[3] = min.x;\n    array[4] = max.y;\n    array[5] = max.z;\n    array[6] = min.x;\n    array[7] = min.y;\n    array[8] = max.z;\n    array[9] = max.x;\n    array[10] = min.y;\n    array[11] = max.z;\n    array[12] = max.x;\n    array[13] = max.y;\n    array[14] = min.z;\n    array[15] = min.x;\n    array[16] = max.y;\n    array[17] = min.z;\n    array[18] = min.x;\n    array[19] = min.y;\n    array[20] = min.z;\n    array[21] = max.x;\n    array[22] = min.y;\n    array[23] = min.z;\n    position.needsUpdate = true;\n    this.geometry.computeBoundingSphere();\n  };\n}();\n\nBoxHelper.prototype.setFromObject = function (object) {\n  this.object = object;\n  this.update();\n  return this;\n};\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nfunction Box3Helper(box, hex) {\n  this.type = 'Box3Helper';\n  this.box = box;\n  var color = hex !== undefined ? hex : 0xffff00;\n  var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n  var positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n  var geometry = new BufferGeometry();\n  geometry.setIndex(new BufferAttribute(indices, 1));\n  geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n  LineSegments.call(this, geometry, new LineBasicMaterial({\n    color: color\n  }));\n  this.geometry.computeBoundingSphere();\n}\n\nBox3Helper.prototype = Object.create(LineSegments.prototype);\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function (force) {\n  var box = this.box;\n  if (box.isEmpty()) return;\n  box.getCenter(this.position);\n  box.getSize(this.scale);\n  this.scale.multiplyScalar(0.5);\n  Object3D.prototype.updateMatrixWorld.call(this, force);\n};\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\n\nfunction PlaneHelper(plane, size, hex) {\n  this.type = 'PlaneHelper';\n  this.plane = plane;\n  this.size = size === undefined ? 1 : size;\n  var color = hex !== undefined ? hex : 0xffff00;\n  var positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute(positions, 3));\n  geometry.computeBoundingSphere();\n  Line.call(this, geometry, new LineBasicMaterial({\n    color: color\n  })); //\n\n  var positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n  var geometry2 = new BufferGeometry();\n  geometry2.addAttribute('position', new Float32BufferAttribute(positions2, 3));\n  geometry2.computeBoundingSphere();\n  this.add(new Mesh(geometry2, new MeshBasicMaterial({\n    color: color,\n    opacity: 0.2,\n    transparent: true,\n    depthWrite: false\n  })));\n}\n\nPlaneHelper.prototype = Object.create(Line.prototype);\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function (force) {\n  var scale = -this.plane.constant;\n  if (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n  this.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n  this.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n  this.lookAt(this.plane.normal);\n  Object3D.prototype.updateMatrixWorld.call(this, force);\n};\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\n\nvar lineGeometry;\nvar coneGeometry;\n\nfunction ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n  // dir is assumed to be normalized\n  Object3D.call(this);\n  if (color === undefined) color = 0xffff00;\n  if (length === undefined) length = 1;\n  if (headLength === undefined) headLength = 0.2 * length;\n  if (headWidth === undefined) headWidth = 0.2 * headLength;\n\n  if (lineGeometry === undefined) {\n    lineGeometry = new BufferGeometry();\n    lineGeometry.addAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n    coneGeometry = new CylinderBufferGeometry(0, 0.5, 1, 5, 1);\n    coneGeometry.translate(0, -0.5, 0);\n  }\n\n  this.position.copy(origin);\n  this.line = new Line(lineGeometry, new LineBasicMaterial({\n    color: color\n  }));\n  this.line.matrixAutoUpdate = false;\n  this.add(this.line);\n  this.cone = new Mesh(coneGeometry, new MeshBasicMaterial({\n    color: color\n  }));\n  this.cone.matrixAutoUpdate = false;\n  this.add(this.cone);\n  this.setDirection(dir);\n  this.setLength(length, headLength, headWidth);\n}\n\nArrowHelper.prototype = Object.create(Object3D.prototype);\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = function () {\n  var axis = new Vector3();\n  var radians;\n  return function setDirection(dir) {\n    // dir is assumed to be normalized\n    if (dir.y > 0.99999) {\n      this.quaternion.set(0, 0, 0, 1);\n    } else if (dir.y < -0.99999) {\n      this.quaternion.set(1, 0, 0, 0);\n    } else {\n      axis.set(dir.z, 0, -dir.x).normalize();\n      radians = Math.acos(dir.y);\n      this.quaternion.setFromAxisAngle(axis, radians);\n    }\n  };\n}();\n\nArrowHelper.prototype.setLength = function (length, headLength, headWidth) {\n  if (headLength === undefined) headLength = 0.2 * length;\n  if (headWidth === undefined) headWidth = 0.2 * headLength;\n  this.line.scale.set(1, Math.max(0, length - headLength), 1);\n  this.line.updateMatrix();\n  this.cone.scale.set(headWidth, headLength, headWidth);\n  this.cone.position.y = length;\n  this.cone.updateMatrix();\n};\n\nArrowHelper.prototype.setColor = function (color) {\n  this.line.material.color.copy(color);\n  this.cone.material.color.copy(color);\n};\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction AxesHelper(size) {\n  size = size || 1;\n  var vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n  var colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n  var geometry = new BufferGeometry();\n  geometry.addAttribute('position', new Float32BufferAttribute(vertices, 3));\n  geometry.addAttribute('color', new Float32BufferAttribute(colors, 3));\n  var material = new LineBasicMaterial({\n    vertexColors: VertexColors\n  });\n  LineSegments.call(this, geometry, material);\n}\n\nAxesHelper.prototype = Object.create(LineSegments.prototype);\nAxesHelper.prototype.constructor = AxesHelper;\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4(a, b, c, d, normal, color, materialIndex) {\n  console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n  return new Face3(a, b, c, normal, color, materialIndex);\n}\n\nvar LineStrip = 0;\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial(materials) {\n  console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n  return materials;\n}\n\nfunction MultiMaterial(materials) {\n  if (materials === undefined) materials = [];\n  console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n  materials.isMultiMaterial = true;\n  materials.materials = materials;\n\n  materials.clone = function () {\n    return materials.slice();\n  };\n\n  return materials;\n}\n\nfunction PointCloud(geometry, material) {\n  console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n  return new Points(geometry, material);\n}\n\nfunction Particle(material) {\n  console.warn('THREE.Particle has been renamed to THREE.Sprite.');\n  return new Sprite(material);\n}\n\nfunction ParticleSystem(geometry, material) {\n  console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n  return new Points(geometry, material);\n}\n\nfunction PointCloudMaterial(parameters) {\n  console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n  return new PointsMaterial(parameters);\n}\n\nfunction ParticleBasicMaterial(parameters) {\n  console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n  return new PointsMaterial(parameters);\n}\n\nfunction ParticleSystemMaterial(parameters) {\n  console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n  return new PointsMaterial(parameters);\n}\n\nfunction Vertex(x, y, z) {\n  console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n  return new Vector3(x, y, z);\n} //\n\n\nfunction DynamicBufferAttribute(array, itemSize) {\n  console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');\n  return new BufferAttribute(array, itemSize).setDynamic(true);\n}\n\nfunction Int8Attribute(array, itemSize) {\n  console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n  return new Int8BufferAttribute(array, itemSize);\n}\n\nfunction Uint8Attribute(array, itemSize) {\n  console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n  return new Uint8BufferAttribute(array, itemSize);\n}\n\nfunction Uint8ClampedAttribute(array, itemSize) {\n  console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n  return new Uint8ClampedBufferAttribute(array, itemSize);\n}\n\nfunction Int16Attribute(array, itemSize) {\n  console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n  return new Int16BufferAttribute(array, itemSize);\n}\n\nfunction Uint16Attribute(array, itemSize) {\n  console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n  return new Uint16BufferAttribute(array, itemSize);\n}\n\nfunction Int32Attribute(array, itemSize) {\n  console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n  return new Int32BufferAttribute(array, itemSize);\n}\n\nfunction Uint32Attribute(array, itemSize) {\n  console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n  return new Uint32BufferAttribute(array, itemSize);\n}\n\nfunction Float32Attribute(array, itemSize) {\n  console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n  return new Float32BufferAttribute(array, itemSize);\n}\n\nfunction Float64Attribute(array, itemSize) {\n  console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n  return new Float64BufferAttribute(array, itemSize);\n} //\n\n\nCurve.create = function (construct, getPoint) {\n  console.log('THREE.Curve.create() has been deprecated');\n  construct.prototype = Object.create(Curve.prototype);\n  construct.prototype.constructor = construct;\n  construct.prototype.getPoint = getPoint;\n  return construct;\n}; //\n\n\nObject.assign(CurvePath.prototype, {\n  createPointsGeometry: function (divisions) {\n    console.warn('THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.'); // generate geometry from path points (for Line or Points objects)\n\n    var pts = this.getPoints(divisions);\n    return this.createGeometry(pts);\n  },\n  createSpacedPointsGeometry: function (divisions) {\n    console.warn('THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.'); // generate geometry from equidistant sampling along the path\n\n    var pts = this.getSpacedPoints(divisions);\n    return this.createGeometry(pts);\n  },\n  createGeometry: function (points) {\n    console.warn('THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');\n    var geometry = new Geometry();\n\n    for (var i = 0, l = points.length; i < l; i++) {\n      var point = points[i];\n      geometry.vertices.push(new Vector3(point.x, point.y, point.z || 0));\n    }\n\n    return geometry;\n  }\n}); //\n\nObject.assign(Path.prototype, {\n  fromPoints: function (points) {\n    console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n    this.setFromPoints(points);\n  }\n}); //\n\nfunction ClosedSplineCurve3(points) {\n  console.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n  CatmullRomCurve3.call(this, points);\n  this.type = 'catmullrom';\n  this.closed = true;\n}\n\nClosedSplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\nfunction SplineCurve3(points) {\n  console.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n  CatmullRomCurve3.call(this, points);\n  this.type = 'catmullrom';\n}\n\nSplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\nfunction Spline(points) {\n  console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');\n  CatmullRomCurve3.call(this, points);\n  this.type = 'catmullrom';\n}\n\nSpline.prototype = Object.create(CatmullRomCurve3.prototype);\nObject.assign(Spline.prototype, {\n  initFromArray: function ()\n  /* a */\n  {\n    console.error('THREE.Spline: .initFromArray() has been removed.');\n  },\n  getControlPointsArray: function ()\n  /* optionalTarget */\n  {\n    console.error('THREE.Spline: .getControlPointsArray() has been removed.');\n  },\n  reparametrizeByArcLength: function ()\n  /* samplingCoef */\n  {\n    console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');\n  }\n}); //\n\nfunction AxisHelper(size) {\n  console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n  return new AxesHelper(size);\n}\n\nfunction BoundingBoxHelper(object, color) {\n  console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n  return new BoxHelper(object, color);\n}\n\nfunction EdgesHelper(object, hex) {\n  console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n  return new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n    color: hex !== undefined ? hex : 0xffffff\n  }));\n}\n\nGridHelper.prototype.setColors = function () {\n  console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n};\n\nSkeletonHelper.prototype.update = function () {\n  console.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n};\n\nfunction WireframeHelper(object, hex) {\n  console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n  return new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n    color: hex !== undefined ? hex : 0xffffff\n  }));\n} //\n\n\nObject.assign(Loader.prototype, {\n  extractUrlBase: function (url) {\n    console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n    return LoaderUtils.extractUrlBase(url);\n  }\n});\n\nfunction XHRLoader(manager) {\n  console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n  return new FileLoader(manager);\n}\n\nfunction BinaryTextureLoader(manager) {\n  console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n  return new DataTextureLoader(manager);\n} //\n\n\nObject.assign(Box2.prototype, {\n  center: function (optionalTarget) {\n    console.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  },\n  empty: function () {\n    console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n    return this.isEmpty();\n  },\n  isIntersectionBox: function (box) {\n    console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  },\n  size: function (optionalTarget) {\n    console.warn('THREE.Box2: .size() has been renamed to .getSize().');\n    return this.getSize(optionalTarget);\n  }\n});\nObject.assign(Box3.prototype, {\n  center: function (optionalTarget) {\n    console.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  },\n  empty: function () {\n    console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n    return this.isEmpty();\n  },\n  isIntersectionBox: function (box) {\n    console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  },\n  isIntersectionSphere: function (sphere) {\n    console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n    return this.intersectsSphere(sphere);\n  },\n  size: function (optionalTarget) {\n    console.warn('THREE.Box3: .size() has been renamed to .getSize().');\n    return this.getSize(optionalTarget);\n  }\n});\n\nLine3.prototype.center = function (optionalTarget) {\n  console.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n  return this.getCenter(optionalTarget);\n};\n\nObject.assign(_Math, {\n  random16: function () {\n    console.warn('THREE.Math: .random16() has been deprecated. Use Math.random() instead.');\n    return Math.random();\n  },\n  nearestPowerOfTwo: function (value) {\n    console.warn('THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().');\n    return _Math.floorPowerOfTwo(value);\n  },\n  nextPowerOfTwo: function (value) {\n    console.warn('THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().');\n    return _Math.ceilPowerOfTwo(value);\n  }\n});\nObject.assign(Matrix3.prototype, {\n  flattenToArrayOffset: function (array, offset) {\n    console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n    return this.toArray(array, offset);\n  },\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n    return vector.applyMatrix3(this);\n  },\n  multiplyVector3Array: function ()\n  /* a */\n  {\n    console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n  },\n  applyToBuffer: function (buffer\n  /*, offset, length */\n  ) {\n    console.warn('THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n    return this.applyToBufferAttribute(buffer);\n  },\n  applyToVector3Array: function ()\n  /* array, offset, length */\n  {\n    console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n  }\n});\nObject.assign(Matrix4.prototype, {\n  extractPosition: function (m) {\n    console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n    return this.copyPosition(m);\n  },\n  flattenToArrayOffset: function (array, offset) {\n    console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n    return this.toArray(array, offset);\n  },\n  getPosition: function () {\n    var v1;\n    return function getPosition() {\n      if (v1 === undefined) v1 = new Vector3();\n      console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n      return v1.setFromMatrixColumn(this, 3);\n    };\n  }(),\n  setRotationFromQuaternion: function (q) {\n    console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n    return this.makeRotationFromQuaternion(q);\n  },\n  multiplyToArray: function () {\n    console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n  },\n  multiplyVector3: function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  multiplyVector4: function (vector) {\n    console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  multiplyVector3Array: function ()\n  /* a */\n  {\n    console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n  },\n  rotateAxis: function (v) {\n    console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n    v.transformDirection(this);\n  },\n  crossVector: function (vector) {\n    console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n    return vector.applyMatrix4(this);\n  },\n  translate: function () {\n    console.error('THREE.Matrix4: .translate() has been removed.');\n  },\n  rotateX: function () {\n    console.error('THREE.Matrix4: .rotateX() has been removed.');\n  },\n  rotateY: function () {\n    console.error('THREE.Matrix4: .rotateY() has been removed.');\n  },\n  rotateZ: function () {\n    console.error('THREE.Matrix4: .rotateZ() has been removed.');\n  },\n  rotateByAxis: function () {\n    console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n  },\n  applyToBuffer: function (buffer\n  /*, offset, length */\n  ) {\n    console.warn('THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n    return this.applyToBufferAttribute(buffer);\n  },\n  applyToVector3Array: function ()\n  /* array, offset, length */\n  {\n    console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n  },\n  makeFrustum: function (left, right, bottom, top, near, far) {\n    console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n    return this.makePerspective(left, right, top, bottom, near, far);\n  }\n});\n\nPlane.prototype.isIntersectionLine = function (line) {\n  console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n  return this.intersectsLine(line);\n};\n\nQuaternion.prototype.multiplyVector3 = function (vector) {\n  console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n  return vector.applyQuaternion(this);\n};\n\nObject.assign(Ray.prototype, {\n  isIntersectionBox: function (box) {\n    console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n    return this.intersectsBox(box);\n  },\n  isIntersectionPlane: function (plane) {\n    console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n    return this.intersectsPlane(plane);\n  },\n  isIntersectionSphere: function (sphere) {\n    console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n    return this.intersectsSphere(sphere);\n  }\n});\nObject.assign(Triangle.prototype, {\n  area: function () {\n    console.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n    return this.getArea();\n  },\n  barycoordFromPoint: function (point, target) {\n    console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n    return this.getBarycoord(point, target);\n  },\n  midpoint: function (target) {\n    console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n    return this.getMidpoint(target);\n  },\n  normal: function (target) {\n    console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n    return this.getNormal(target);\n  },\n  plane: function (target) {\n    console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n    return this.getPlane(target);\n  }\n});\nObject.assign(Triangle, {\n  barycoordFromPoint: function (point, a, b, c, target) {\n    console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n    return Triangle.getBarycoord(point, a, b, c, target);\n  },\n  normal: function (a, b, c, target) {\n    console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n    return Triangle.getNormal(a, b, c, target);\n  }\n});\nObject.assign(Shape.prototype, {\n  extractAllPoints: function (divisions) {\n    console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n    return this.extractPoints(divisions);\n  },\n  extrude: function (options) {\n    console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n    return new ExtrudeGeometry(this, options);\n  },\n  makeGeometry: function (options) {\n    console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n    return new ShapeGeometry(this, options);\n  }\n});\nObject.assign(Vector2.prototype, {\n  fromAttribute: function (attribute, index, offset) {\n    console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n    return this.fromBufferAttribute(attribute, index, offset);\n  },\n  distanceToManhattan: function (v) {\n    console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n    return this.manhattanDistanceTo(v);\n  },\n  lengthManhattan: function () {\n    console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n    return this.manhattanLength();\n  }\n});\nObject.assign(Vector3.prototype, {\n  setEulerFromRotationMatrix: function () {\n    console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n  },\n  setEulerFromQuaternion: function () {\n    console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n  },\n  getPositionFromMatrix: function (m) {\n    console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n    return this.setFromMatrixPosition(m);\n  },\n  getScaleFromMatrix: function (m) {\n    console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n    return this.setFromMatrixScale(m);\n  },\n  getColumnFromMatrix: function (index, matrix) {\n    console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n    return this.setFromMatrixColumn(matrix, index);\n  },\n  applyProjection: function (m) {\n    console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n    return this.applyMatrix4(m);\n  },\n  fromAttribute: function (attribute, index, offset) {\n    console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n    return this.fromBufferAttribute(attribute, index, offset);\n  },\n  distanceToManhattan: function (v) {\n    console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n    return this.manhattanDistanceTo(v);\n  },\n  lengthManhattan: function () {\n    console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n    return this.manhattanLength();\n  }\n});\nObject.assign(Vector4.prototype, {\n  fromAttribute: function (attribute, index, offset) {\n    console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n    return this.fromBufferAttribute(attribute, index, offset);\n  },\n  lengthManhattan: function () {\n    console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n    return this.manhattanLength();\n  }\n}); //\n\nObject.assign(Geometry.prototype, {\n  computeTangents: function () {\n    console.error('THREE.Geometry: .computeTangents() has been removed.');\n  },\n  computeLineDistances: function () {\n    console.error('THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.');\n  }\n});\nObject.assign(Object3D.prototype, {\n  getChildByName: function (name) {\n    console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n    return this.getObjectByName(name);\n  },\n  renderDepth: function () {\n    console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n  },\n  translate: function (distance, axis) {\n    console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n    return this.translateOnAxis(axis, distance);\n  },\n  getWorldRotation: function () {\n    console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n  }\n});\nObject.defineProperties(Object3D.prototype, {\n  eulerOrder: {\n    get: function () {\n      console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n      return this.rotation.order;\n    },\n    set: function (value) {\n      console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n      this.rotation.order = value;\n    }\n  },\n  useQuaternion: {\n    get: function () {\n      console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n    },\n    set: function () {\n      console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n    }\n  }\n});\nObject.defineProperties(LOD.prototype, {\n  objects: {\n    get: function () {\n      console.warn('THREE.LOD: .objects has been renamed to .levels.');\n      return this.levels;\n    }\n  }\n});\nObject.defineProperty(Skeleton.prototype, 'useVertexTexture', {\n  get: function () {\n    console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n  },\n  set: function () {\n    console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n  }\n});\nObject.defineProperty(Curve.prototype, '__arcLengthDivisions', {\n  get: function () {\n    console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n    return this.arcLengthDivisions;\n  },\n  set: function (value) {\n    console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n    this.arcLengthDivisions = value;\n  }\n}); //\n\nPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n  console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. \" + \"Use .setFocalLength and .filmGauge for a photographic setup.\");\n  if (filmGauge !== undefined) this.filmGauge = filmGauge;\n  this.setFocalLength(focalLength);\n}; //\n\n\nObject.defineProperties(Light.prototype, {\n  onlyShadow: {\n    set: function () {\n      console.warn('THREE.Light: .onlyShadow has been removed.');\n    }\n  },\n  shadowCameraFov: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n      this.shadow.camera.fov = value;\n    }\n  },\n  shadowCameraLeft: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n      this.shadow.camera.left = value;\n    }\n  },\n  shadowCameraRight: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n      this.shadow.camera.right = value;\n    }\n  },\n  shadowCameraTop: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n      this.shadow.camera.top = value;\n    }\n  },\n  shadowCameraBottom: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n      this.shadow.camera.bottom = value;\n    }\n  },\n  shadowCameraNear: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n      this.shadow.camera.near = value;\n    }\n  },\n  shadowCameraFar: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n      this.shadow.camera.far = value;\n    }\n  },\n  shadowCameraVisible: {\n    set: function () {\n      console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n    }\n  },\n  shadowBias: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n      this.shadow.bias = value;\n    }\n  },\n  shadowDarkness: {\n    set: function () {\n      console.warn('THREE.Light: .shadowDarkness has been removed.');\n    }\n  },\n  shadowMapWidth: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n      this.shadow.mapSize.width = value;\n    }\n  },\n  shadowMapHeight: {\n    set: function (value) {\n      console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n      this.shadow.mapSize.height = value;\n    }\n  }\n}); //\n\nObject.defineProperties(BufferAttribute.prototype, {\n  length: {\n    get: function () {\n      console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n      return this.array.length;\n    }\n  },\n  copyIndicesArray: function ()\n  /* indices */\n  {\n    console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n  }\n});\nObject.assign(BufferGeometry.prototype, {\n  addIndex: function (index) {\n    console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n    this.setIndex(index);\n  },\n  addDrawCall: function (start, count, indexOffset) {\n    if (indexOffset !== undefined) {\n      console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n    }\n\n    console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n    this.addGroup(start, count);\n  },\n  clearDrawCalls: function () {\n    console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n    this.clearGroups();\n  },\n  computeTangents: function () {\n    console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');\n  },\n  computeOffsets: function () {\n    console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n  }\n});\nObject.defineProperties(BufferGeometry.prototype, {\n  drawcalls: {\n    get: function () {\n      console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n      return this.groups;\n    }\n  },\n  offsets: {\n    get: function () {\n      console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n      return this.groups;\n    }\n  }\n}); //\n\nObject.assign(ExtrudeBufferGeometry.prototype, {\n  getArrays: function () {\n    console.error('THREE.ExtrudeBufferGeometry: .getArrays() has been removed.');\n  },\n  addShapeList: function () {\n    console.error('THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.');\n  },\n  addShape: function () {\n    console.error('THREE.ExtrudeBufferGeometry: .addShape() has been removed.');\n  }\n}); //\n\nObject.defineProperties(Uniform.prototype, {\n  dynamic: {\n    set: function () {\n      console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');\n    }\n  },\n  onUpdate: {\n    value: function () {\n      console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n      return this;\n    }\n  }\n}); //\n\nObject.defineProperties(Material.prototype, {\n  wrapAround: {\n    get: function () {\n      console.warn('THREE.Material: .wrapAround has been removed.');\n    },\n    set: function () {\n      console.warn('THREE.Material: .wrapAround has been removed.');\n    }\n  },\n  wrapRGB: {\n    get: function () {\n      console.warn('THREE.Material: .wrapRGB has been removed.');\n      return new Color();\n    }\n  },\n  shading: {\n    get: function () {\n      console.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n    },\n    set: function (value) {\n      console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n      this.flatShading = value === FlatShading;\n    }\n  }\n});\nObject.defineProperties(MeshPhongMaterial.prototype, {\n  metal: {\n    get: function () {\n      console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');\n      return false;\n    },\n    set: function () {\n      console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');\n    }\n  }\n});\nObject.defineProperties(ShaderMaterial.prototype, {\n  derivatives: {\n    get: function () {\n      console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n      return this.extensions.derivatives;\n    },\n    set: function (value) {\n      console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n      this.extensions.derivatives = value;\n    }\n  }\n}); //\n\nObject.assign(WebGLRenderer.prototype, {\n  animate: function (callback) {\n    console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n    this.setAnimationLoop(callback);\n  },\n  getCurrentRenderTarget: function () {\n    console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n    return this.getRenderTarget();\n  },\n  getMaxAnisotropy: function () {\n    console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n    return this.capabilities.getMaxAnisotropy();\n  },\n  getPrecision: function () {\n    console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n    return this.capabilities.precision;\n  },\n  resetGLState: function () {\n    console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n    return this.state.reset();\n  },\n  supportsFloatTextures: function () {\n    console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n    return this.extensions.get('OES_texture_float');\n  },\n  supportsHalfFloatTextures: function () {\n    console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n    return this.extensions.get('OES_texture_half_float');\n  },\n  supportsStandardDerivatives: function () {\n    console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n    return this.extensions.get('OES_standard_derivatives');\n  },\n  supportsCompressedTextureS3TC: function () {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n    return this.extensions.get('WEBGL_compressed_texture_s3tc');\n  },\n  supportsCompressedTexturePVRTC: function () {\n    console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n    return this.extensions.get('WEBGL_compressed_texture_pvrtc');\n  },\n  supportsBlendMinMax: function () {\n    console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n    return this.extensions.get('EXT_blend_minmax');\n  },\n  supportsVertexTextures: function () {\n    console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n    return this.capabilities.vertexTextures;\n  },\n  supportsInstancedArrays: function () {\n    console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n    return this.extensions.get('ANGLE_instanced_arrays');\n  },\n  enableScissorTest: function (boolean) {\n    console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n    this.setScissorTest(boolean);\n  },\n  initMaterial: function () {\n    console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n  },\n  addPrePlugin: function () {\n    console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n  },\n  addPostPlugin: function () {\n    console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n  },\n  updateShadowMap: function () {\n    console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n  },\n  setFaceCulling: function () {\n    console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n  }\n});\nObject.defineProperties(WebGLRenderer.prototype, {\n  shadowMapEnabled: {\n    get: function () {\n      return this.shadowMap.enabled;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n      this.shadowMap.enabled = value;\n    }\n  },\n  shadowMapType: {\n    get: function () {\n      return this.shadowMap.type;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n      this.shadowMap.type = value;\n    }\n  },\n  shadowMapCullFace: {\n    get: function () {\n      console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n      return undefined;\n    },\n    set: function ()\n    /* value */\n    {\n      console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n    }\n  }\n});\nObject.defineProperties(WebGLShadowMap.prototype, {\n  cullFace: {\n    get: function () {\n      console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n      return undefined;\n    },\n    set: function ()\n    /* cullFace */\n    {\n      console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n    }\n  },\n  renderReverseSided: {\n    get: function () {\n      console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n      return undefined;\n    },\n    set: function () {\n      console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n    }\n  },\n  renderSingleSided: {\n    get: function () {\n      console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n      return undefined;\n    },\n    set: function () {\n      console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n    }\n  }\n}); //\n\nObject.defineProperties(WebGLRenderTarget.prototype, {\n  wrapS: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n      return this.texture.wrapS;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n      this.texture.wrapS = value;\n    }\n  },\n  wrapT: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n      return this.texture.wrapT;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n      this.texture.wrapT = value;\n    }\n  },\n  magFilter: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n      return this.texture.magFilter;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n      this.texture.magFilter = value;\n    }\n  },\n  minFilter: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n      return this.texture.minFilter;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n      this.texture.minFilter = value;\n    }\n  },\n  anisotropy: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n      return this.texture.anisotropy;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n      this.texture.anisotropy = value;\n    }\n  },\n  offset: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n      return this.texture.offset;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n      this.texture.offset = value;\n    }\n  },\n  repeat: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n      return this.texture.repeat;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n      this.texture.repeat = value;\n    }\n  },\n  format: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n      return this.texture.format;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n      this.texture.format = value;\n    }\n  },\n  type: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n      return this.texture.type;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n      this.texture.type = value;\n    }\n  },\n  generateMipmaps: {\n    get: function () {\n      console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n      return this.texture.generateMipmaps;\n    },\n    set: function (value) {\n      console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n      this.texture.generateMipmaps = value;\n    }\n  }\n}); //\n\nObject.defineProperties(WebVRManager.prototype, {\n  standing: {\n    set: function ()\n    /* value */\n    {\n      console.warn('THREE.WebVRManager: .standing has been removed.');\n    }\n  }\n}); //\n\nAudio.prototype.load = function (file) {\n  console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n  var scope = this;\n  var audioLoader = new AudioLoader();\n  audioLoader.load(file, function (buffer) {\n    scope.setBuffer(buffer);\n  });\n  return this;\n};\n\nAudioAnalyser.prototype.getData = function () {\n  console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n  return this.getFrequencyData();\n}; //\n\n\nCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n  console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n  return this.update(renderer, scene);\n}; //\n\n\nvar GeometryUtils = {\n  merge: function (geometry1, geometry2, materialIndexOffset) {\n    console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n    var matrix;\n\n    if (geometry2.isMesh) {\n      geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n      matrix = geometry2.matrix;\n      geometry2 = geometry2.geometry;\n    }\n\n    geometry1.merge(geometry2, matrix, materialIndexOffset);\n  },\n  center: function (geometry) {\n    console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n    return geometry.center();\n  }\n};\nvar ImageUtils = {\n  crossOrigin: undefined,\n  loadTexture: function (url, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n    var loader = new TextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(url, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  },\n  loadTextureCube: function (urls, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n    var loader = new CubeTextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(urls, onLoad, undefined, onError);\n    if (mapping) texture.mapping = mapping;\n    return texture;\n  },\n  loadCompressedTexture: function () {\n    console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n  },\n  loadCompressedTextureCube: function () {\n    console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n  }\n}; //\n\nfunction Projector() {\n  console.error('THREE.Projector has been moved to /examples/js/renderers/Projector.js.');\n\n  this.projectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .projectVector() is now vector.project().');\n    vector.project(camera);\n  };\n\n  this.unprojectVector = function (vector, camera) {\n    console.warn('THREE.Projector: .unprojectVector() is now vector.unproject().');\n    vector.unproject(camera);\n  };\n\n  this.pickingRay = function () {\n    console.error('THREE.Projector: .pickingRay() is now raycaster.setFromCamera().');\n  };\n} //\n\n\nfunction CanvasRenderer() {\n  console.error('THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js');\n  this.domElement = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\n  this.clear = function () {};\n\n  this.render = function () {};\n\n  this.setClearColor = function () {};\n\n  this.setSize = function () {};\n} //\n\n\nvar SceneUtils = {\n  createMultiMaterialObject: function ()\n  /* geometry, materials */\n  {\n    console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n  },\n  detach: function ()\n  /* child, parent, scene */\n  {\n    console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n  },\n  attach: function ()\n  /* child, scene, parent */\n  {\n    console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n  }\n}; //\n\nfunction LensFlare() {\n  console.error('THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js');\n}\n\nvar THREE$1 = Object.freeze({\n  WebGLRenderTargetCube: WebGLRenderTargetCube,\n  WebGLRenderTarget: WebGLRenderTarget,\n  WebGLRenderer: WebGLRenderer,\n  ShaderLib: ShaderLib,\n  UniformsLib: UniformsLib,\n  UniformsUtils: UniformsUtils,\n  ShaderChunk: ShaderChunk,\n  FogExp2: FogExp2,\n  Fog: Fog,\n  Scene: Scene,\n  Sprite: Sprite,\n  LOD: LOD,\n  SkinnedMesh: SkinnedMesh,\n  Skeleton: Skeleton,\n  Bone: Bone,\n  Mesh: Mesh,\n  LineSegments: LineSegments,\n  LineLoop: LineLoop,\n  Line: Line,\n  Points: Points,\n  Group: Group,\n  VideoTexture: VideoTexture,\n  DataTexture: DataTexture,\n  CompressedTexture: CompressedTexture,\n  CubeTexture: CubeTexture,\n  CanvasTexture: CanvasTexture,\n  DepthTexture: DepthTexture,\n  Texture: Texture,\n  CompressedTextureLoader: CompressedTextureLoader,\n  DataTextureLoader: DataTextureLoader,\n  CubeTextureLoader: CubeTextureLoader,\n  TextureLoader: TextureLoader,\n  ObjectLoader: ObjectLoader,\n  MaterialLoader: MaterialLoader,\n  BufferGeometryLoader: BufferGeometryLoader,\n  DefaultLoadingManager: DefaultLoadingManager,\n  LoadingManager: LoadingManager,\n  JSONLoader: JSONLoader,\n  ImageLoader: ImageLoader,\n  ImageBitmapLoader: ImageBitmapLoader,\n  FontLoader: FontLoader,\n  FileLoader: FileLoader,\n  Loader: Loader,\n  LoaderUtils: LoaderUtils,\n  Cache: Cache,\n  AudioLoader: AudioLoader,\n  SpotLightShadow: SpotLightShadow,\n  SpotLight: SpotLight,\n  PointLight: PointLight,\n  RectAreaLight: RectAreaLight,\n  HemisphereLight: HemisphereLight,\n  DirectionalLightShadow: DirectionalLightShadow,\n  DirectionalLight: DirectionalLight,\n  AmbientLight: AmbientLight,\n  LightShadow: LightShadow,\n  Light: Light,\n  StereoCamera: StereoCamera,\n  PerspectiveCamera: PerspectiveCamera,\n  OrthographicCamera: OrthographicCamera,\n  CubeCamera: CubeCamera,\n  ArrayCamera: ArrayCamera,\n  Camera: Camera,\n  AudioListener: AudioListener,\n  PositionalAudio: PositionalAudio,\n  AudioContext: AudioContext,\n  AudioAnalyser: AudioAnalyser,\n  Audio: Audio,\n  VectorKeyframeTrack: VectorKeyframeTrack,\n  StringKeyframeTrack: StringKeyframeTrack,\n  QuaternionKeyframeTrack: QuaternionKeyframeTrack,\n  NumberKeyframeTrack: NumberKeyframeTrack,\n  ColorKeyframeTrack: ColorKeyframeTrack,\n  BooleanKeyframeTrack: BooleanKeyframeTrack,\n  PropertyMixer: PropertyMixer,\n  PropertyBinding: PropertyBinding,\n  KeyframeTrack: KeyframeTrack,\n  AnimationUtils: AnimationUtils,\n  AnimationObjectGroup: AnimationObjectGroup,\n  AnimationMixer: AnimationMixer,\n  AnimationClip: AnimationClip,\n  Uniform: Uniform,\n  InstancedBufferGeometry: InstancedBufferGeometry,\n  BufferGeometry: BufferGeometry,\n  Geometry: Geometry,\n  InterleavedBufferAttribute: InterleavedBufferAttribute,\n  InstancedInterleavedBuffer: InstancedInterleavedBuffer,\n  InterleavedBuffer: InterleavedBuffer,\n  InstancedBufferAttribute: InstancedBufferAttribute,\n  Face3: Face3,\n  Object3D: Object3D,\n  Raycaster: Raycaster,\n  Layers: Layers,\n  EventDispatcher: EventDispatcher,\n  Clock: Clock,\n  QuaternionLinearInterpolant: QuaternionLinearInterpolant,\n  LinearInterpolant: LinearInterpolant,\n  DiscreteInterpolant: DiscreteInterpolant,\n  CubicInterpolant: CubicInterpolant,\n  Interpolant: Interpolant,\n  Triangle: Triangle,\n  Math: _Math,\n  Spherical: Spherical,\n  Cylindrical: Cylindrical,\n  Plane: Plane,\n  Frustum: Frustum,\n  Sphere: Sphere,\n  Ray: Ray,\n  Matrix4: Matrix4,\n  Matrix3: Matrix3,\n  Box3: Box3,\n  Box2: Box2,\n  Line3: Line3,\n  Euler: Euler,\n  Vector4: Vector4,\n  Vector3: Vector3,\n  Vector2: Vector2,\n  Quaternion: Quaternion,\n  Color: Color,\n  ImmediateRenderObject: ImmediateRenderObject,\n  VertexNormalsHelper: VertexNormalsHelper,\n  SpotLightHelper: SpotLightHelper,\n  SkeletonHelper: SkeletonHelper,\n  PointLightHelper: PointLightHelper,\n  RectAreaLightHelper: RectAreaLightHelper,\n  HemisphereLightHelper: HemisphereLightHelper,\n  GridHelper: GridHelper,\n  PolarGridHelper: PolarGridHelper,\n  FaceNormalsHelper: FaceNormalsHelper,\n  DirectionalLightHelper: DirectionalLightHelper,\n  CameraHelper: CameraHelper,\n  BoxHelper: BoxHelper,\n  Box3Helper: Box3Helper,\n  PlaneHelper: PlaneHelper,\n  ArrowHelper: ArrowHelper,\n  AxesHelper: AxesHelper,\n  Shape: Shape,\n  Path: Path,\n  ShapePath: ShapePath,\n  Font: Font,\n  CurvePath: CurvePath,\n  Curve: Curve,\n  ShapeUtils: ShapeUtils,\n  WebGLUtils: WebGLUtils,\n  WireframeGeometry: WireframeGeometry,\n  ParametricGeometry: ParametricGeometry,\n  ParametricBufferGeometry: ParametricBufferGeometry,\n  TetrahedronGeometry: TetrahedronGeometry,\n  TetrahedronBufferGeometry: TetrahedronBufferGeometry,\n  OctahedronGeometry: OctahedronGeometry,\n  OctahedronBufferGeometry: OctahedronBufferGeometry,\n  IcosahedronGeometry: IcosahedronGeometry,\n  IcosahedronBufferGeometry: IcosahedronBufferGeometry,\n  DodecahedronGeometry: DodecahedronGeometry,\n  DodecahedronBufferGeometry: DodecahedronBufferGeometry,\n  PolyhedronGeometry: PolyhedronGeometry,\n  PolyhedronBufferGeometry: PolyhedronBufferGeometry,\n  TubeGeometry: TubeGeometry,\n  TubeBufferGeometry: TubeBufferGeometry,\n  TorusKnotGeometry: TorusKnotGeometry,\n  TorusKnotBufferGeometry: TorusKnotBufferGeometry,\n  TorusGeometry: TorusGeometry,\n  TorusBufferGeometry: TorusBufferGeometry,\n  TextGeometry: TextGeometry,\n  TextBufferGeometry: TextBufferGeometry,\n  SphereGeometry: SphereGeometry,\n  SphereBufferGeometry: SphereBufferGeometry,\n  RingGeometry: RingGeometry,\n  RingBufferGeometry: RingBufferGeometry,\n  PlaneGeometry: PlaneGeometry,\n  PlaneBufferGeometry: PlaneBufferGeometry,\n  LatheGeometry: LatheGeometry,\n  LatheBufferGeometry: LatheBufferGeometry,\n  ShapeGeometry: ShapeGeometry,\n  ShapeBufferGeometry: ShapeBufferGeometry,\n  ExtrudeGeometry: ExtrudeGeometry,\n  ExtrudeBufferGeometry: ExtrudeBufferGeometry,\n  EdgesGeometry: EdgesGeometry,\n  ConeGeometry: ConeGeometry,\n  ConeBufferGeometry: ConeBufferGeometry,\n  CylinderGeometry: CylinderGeometry,\n  CylinderBufferGeometry: CylinderBufferGeometry,\n  CircleGeometry: CircleGeometry,\n  CircleBufferGeometry: CircleBufferGeometry,\n  BoxGeometry: BoxGeometry,\n  BoxBufferGeometry: BoxBufferGeometry,\n  ShadowMaterial: ShadowMaterial,\n  SpriteMaterial: SpriteMaterial,\n  RawShaderMaterial: RawShaderMaterial,\n  ShaderMaterial: ShaderMaterial,\n  PointsMaterial: PointsMaterial,\n  MeshPhysicalMaterial: MeshPhysicalMaterial,\n  MeshStandardMaterial: MeshStandardMaterial,\n  MeshPhongMaterial: MeshPhongMaterial,\n  MeshToonMaterial: MeshToonMaterial,\n  MeshNormalMaterial: MeshNormalMaterial,\n  MeshLambertMaterial: MeshLambertMaterial,\n  MeshDepthMaterial: MeshDepthMaterial,\n  MeshDistanceMaterial: MeshDistanceMaterial,\n  MeshBasicMaterial: MeshBasicMaterial,\n  LineDashedMaterial: LineDashedMaterial,\n  LineBasicMaterial: LineBasicMaterial,\n  Material: Material,\n  Float64BufferAttribute: Float64BufferAttribute,\n  Float32BufferAttribute: Float32BufferAttribute,\n  Uint32BufferAttribute: Uint32BufferAttribute,\n  Int32BufferAttribute: Int32BufferAttribute,\n  Uint16BufferAttribute: Uint16BufferAttribute,\n  Int16BufferAttribute: Int16BufferAttribute,\n  Uint8ClampedBufferAttribute: Uint8ClampedBufferAttribute,\n  Uint8BufferAttribute: Uint8BufferAttribute,\n  Int8BufferAttribute: Int8BufferAttribute,\n  BufferAttribute: BufferAttribute,\n  ArcCurve: ArcCurve,\n  CatmullRomCurve3: CatmullRomCurve3,\n  CubicBezierCurve: CubicBezierCurve,\n  CubicBezierCurve3: CubicBezierCurve3,\n  EllipseCurve: EllipseCurve,\n  LineCurve: LineCurve,\n  LineCurve3: LineCurve3,\n  QuadraticBezierCurve: QuadraticBezierCurve,\n  QuadraticBezierCurve3: QuadraticBezierCurve3,\n  SplineCurve: SplineCurve,\n  REVISION: REVISION,\n  MOUSE: MOUSE,\n  CullFaceNone: CullFaceNone,\n  CullFaceBack: CullFaceBack,\n  CullFaceFront: CullFaceFront,\n  CullFaceFrontBack: CullFaceFrontBack,\n  FrontFaceDirectionCW: FrontFaceDirectionCW,\n  FrontFaceDirectionCCW: FrontFaceDirectionCCW,\n  BasicShadowMap: BasicShadowMap,\n  PCFShadowMap: PCFShadowMap,\n  PCFSoftShadowMap: PCFSoftShadowMap,\n  FrontSide: FrontSide,\n  BackSide: BackSide,\n  DoubleSide: DoubleSide,\n  FlatShading: FlatShading,\n  SmoothShading: SmoothShading,\n  NoColors: NoColors,\n  FaceColors: FaceColors,\n  VertexColors: VertexColors,\n  NoBlending: NoBlending,\n  NormalBlending: NormalBlending,\n  AdditiveBlending: AdditiveBlending,\n  SubtractiveBlending: SubtractiveBlending,\n  MultiplyBlending: MultiplyBlending,\n  CustomBlending: CustomBlending,\n  AddEquation: AddEquation,\n  SubtractEquation: SubtractEquation,\n  ReverseSubtractEquation: ReverseSubtractEquation,\n  MinEquation: MinEquation,\n  MaxEquation: MaxEquation,\n  ZeroFactor: ZeroFactor,\n  OneFactor: OneFactor,\n  SrcColorFactor: SrcColorFactor,\n  OneMinusSrcColorFactor: OneMinusSrcColorFactor,\n  SrcAlphaFactor: SrcAlphaFactor,\n  OneMinusSrcAlphaFactor: OneMinusSrcAlphaFactor,\n  DstAlphaFactor: DstAlphaFactor,\n  OneMinusDstAlphaFactor: OneMinusDstAlphaFactor,\n  DstColorFactor: DstColorFactor,\n  OneMinusDstColorFactor: OneMinusDstColorFactor,\n  SrcAlphaSaturateFactor: SrcAlphaSaturateFactor,\n  NeverDepth: NeverDepth,\n  AlwaysDepth: AlwaysDepth,\n  LessDepth: LessDepth,\n  LessEqualDepth: LessEqualDepth,\n  EqualDepth: EqualDepth,\n  GreaterEqualDepth: GreaterEqualDepth,\n  GreaterDepth: GreaterDepth,\n  NotEqualDepth: NotEqualDepth,\n  MultiplyOperation: MultiplyOperation,\n  MixOperation: MixOperation,\n  AddOperation: AddOperation,\n  NoToneMapping: NoToneMapping,\n  LinearToneMapping: LinearToneMapping,\n  ReinhardToneMapping: ReinhardToneMapping,\n  Uncharted2ToneMapping: Uncharted2ToneMapping,\n  CineonToneMapping: CineonToneMapping,\n  UVMapping: UVMapping,\n  CubeReflectionMapping: CubeReflectionMapping,\n  CubeRefractionMapping: CubeRefractionMapping,\n  EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n  EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n  SphericalReflectionMapping: SphericalReflectionMapping,\n  CubeUVReflectionMapping: CubeUVReflectionMapping,\n  CubeUVRefractionMapping: CubeUVRefractionMapping,\n  RepeatWrapping: RepeatWrapping,\n  ClampToEdgeWrapping: ClampToEdgeWrapping,\n  MirroredRepeatWrapping: MirroredRepeatWrapping,\n  NearestFilter: NearestFilter,\n  NearestMipMapNearestFilter: NearestMipMapNearestFilter,\n  NearestMipMapLinearFilter: NearestMipMapLinearFilter,\n  LinearFilter: LinearFilter,\n  LinearMipMapNearestFilter: LinearMipMapNearestFilter,\n  LinearMipMapLinearFilter: LinearMipMapLinearFilter,\n  UnsignedByteType: UnsignedByteType,\n  ByteType: ByteType,\n  ShortType: ShortType,\n  UnsignedShortType: UnsignedShortType,\n  IntType: IntType,\n  UnsignedIntType: UnsignedIntType,\n  FloatType: FloatType,\n  HalfFloatType: HalfFloatType,\n  UnsignedShort4444Type: UnsignedShort4444Type,\n  UnsignedShort5551Type: UnsignedShort5551Type,\n  UnsignedShort565Type: UnsignedShort565Type,\n  UnsignedInt248Type: UnsignedInt248Type,\n  AlphaFormat: AlphaFormat,\n  RGBFormat: RGBFormat,\n  RGBAFormat: RGBAFormat,\n  LuminanceFormat: LuminanceFormat,\n  LuminanceAlphaFormat: LuminanceAlphaFormat,\n  RGBEFormat: RGBEFormat,\n  DepthFormat: DepthFormat,\n  DepthStencilFormat: DepthStencilFormat,\n  RGB_S3TC_DXT1_Format: RGB_S3TC_DXT1_Format,\n  RGBA_S3TC_DXT1_Format: RGBA_S3TC_DXT1_Format,\n  RGBA_S3TC_DXT3_Format: RGBA_S3TC_DXT3_Format,\n  RGBA_S3TC_DXT5_Format: RGBA_S3TC_DXT5_Format,\n  RGB_PVRTC_4BPPV1_Format: RGB_PVRTC_4BPPV1_Format,\n  RGB_PVRTC_2BPPV1_Format: RGB_PVRTC_2BPPV1_Format,\n  RGBA_PVRTC_4BPPV1_Format: RGBA_PVRTC_4BPPV1_Format,\n  RGBA_PVRTC_2BPPV1_Format: RGBA_PVRTC_2BPPV1_Format,\n  RGB_ETC1_Format: RGB_ETC1_Format,\n  RGBA_ASTC_4x4_Format: RGBA_ASTC_4x4_Format,\n  RGBA_ASTC_5x4_Format: RGBA_ASTC_5x4_Format,\n  RGBA_ASTC_5x5_Format: RGBA_ASTC_5x5_Format,\n  RGBA_ASTC_6x5_Format: RGBA_ASTC_6x5_Format,\n  RGBA_ASTC_6x6_Format: RGBA_ASTC_6x6_Format,\n  RGBA_ASTC_8x5_Format: RGBA_ASTC_8x5_Format,\n  RGBA_ASTC_8x6_Format: RGBA_ASTC_8x6_Format,\n  RGBA_ASTC_8x8_Format: RGBA_ASTC_8x8_Format,\n  RGBA_ASTC_10x5_Format: RGBA_ASTC_10x5_Format,\n  RGBA_ASTC_10x6_Format: RGBA_ASTC_10x6_Format,\n  RGBA_ASTC_10x8_Format: RGBA_ASTC_10x8_Format,\n  RGBA_ASTC_10x10_Format: RGBA_ASTC_10x10_Format,\n  RGBA_ASTC_12x10_Format: RGBA_ASTC_12x10_Format,\n  RGBA_ASTC_12x12_Format: RGBA_ASTC_12x12_Format,\n  LoopOnce: LoopOnce,\n  LoopRepeat: LoopRepeat,\n  LoopPingPong: LoopPingPong,\n  InterpolateDiscrete: InterpolateDiscrete,\n  InterpolateLinear: InterpolateLinear,\n  InterpolateSmooth: InterpolateSmooth,\n  ZeroCurvatureEnding: ZeroCurvatureEnding,\n  ZeroSlopeEnding: ZeroSlopeEnding,\n  WrapAroundEnding: WrapAroundEnding,\n  TrianglesDrawMode: TrianglesDrawMode,\n  TriangleStripDrawMode: TriangleStripDrawMode,\n  TriangleFanDrawMode: TriangleFanDrawMode,\n  LinearEncoding: LinearEncoding,\n  sRGBEncoding: sRGBEncoding,\n  GammaEncoding: GammaEncoding,\n  RGBEEncoding: RGBEEncoding,\n  LogLuvEncoding: LogLuvEncoding,\n  RGBM7Encoding: RGBM7Encoding,\n  RGBM16Encoding: RGBM16Encoding,\n  RGBDEncoding: RGBDEncoding,\n  BasicDepthPacking: BasicDepthPacking,\n  RGBADepthPacking: RGBADepthPacking,\n  TangentSpaceNormalMap: TangentSpaceNormalMap,\n  ObjectSpaceNormalMap: ObjectSpaceNormalMap,\n  CubeGeometry: BoxGeometry,\n  Face4: Face4,\n  LineStrip: LineStrip,\n  LinePieces: LinePieces,\n  MeshFaceMaterial: MeshFaceMaterial,\n  MultiMaterial: MultiMaterial,\n  PointCloud: PointCloud,\n  Particle: Particle,\n  ParticleSystem: ParticleSystem,\n  PointCloudMaterial: PointCloudMaterial,\n  ParticleBasicMaterial: ParticleBasicMaterial,\n  ParticleSystemMaterial: ParticleSystemMaterial,\n  Vertex: Vertex,\n  DynamicBufferAttribute: DynamicBufferAttribute,\n  Int8Attribute: Int8Attribute,\n  Uint8Attribute: Uint8Attribute,\n  Uint8ClampedAttribute: Uint8ClampedAttribute,\n  Int16Attribute: Int16Attribute,\n  Uint16Attribute: Uint16Attribute,\n  Int32Attribute: Int32Attribute,\n  Uint32Attribute: Uint32Attribute,\n  Float32Attribute: Float32Attribute,\n  Float64Attribute: Float64Attribute,\n  ClosedSplineCurve3: ClosedSplineCurve3,\n  SplineCurve3: SplineCurve3,\n  Spline: Spline,\n  AxisHelper: AxisHelper,\n  BoundingBoxHelper: BoundingBoxHelper,\n  EdgesHelper: EdgesHelper,\n  WireframeHelper: WireframeHelper,\n  XHRLoader: XHRLoader,\n  BinaryTextureLoader: BinaryTextureLoader,\n  GeometryUtils: GeometryUtils,\n  ImageUtils: ImageUtils,\n  Projector: Projector,\n  CanvasRenderer: CanvasRenderer,\n  SceneUtils: SceneUtils,\n  LensFlare: LensFlare\n});\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * @class ExampleComponent\n */\n\n\nvar OrbitControls = require('three-orbit-controls')(THREE$1);\n\nvar FBXLoader = require('three-fbxloader-offical');\n\nvar ReactThreeVisor = function (_Component) {\n  inherits(ReactThreeVisor, _Component);\n\n  function ReactThreeVisor() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ReactThreeVisor);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ReactThreeVisor.__proto__ || Object.getPrototypeOf(ReactThreeVisor)).call.apply(_ref, [this].concat(args))), _this), _this.checkProps = function () {\n      _this.cameraPosition = _this.props.cameraPosition || {\n        x: 2,\n        y: 0,\n        z: 10\n      };\n      _this.controlsPosition = _this.props.controlsPosition || {\n        x: 0,\n        y: 0,\n        z: 0\n      };\n      _this.angle = _this.props.angle || 45;\n      _this.far = _this.props.far || 2000;\n      _this.near = _this.props.near || 1;\n      _this.lights = _this.props.ligths || null;\n    }, _this.onWindowResize = function () {\n      _this.camera.aspect = window.innerWidth / window.innerHeight;\n\n      _this.camera.updateProjectionMatrix();\n\n      _this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }, _this.animate = function () {\n      requestAnimationFrame(_this.animate);\n\n      if (_this.mixers.length > 0) {\n        for (var i = 0; i < _this.mixers.length; i++) {\n          _this.mixers[i].update(_this.clock.getDelta());\n        }\n      }\n\n      _this.renderer.render(_this.scene, _this.camera);\n    }, _this.init = function () {\n      // mixers\n      _this.mixers = [];\n      _this.clock = new Clock(); // Camera\n\n      _this.camera = new PerspectiveCamera(_this.angle, window.innerWidth / window.innerHeight, _this.near, _this.far);\n\n      _this.camera.position.set(_this.cameraPosition.x, _this.cameraPosition.y, _this.cameraPosition.z); // Controls\n\n\n      _this.controls = new OrbitControls(_this.camera);\n\n      _this.controls.target.set(_this.controlsPosition.x, _this.controlsPosition.y, _this.controlsPosition.z);\n\n      _this.controls.update(); // Scene\n\n\n      _this.scene = new Scene();\n      _this.scene.background = new Color(_this.props.backgroundColor || 0xffffff); //this.scene.fog = new THREE.Fog(0xa0a0a0, 200, 1000);\n      // Light\n\n      var light = new HemisphereLight(0xffffff, 0x444444);\n      light.position.set(0, 200, 0);\n\n      _this.scene.add(light);\n\n      light = new DirectionalLight(0xffffff);\n      light.position.set(0, 200, 100);\n      light.castShadow = true;\n      light.shadow.camera.top = 180;\n      light.shadow.camera.bottom = -100;\n      light.shadow.camera.left = -120;\n      light.shadow.camera.right = 120;\n      light = new DirectionalLight(0xffffff);\n\n      _this.scene.add(light);\n\n      light = new AmbientLight(0x222222);\n\n      _this.scene.add(light); // model\n\n\n      if (_this.props.url) {\n        var loader = new FBXLoader();\n        loader.load(_this.props.url, function (object) {\n          object.mixer = new AnimationMixer(object);\n\n          if (object.mixer) {\n            _this.mixers.push(object.mixer);\n          }\n\n          if (object.animations[0]) {\n            var action = object.mixer.clipAction(object.animations[0]);\n            action.play();\n          }\n\n          object.traverse(function (child) {\n            if (child.isMesh) {\n              child.castShadow = true;\n              child.receiveShadow = true;\n            }\n          });\n\n          _this.scene.add(object);\n        }, function (s) {\n          _this.handleLoad(s);\n        }, function (error) {\n          _this.handleError(error);\n        });\n      } // Renderer\n\n\n      _this.renderer = new WebGLRenderer({\n        antialias: true\n      });\n\n      _this.renderer.setPixelRatio(window.devicePixelRatio);\n\n      _this.renderer.setSize(window.innerWidth, window.innerHeight);\n\n      _this.renderer.shadowMap.enabled = true;\n\n      _this.container.appendChild(_this.renderer.domElement);\n\n      window.addEventListener('resize', _this.onWindowResize.bind(_this), false);\n\n      _this.animate();\n    }, _this.handleLoad = function (e) {\n      if (_this.props.onLoad) {\n        _this.props.onLoading(e);\n      }\n    }, _this.handleError = function (e) {\n      if (_this.props.onError) {\n        _this.props.onError(e);\n      }\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  createClass(ReactThreeVisor, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.checkProps();\n      this.init();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement('div', {\n        ref: function ref(el) {\n          _this2.container = el;\n        }\n      });\n    }\n  }]);\n  return ReactThreeVisor;\n}(Component);\n\nReactThreeVisor.propTypes = {\n  url: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  cameraPosition: PropTypes.object,\n  controlsPosition: PropTypes.object,\n  angle: PropTypes.number,\n  far: PropTypes.number,\n  near: PropTypes.number,\n  onError: PropTypes.func,\n  onLoading: PropTypes.func\n};\nexport default ReactThreeVisor;","map":{"version":3,"sources":["C:/Users/tarus/node_modules/react-three-fbx-viewer/dist/index.es.js"],"names":["React","Component","PropTypes","Number","EPSILON","undefined","Math","pow","isInteger","value","isFinite","floor","sign","x","Function","prototype","Object","defineProperty","get","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","i","l","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","lut","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","min","max","euclideanModulo","n","m","mapLinear","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","defineProperties","set","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","v","add","w","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","Matrix4","error","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","identity","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","z","extractRotation","Vector3","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","d","f","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","zero","one","q","compose","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","count","getZ","applyMatrix4","setXYZ","determinant","transpose","tmp","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","position","quaternion","_x","_y","_z","_w","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","sx","sy","sz","decompose","vector","matrix","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","left","right","top","bottom","near","far","makeOrthographic","h","p","Quaternion","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","onChangeCallback","setFromEuler","update","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","r","EPS","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","callback","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","projectionMatrix","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","Matrix3","isMatrix3","setFromMatrix4","g","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","textureId","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","name","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","create","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","getDataURL","canvas","HTMLCanvasElement","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","metadata","generator","wrap","images","url","Array","isArray","dispose","transformUv","uv","Vector4","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","getW","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","setSize","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","isWebGLRenderTargetCube","DataTexture","data","isDataTexture","Box3","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","object","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","scope","traverse","node","geometry","isGeometry","vertices","isBufferGeometry","attributes","updateMatrixWorld","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","closestPoint","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","v0","f0","f1","f2","testAxis","extents","triangleNormal","satForAxes","axes","j","p0","p1","p2","triangle","distanceToPoint","clampedPoint","getBoundingSphere","Sphere","intersect","union","xax","xay","xaz","xbx","xby","xbz","yax","yay","yaz","ybx","yby","ybz","zax","zay","zaz","zbx","zby","zbz","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Plane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","direction","delta","denominator","start","intersectsLine","startSign","endSign","end","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","Frustum","p3","p4","p5","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","distance","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","lights_pars_maps","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","ShaderChunk","UniformsUtils","merge","uniforms","merged","u","uniforms_src","uniforms_dst","parameter_src","isColor","ColorKeywords","Color","setRGB","setHex","setStyle","hex","setHSL","hue2rgb","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","charAt","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","SRGBToLinear","copyLinearToSRGB","LinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","hsl","addColors","color1","color2","UniformsLib","diffuse","opacity","map","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","maxMipLevel","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","depth","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","clearCoat","clearCoatRoughness","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","createBuffer","bufferType","usage","dynamic","DYNAMIC_DRAW","STATIC_DRAW","buffer","bindBuffer","bufferData","onUploadCallback","FLOAT","Float32Array","Float64Array","Uint16Array","UNSIGNED_SHORT","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","Int32Array","INT","Int8Array","BYTE","Uint8Array","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","isInterleavedBufferAttribute","remove","deleteBuffer","delete","Euler","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Layers","mask","channel","enable","toggle","disable","test","layers","object3DId","Object3D","parent","children","DefaultUp","onRotationChange","onQuaternionChange","enumerable","modelViewMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","force","geometries","materials","shapes","JSON","stringify","serialize","library","element","parameters","shape","material","uuids","extractFromCache","cache","values","key","recursive","parse","Camera","matrixWorldInverse","OrthographicCamera","zoom","view","updateProjectionMatrix","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","enabled","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","Face3","materialIndex","vertexNormals","vertexColors","geometryId","Geometry","colors","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","computeBoundingBox","obj","fromBufferGeometry","indices","positions","normals","uvs","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","isMesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","materialIndexSort","sort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","hash","k","kl","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","BufferAttribute","itemSize","normalized","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","arrayMax","bufferGeometryId","BufferGeometry","morphAttributes","drawRange","getIndex","setIndex","addAttribute","getAttribute","removeAttribute","addGroup","clearGroups","setDrawRange","needsUpdate","isPoints","isLine","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","keys","morphAttribute","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","materialId","Material","blending","side","flatShading","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","overdraw","isMaterial","onBeforeCompile","setValues","newValue","currentValue","isRoot","emissiveIntensity","normalMapType","sizeAttenuation","linewidth","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","skinning","srcPlanes","dstPlanes","MeshBasicMaterial","combine","isMeshBasicMaterial","ShaderMaterial","defines","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","isShaderMaterial","Ray","origin","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","Line3","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","edgeList","projectedPoint","minDistance","Mesh","drawMode","updateMorphTargets","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","String","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","intersects","groupMaterial","faceIndex","fvA","fvB","fvC","isMultiMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","WebGLBackground","renderer","state","objects","clearColor","clearAlpha","planeCamera","planeMesh","boxMesh","render","renderList","scene","forceClear","background","setClear","autoClear","clear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","renderBufferDirect","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","extension","drawArraysInstancedANGLE","maxInstancedCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","uniform","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","fromCache","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","_bufferGeometry","geometryAttributes","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","getWireframeAttribute","geometryIndex","WebGLIndexedBufferRenderer","drawElements","drawElementsInstancedANGLE","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","TRIANGLE_STRIP","TRIANGLE_FAN","LINES","LINE_STRIP","LINE_LOOP","POINTS","reset","programs","autoReset","absNumericalSort","WebGLMorphtargets","influencesList","program","objectInfluences","influences","getUniforms","setValue","WebGLObjects","updateList","CubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocTextureUnit","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2f","uniform2fv","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4f","uniform4fv","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","updateCache","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","addLineNumbers","split","join","WebGLShader","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","objectSpaceNormalMap","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","parseIncludes","pattern","include","unrollLoops","snippet","unroll","WebGLProgram","code","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","trim","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","usedTimes","WebGLPrograms","capabilities","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","parameterNames","allocateBones","skeleton","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","currentRenderTarget","getRenderTarget","gammaOutput","gammaInput","envMapMode","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","pop","WebGLProperties","painterSortStable","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","renderItem","WebGLRenderLists","lists","list","UniformsCache","light","halfWidth","halfHeight","WebGLLights","ambient","vector3","matrix42","setup","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","intensity","isAmbientLight","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","spritesArray","pushLight","pushShadow","shadowLight","pushSprite","setupLights","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","WebGLShadowMap","_renderer","_objects","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","autoUpdate","_gl","_state","BLEND","setTest","setScissorTest","faceCount","shadowCamera","vpWidth","vpHeight","pars","isSpotLightShadow","shadowMatrix","setRenderTarget","vpDimensions","renderObject","getDepthMaterial","lightPositionWorld","result","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","variantIndex","keyA","keyB","materialsForVariant","cachedMaterial","CanvasTexture","isCanvasTexture","WebGLSpriteRenderer","vertexBuffer","elementBuffer","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fogDepth","fillStyle","fillRect","sprites","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","CULL_FACE","vertexAttribPointer","activeTexture","TEXTURE0","oldFogType","sceneFogType","isFog","density","setBlending","setMask","WebGLState","utils","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentProgram","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","vertexAttribDivisorANGLE","disableVertexAttribArray","getCompressedTextureFormats","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","convert","setMaterial","frontFaceCW","setPolygonOffset","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","compressedTexImage2D","apply","WebGLTextures","_isWebGL2","WebGL2RenderingContext","_videoTextures","_canvas","clampToMaxSize","maxSize","makePowerOfTwo","HTMLImageElement","ImageBitmap","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","generateMipmap","textureProperties","__maxMipLevel","LOG2E","filterFallback","LINEAR","onTextureDispose","deallocateTexture","isVideoTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","updateVideoTexture","__version","complete","uploadTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","cubeImage","isPowerOfTwoImage","glFormat","glType","setTextureParameters","mipmap","setTextureCubeDynamic","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","CLAMP_TO_EDGE","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","WebGLUtils","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","RGB","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","Group","isGroup","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","skew","ArrayCamera","cameras","isArrayCamera","WebVRManager","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","window","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraL","bounds","cameraR","cameraVR","isPresenting","currentSize","currentPixelRatio","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","animation","isTriggerPressed","findGamepad","gamepads","navigator","getGamepads","gamepad","startsWith","updateControllers","controller","pose","hasPosition","orientation","buttonId","buttons","pressed","userHeight","getController","getDevice","setDevice","setPoseTarget","getCamera","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","poseObject","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebXRManager","session","frameOfRef","inputSources","setCompatibleXRDevice","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","setSession","baseLayer","XRWebGLLayer","requestFrameOfReference","frameOfReferenceType","then","getInputSources","updateCamera","onAnimationFrameCallback","getDevicePose","views","getViewport","getViewMatrix","inputPose","getInputPose","pointerMatrix","THREE","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_isContextLost","_framebuffer","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","getTargetPixelRatio","contextAttributes","onContextLost","onContextRestore","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","spriteRenderer","initGLContext","vr","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","getDrawingBufferSize","pixelRatio","getCurrentViewport","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","isMeshPhongMaterial","isMeshStandardMaterial","isMeshNormalMaterial","normalArray","nx","ny","nz","uvArray","colorArray","setProgram","geometryProgram","updateBuffers","rangeFactor","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isInstancedBufferGeometry","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","compile","isLight","initMaterial","projectObject","opaqueObjects","transparentObjects","overrideMaterial","renderObjects","isSprite","isImmediateRenderObject","camera2","materialProperties","programChange","lightsHash","numSupportedMorphTargets","numSupportedMorphNormals","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","refreshUniformsDepth","refreshUniformsDistance","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","textureUnit","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","Scene","SpriteMaterial","isSpriteMaterial","Sprite","intersectPoint","worldScale","mvPosition","alignedPosition","rotatedPosition","viewWorldMatrix","transformVertex","vertexPosition","LOD","levels","addLevel","getObjectForDistance","matrixPosition","Skeleton","boneInverses","calculateInverses","bone","isBone","offsetMatrix","identityMatrix","getBoneByName","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","bind","normalizeSkinWeights","gbone","pos","rotq","scl","sw","vec","skinWeight","linecap","linejoin","Line","LineSegments","computeLineDistances","positionAttribute","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","nbVertices","LineLoop","Points","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","DepthTexture","WireframeGeometry","o","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","uvBuffer","subdivide","appplyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateBufferData","generateSegment","generateIndices","getPointAt","N","B","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","prev","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","nextZ","prevZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q2","inside","Node","an","bp","sum","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","ahole","hl","shapePoints","extractPoints","reverse","concat","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","toJSON$1","shapeHole","indexOffset","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","transform","DefaultLoadingManager","loading","FileLoader","manager","load","cached","setTimeout","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","toLowerCase","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","callbacks","status","withCredentials","overrideMimeType","header","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","CompressedTextureLoader","_parser","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","texData","ImageLoader","crossOrigin","onImageLoad","onImageError","substr","src","setCrossOrigin","CubeTextureLoader","urls","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","fromJSON","json","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","weight","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","tangent","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","StringKeyframeTrack","times","interpolation","KeyframeTrack","ValueTypeName","ValueBufferType","DefaultInterpolation","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","BooleanKeyframeTrack","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","QuaternionLinearInterpolant","QuaternionKeyframeTrack","getValueSize","ColorKeyframeTrack","NumberKeyframeTrack","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","TimeBufferType","setInterpolation","validate","optimize","trackType","_getTrackTypeForValueTypeName","track","getInterpolation","typeName","VectorKeyframeTrack","InterpolantFactoryMethodDiscrete","factoryMethod","createInterpolant","shift","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","AnimationClip","duration","tracks","resetDuration","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","MaterialLoader","setTextures","getTexture","shading","BufferGeometryLoader","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","Handlers","handlers","regex","onLoadStart","onLoadProgress","onLoadComplete","initMaterials","texturePath","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","JSONLoader","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","ObjectLoader","substring","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","geometryShapes","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","ImageBitmapLoader","createImageBitmap","fetch","setOptions","res","blob","imageBitmap","catch","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","StereoCamera","eyeSep","instance","eyeRight","eyeLeft","eyeSepOnProjection","ymax","xmin","xmax","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","setValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","loop","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setBuffer","play","createBufferSource","onended","onEnded","pause","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","RESERVED_CHARS_RE","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","findNode","nodeName","root","isAnimationObjectGroup","sanitizeNodeName","reservedRe","RegExp","wordChar","wordCharOrDot","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","getValue_direct","getValue_array","resolvedProperty","getValue_arrayElement","getValue_toArray","SetterByBindingTypeAndVersioning","setValue_direct","targetObject","setValue_direct_setNeedsUpdate","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","getValue_unbound","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","isInterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","setFromCamera","coords","intersectObjects","Clock","autoStart","oldTime","elapsedTime","running","performance","Date","getElapsedTime","getDelta","newTime","Spherical","other","makeSafe","vec3","Cylindrical","Box2","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","SpotLightHelper","cone","coneLength","coneWidth","getBoneList","boneList","SkeletonHelper","boneMatrix","matrixWorldInv","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","BoxHelper","Box3Helper","PlaneHelper","positions2","lineGeometry","coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","ClosedSplineCurve3","SplineCurve3","Spline","initFromArray","getControlPointsArray","reparametrizeByArcLength","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","XHRLoader","BinaryTextureLoader","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","copyIndicesArray","addIndex","addDrawCall","clearDrawCalls","computeOffsets","getArrays","addShapeList","wrapAround","wrapRGB","metal","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","shadowMapCullFace","renderReverseSided","renderSingleSided","standing","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","THREE$1","CubeGeometry","classCallCheck","Constructor","createClass","props","descriptor","configurable","writable","protoProps","staticProps","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","OrbitControls","require","FBXLoader","ReactThreeVisor","_Component","_ref","_temp","_ret","_len","args","_key","getPrototypeOf","checkProps","controlsPosition","ligths","onWindowResize","innerWidth","innerHeight","mixers","clock","controls","backgroundColor","handleLoad","handleError","devicePixelRatio","appendChild","onLoading","componentDidMount","_this2","createElement","ref","el","propTypes","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '94';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar CullFaceFrontBack = 3;\nvar FrontFaceDirectionCW = 0;\nvar FrontFaceDirectionCCW = 1;\nvar BasicShadowMap = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar SmoothShading = 2;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar RGBEFormat = RGBAFormat;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 33776;\nvar RGBA_S3TC_DXT1_Format = 33777;\nvar RGBA_S3TC_DXT3_Format = 33778;\nvar RGBA_S3TC_DXT5_Format = 33779;\nvar RGB_PVRTC_4BPPV1_Format = 35840;\nvar RGB_PVRTC_2BPPV1_Format = 35841;\nvar RGBA_PVRTC_4BPPV1_Format = 35842;\nvar RGBA_PVRTC_2BPPV1_Format = 35843;\nvar RGB_ETC1_Format = 36196;\nvar RGBA_ASTC_4x4_Format = 37808;\nvar RGBA_ASTC_5x4_Format = 37809;\nvar RGBA_ASTC_5x5_Format = 37810;\nvar RGBA_ASTC_6x5_Format = 37811;\nvar RGBA_ASTC_6x6_Format = 37812;\nvar RGBA_ASTC_8x5_Format = 37813;\nvar RGBA_ASTC_8x6_Format = 37814;\nvar RGBA_ASTC_8x8_Format = 37815;\nvar RGBA_ASTC_10x5_Format = 37816;\nvar RGBA_ASTC_10x6_Format = 37817;\nvar RGBA_ASTC_10x8_Format = 37818;\nvar RGBA_ASTC_10x10_Format = 37819;\nvar RGBA_ASTC_12x10_Format = 37820;\nvar RGBA_ASTC_12x12_Format = 37821;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar LogLuvEncoding = 3003;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\nvar TangentSpaceNormalMap = 0;\nvar ObjectSpaceNormalMap = 1;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: ( function () {\n\n\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\tvar lut = [];\n\n\t\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t\tlut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t\t}\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = lut[ d0 & 0xff ] + lut[ d0 >> 8 & 0xff ] + lut[ d0 >> 16 & 0xff ] + lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d1 & 0xff ] + lut[ d1 >> 8 & 0xff ] + '-' + lut[ d1 >> 16 & 0x0f | 0x40 ] + lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\tlut[ d2 & 0x3f | 0x80 ] + lut[ d2 >> 8 & 0xff ] + '-' + lut[ d2 >> 16 & 0xff ] + lut[ d2 >> 24 & 0xff ] +\n\t\t\t\tlut[ d3 & 0xff ] + lut[ d3 >> 8 & 0xff ] + lut[ d3 >> 16 & 0xff ] + lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t};\n\n\t} )(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function () {\n\n\t\tvar zero = new Vector3( 0, 0, 0 );\n\t\tvar one = new Vector3( 1, 1, 1 );\n\n\t\treturn function makeRotationFromQuaternion( q ) {\n\n\t\t\treturn this.compose( zero, q, one );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t        te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t        te[ 1 ] = ( xy + wz ) * sx;\n\t        te[ 2 ] = ( xz - wy ) * sx;\n\t        te[ 3 ] = 0;\n\n\t        te[ 4 ] = ( xy - wz ) * sy;\n\t        te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t        te[ 6 ] = ( yz + wx ) * sy;\n\t        te[ 7 ] = 0;\n\n\t        te[ 8 ] = ( xz + wy ) * sz;\n\t        te[ 9 ] = ( yz - wx ) * sz;\n\t        te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t        te[ 11 ] = 0;\n\n\t        te[ 12 ] = position.x;\n\t        te[ 13 ] = position.y;\n\t        te[ 14 ] = position.z;\n\t        te[ 15 ] = 1;\n\n\t        return this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tinverse: function () {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tvar s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\treturn this.normalize();\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tfunction getDataURL( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tvar url;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\turl = [];\n\n\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\turl.push( getDataURL( image[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// process single image\n\n\t\t\t\t\turl = getDataURL( image );\n\n\t\t\t\t}\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: url\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : true;\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: WebGLRenderTarget,\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tintersectsTriangle: ( function () {\n\n\t\t// triangle centered vertices\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\t// triangle edge vectors\n\t\tvar f0 = new Vector3();\n\t\tvar f1 = new Vector3();\n\t\tvar f2 = new Vector3();\n\n\t\tvar testAxis = new Vector3();\n\n\t\tvar center = new Vector3();\n\t\tvar extents = new Vector3();\n\n\t\tvar triangleNormal = new Vector3();\n\n\t\tfunction satForAxes( axes ) {\n\n\t\t\tvar i, j;\n\n\t\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t\ttestAxis.fromArray( axes, i );\n\t\t\t\t// project the aabb onto the seperating axis\n\t\t\t\tvar r = extents.x * Math.abs( testAxis.x ) + extents.y * Math.abs( testAxis.y ) + extents.z * Math.abs( testAxis.z );\n\t\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\t\tvar p0 = v0.dot( testAxis );\n\t\t\t\tvar p1 = v1.dot( testAxis );\n\t\t\t\tvar p2 = v2.dot( testAxis );\n\t\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn function intersectsTriangle( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( center );\n\t\t\textents.subVectors( this.max, center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\tv0.subVectors( triangle.a, center );\n\t\t\tv1.subVectors( triangle.b, center );\n\t\t\tv2.subVectors( triangle.c, center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\tf0.subVectors( v1, v0 );\n\t\t\tf1.subVectors( v2, v1 );\n\t\t\tf2.subVectors( v0, v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - f0.z, f0.y, 0, - f1.z, f1.y, 0, - f2.z, f2.y,\n\t\t\t\tf0.z, 0, - f0.x, f1.z, 0, - f1.x, f2.z, 0, - f2.x,\n\t\t\t\t- f0.y, f0.x, 0, - f1.y, f1.x, 0, - f2.y, f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\ttriangleNormal.crossVectors( f0, f1 );\n\t\t\taxes = [ triangleNormal.x, triangleNormal.y, triangleNormal.z ];\n\t\t\treturn satForAxes( axes );\n\n\t\t};\n\n\t} )(),\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\ttarget = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty( ) ) return this;\n\n\t\tvar m = matrix.elements;\n\n\t\tvar xax = m[ 0 ] * this.min.x, xay = m[ 1 ] * this.min.x, xaz = m[ 2 ] * this.min.x;\n\t\tvar xbx = m[ 0 ] * this.max.x, xby = m[ 1 ] * this.max.x, xbz = m[ 2 ] * this.max.x;\n\t\tvar yax = m[ 4 ] * this.min.y, yay = m[ 5 ] * this.min.y, yaz = m[ 6 ] * this.min.y;\n\t\tvar ybx = m[ 4 ] * this.max.y, yby = m[ 5 ] * this.max.y, ybz = m[ 6 ] * this.max.y;\n\t\tvar zax = m[ 8 ] * this.min.z, zay = m[ 9 ] * this.min.z, zaz = m[ 10 ] * this.min.z;\n\t\tvar zbx = m[ 8 ] * this.max.z, zby = m[ 9 ] * this.max.z, zbz = m[ 10 ] * this.max.z;\n\n\t\tthis.min.x = Math.min( xax, xbx ) + Math.min( yax, ybx ) + Math.min( zax, zbx ) + m[ 12 ];\n\t\tthis.min.y = Math.min( xay, xby ) + Math.min( yay, yby ) + Math.min( zay, zby ) + m[ 13 ];\n\t\tthis.min.z = Math.min( xaz, xbz ) + Math.min( yaz, ybz ) + Math.min( zaz, zbz ) + m[ 14 ];\n\t\tthis.max.x = Math.max( xax, xbx ) + Math.max( yax, ybx ) + Math.max( zax, zbx ) + m[ 12 ];\n\t\tthis.max.y = Math.max( xay, xby ) + Math.max( yay, yby ) + Math.max( zay, zby ) + m[ 13 ];\n\t\tthis.max.z = Math.max( xaz, xbz ) + Math.max( yaz, ybz ) + Math.max( zaz, zbz ) + m[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t},\n\n\tgetBoundingBox: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\ttarget = new Box3();\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new Vector3(),\n\t\t\tp2 = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_begin = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n\";\n\nvar lights_pars_maps = \"#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n#endif\\n\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#ifndef STANDARD\\n\\t\\tclearCoatRadiance += getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), maxMipLevel );\\n\\t#endif\\n#endif\\n\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t#ifdef FLIP_SIDED\\n\\t\\t\\tnormal = - normal;\\n\\t\\t#endif\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tnormal = normalize( normalMatrix * normal );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\t#ifdef OBJECTSPACE_NORMALMAP\\n\\t\\tuniform mat3 normalMatrix;\\n\\t#else\\n\\t\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\t\\tmapN.xy *= normalScale;\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\treturn normalize( tsn * mapN );\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars_begin>\\n#include <lights_pars_maps>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || ( defined( USE_NORMALMAP ) && ! defined( OBJECTSPACE_NORMALMAP ) )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_pars_maps: lights_pars_maps,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopySRGBToLinear: function () {\n\n\t\tfunction SRGBToLinear( c ) {\n\n\t\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t\t}\n\n\t\treturn function copySRGBToLinear( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcopyLinearToSRGB: function () {\n\n\t\tfunction LinearToSRGB( c ) {\n\n\t\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t\t}\n\n\t\treturn function copyLinearToSRGB( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tconvertSRGBToLinear: function () {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToSRGB: function () {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function () {\n\n\t\tvar hsl = {};\n\n\t\treturn function ( h, s, l ) {\n\n\t\t\tthis.getHSL( hsl );\n\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 },\n\t\tmaxMipLevel: { value: 0 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAnimation() {\n\n\tvar context = null;\n\tvar isAnimating = false;\n\tvar animationLoop = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tif ( isAnimating === false ) return;\n\n\t\tanimationLoop( time, frame );\n\n\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Object3D,\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\t\tvar vector = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tvector.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, target, scale );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, target );\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.geometry !== undefined ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn target.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Geometry,\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( mesh.matrixAutoUpdate ) mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n\tthis.userData = {};\n\n}\n\nBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: BufferGeometry,\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\treturn this.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tvar offset = new Vector3();\n\n\t\treturn function center() {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( offset ).negate();\n\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) {\n\n\t\t\toffset = 0;\n\n\t\t\tconsole.warn(\n\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t);\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.shadowSide = null;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: Material,\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\tthis.uniformsNeedUpdate = false;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = Object.assign( {}, source.defines );\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tvar directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, target ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, target ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, target ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tgetNormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function getNormal( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\ttarget.cross( v0 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tgetBarycoord: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function getBarycoord( point, a, b, c, target ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, v1 );\n\n\t\t\treturn ( v1.x >= 0 ) && ( v1.y >= 0 ) && ( ( v1.x + v1.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tgetArea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getArea() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tgetMidpoint: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tgetNormal: function ( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t},\n\n\tgetPlane: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\ttarget = new Vector3();\n\n\t\t}\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tgetBarycoord: function ( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar plane = new Plane();\n\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\tvar projectedPoint = new Vector3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function closestPointToPoint( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar minDistance = Infinity;\n\n\t\t\t// project the point onto the plane of the triangle\n\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t// check if the projection lies within the triangle\n\n\t\t\tif ( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t// if so, this is the closest point\n\n\t\t\t\ttarget.copy( projectedPoint );\n\n\t\t\t} else {\n\n\t\t\t\t// if not, the point falls outside the triangle. the target is the closest point to the triangle's edges or vertices\n\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\tfor ( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\tif ( distance < minDistance ) {\n\n\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\ttarget.copy( closestPoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.getBarycoord( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tvar face = new Face3( a, b, c );\n\t\t\t\tTriangle.getNormal( vA, vB, vC, face.normal );\n\n\t\t\t\tintersection.face = face;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\t// TODO Push this to renderList\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, info ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\t// TODO Remove duplicate code\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t}\n\n\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode );\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfo.update( count, mode, geometry.maxInstancedCount );\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLInfo( gl ) {\n\n\tvar memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tvar render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\tinstanceCount = instanceCount || 1;\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.TRIANGLE_STRIP:\n\t\t\tcase gl.TRIANGLE_FAN:\n\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.frame ++;\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, info ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = info.render.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Mugen87 / https://github.com/Mugen87\n * @author mrdoob / http://mrdoob.com/\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\nvar mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar unit = renderer.allocTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform2iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform3iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform4iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1fv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tvar cache = this.cache;\n\n\tif ( arraysEqual( cache, v ) ) return;\n\n\tgl.uniform1iv( this.addr, v );\n\n\tcopyArray( cache, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 2 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform2fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 3 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform3fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniform4fv( this.addr, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 4 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 9 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tvar cache = this.cache;\n\tvar data = flatten( v, this.size, 16 );\n\n\tif ( arraysEqual( cache, data ) ) return;\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\tthis.updateCache( data );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar cache = this.cache;\n\tvar n = v.length;\n\n\tvar units = allocTexUnits( renderer, n );\n\n\tif ( arraysEqual( cache, units ) === false ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.cache = [];\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\tvar cache = this.cache;\n\n\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\tthis.cache = new Float32Array( data.length );\n\n\t}\n\n\tcopyArray( cache, data );\n\n};\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t// are not allowed in structured uniforms.\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ] );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || ( parameters.normalMap && ! parameters.objectSpaceNormalMap ) || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.name = shader.name;\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tvar map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nvar count = 0;\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\tid: count ++,\n\n\t\thash: '',\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\tstate.hash = state.id + ',' + directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WebGLRenderState() {\n\n\tvar lights = new WebGLLights();\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\tvar spritesArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\t\tspritesArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction pushSprite( sprite ) {\n\n\t\tspritesArray.push( sprite );\n\n\t}\n\n\tfunction setupLights( camera ) {\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t}\n\n\tvar state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\t\tspritesArray: spritesArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow,\n\t\tpushSprite: pushSprite\n\t};\n\n}\n\nfunction WebGLRenderStates() {\n\n\tvar renderStates = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\n\t\tvar renderState = renderStates[ hash ];\n\n\t\tif ( renderState === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState();\n\t\t\trenderStates[ hash ] = renderState;\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tresult.side = ( material.shadowSide != null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\nCanvasTexture.prototype.isCanvasTexture = true;\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\n\t// decompose matrixWorld\n\n\tvar spritePosition = new Vector3();\n\tvar spriteRotation = new Quaternion();\n\tvar spriteScale = new Vector3();\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0,\n\t\t\t  0.5, - 0.5, 1, 0,\n\t\t\t  0.5, 0.5, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition: gl.getAttribLocation( program, 'position' ),\n\t\t\tuv: gl.getAttribLocation( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset: gl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale: gl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation: gl.getUniformLocation( program, 'rotation' ),\n\t\t\tcenter: gl.getUniformLocation( program, 'center' ),\n\t\t\tscale: gl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor: gl.getUniformLocation( program, 'color' ),\n\t\t\tmap: gl.getUniformLocation( program, 'map' ),\n\t\t\topacity: gl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: gl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix: gl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType: gl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity: gl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear: gl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar: gl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor: gl.getUniformLocation( program, 'fogColor' ),\n\t\t\tfogDepth: gl.getUniformLocation( program, 'fogDepth' ),\n\n\t\t\talphaTest: gl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new CanvasTexture( canvas );\n\n\t}\n\n\tthis.render = function ( sprites, scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tstate.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.position );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\t\tvar center = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tif ( material.visible === false ) continue;\n\n\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\tcenter[ 0 ] = sprite.center.x - 0.5;\n\t\t\tcenter[ 1 ] = sprite.center.y - 0.5;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.center, center );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\t\t\tstate.buffers.color.setMask( material.colorWrite );\n\n\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\n\t\tstate.reset();\n\n\t};\n\n\tfunction createProgram() {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 center;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvUV = uvOffset + uv * uvScale;',\n\n\t\t\t'\tvec2 alignedPosition = ( position - center ) * scale;',\n\n\t\t\t'\tvec2 rotatedPosition;',\n\t\t\t'\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t'\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t'\tvec4 mvPosition;',\n\n\t\t\t'\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t'\tmvPosition.xy += rotatedPosition;',\n\n\t\t\t'\tgl_Position = projectionMatrix * mvPosition;',\n\n\t\t\t'\tfogDepth = - mvPosition.z;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec4 texture = texture2D( map, vUV );',\n\n\t\t\t'\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t'\tif ( gl_FragColor.a < alphaTest ) discard;',\n\n\t\t\t'\tif ( fogType > 0 ) {',\n\n\t\t\t'\t\tfloat fogFactor = 0.0;',\n\n\t\t\t'\t\tif ( fogType == 1 ) {',\n\n\t\t\t'\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n\n\t\t\t'\t\t} else {',\n\n\t\t\t'\t\t\tconst float LOG2 = 1.442695;',\n\t\t\t'\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );',\n\t\t\t'\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t'\t\t}',\n\n\t\t\t'\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );',\n\n\t\t\t'\t}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar capabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar lineWidthAvailable = false;\n\tvar version = 0;\n\tvar glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tenable( gl.BLEND );\n\tsetBlending( NormalBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tcapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tcapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_astc' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t} else {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tvar flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext ); /* global WebGL2RenderingContext */\n\tvar _videoTextures = {};\n\tvar _canvas;\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tif ( 'data' in image ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tif ( _canvas === undefined ) _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t\t_canvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\t_canvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = _canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, _canvas.width, _canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + _canvas.width + 'x' + _canvas.height, image );\n\n\t\t\treturn _canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\tdelete _videoTextures[ texture.id ];\n\n\t\t}\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! _isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\tgenerateMipmap( _gl.TEXTURE_2D, texture, image.width, image.height );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfo.memory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tvar id = texture.id;\n\t\tvar frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures[ id ] !== frame ) {\n\n\t\t\t_videoTextures[ id ] = frame;\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn p;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group,\n\n\tisGroup: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tvar poseTarget = null;\n\n\tvar controllers = [];\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\tvar tempQuaternion = new Quaternion();\n\tvar tempPosition = new Vector3();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tfunction isPresenting() {\n\n\t\treturn device !== null && device.isPresenting === true;\n\n\t}\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t\tanimation.start();\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t}\n\n\t//\n\n\tvar isTriggerPressed = false;\n\n\tfunction findGamepad( id ) {\n\n\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\tfor ( var i = 0, j = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\tif ( j === id ) return gamepad;\n\n\t\t\t\tj ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateControllers() {\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\tif ( gamepad.pose === null ) return;\n\n\t\t\t\t//  Pose\n\n\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\tif ( pose.hasPosition === false ) controller.position.set( 0.2, - 0.6, - 0.05 );\n\n\t\t\t\tif ( pose.position !== null ) controller.position.fromArray( pose.position );\n\t\t\t\tif ( pose.orientation !== null ) controller.quaternion.fromArray( pose.orientation );\n\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t//  Trigger\n\n\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\tif ( isTriggerPressed !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\tisTriggerPressed = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\tif ( isTriggerPressed ) {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\tthis.userHeight = 1.6;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tanimation.setContext( value );\n\n\t};\n\n\tthis.setPoseTarget = function ( object ) {\n\n\t\tif ( object !== undefined ) poseTarget = object;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) {\n\n\t\t\tcamera.position.set( 0, scope.userHeight, 0 );\n\t\t\treturn camera;\n\n\t\t}\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar stageParameters = device.stageParameters;\n\n\t\tif ( stageParameters ) {\n\n\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t} else {\n\n\t\t\tstandingMatrix.makeTranslation( 0, scope.userHeight, 0 );\n\n\t\t}\n\n\n\t\tvar pose = frameData.pose;\n\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\tposeObject.matrix.copy( standingMatrix );\n\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t}\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\ttempPosition.fromArray( pose.position );\n\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\tposeObject.position.add( tempPosition );\n\n\t\t}\n\n\t\tposeObject.updateMatrixWorld();\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t// TODO (mrdoob) Double check this code\n\n\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\tvar parent = poseObject.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK (mrdoob)\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\tupdateControllers();\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar animation = new WebGLAnimation();\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tanimation.setAnimationLoop( callback );\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( isPresenting() ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebXRManager( renderer ) {\n\n\tvar gl = renderer.context;\n\n\tvar device = null;\n\tvar session = null;\n\n\tvar frameOfRef = null;\n\n\tvar pose = null;\n\n\tvar controllers = [];\n\tvar inputSources = [];\n\n\tfunction isPresenting() {\n\n\t\treturn session !== null && frameOfRef !== null;\n\n\n\t}\n\n\t//\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.layers.enable( 1 );\n\tcameraL.viewport = new Vector4();\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.layers.enable( 2 );\n\tcameraR.viewport = new Vector4();\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tthis.enabled = false;\n\n\tthis.getController = function ( id ) {\n\n\t\tvar controller = controllers[ id ];\n\n\t\tif ( controller === undefined ) {\n\n\t\t\tcontroller = new Group();\n\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\tcontroller.visible = false;\n\n\t\t\tcontrollers[ id ] = controller;\n\n\t\t}\n\n\t\treturn controller;\n\n\t};\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t\tgl.setCompatibleXRDevice( value );\n\n\t};\n\n\t//\n\n\tfunction onSessionEvent( event ) {\n\n\t\tvar controller = controllers[ inputSources.indexOf( event.inputSource ) ];\n\t\tif ( controller ) controller.dispatchEvent( { type: event.type } );\n\n\t}\n\n\tfunction onSessionEnd() {\n\n\t\trenderer.setFramebuffer( null );\n\t\tanimation.stop();\n\n\t}\n\n\tthis.setSession = function ( value, options ) {\n\n\t\tsession = value;\n\n\t\tif ( session !== null ) {\n\n\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\tsession.baseLayer = new XRWebGLLayer( session, gl );\n\t\t\tsession.requestFrameOfReference( options.frameOfReferenceType ).then( function ( value ) {\n\n\t\t\t\tframeOfRef = value;\n\n\t\t\t\trenderer.setFramebuffer( session.baseLayer.framebuffer );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t} );\n\n\t\t\t//\n\n\t\t\tinputSources = session.getInputSources();\n\n\t\t\tsession.addEventListener( 'inputsourceschange', function () {\n\n\t\t\t\tinputSources = session.getInputSources();\n\t\t\t\tconsole.log( inputSources );\n\n\t\t\t} );\n\n\t\t}\n\n\t};\n\n\tfunction updateCamera( camera, parent ) {\n\n\t\tif ( parent === null ) {\n\n\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t} else {\n\n\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t}\n\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t}\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( isPresenting() ) {\n\n\t\t\tvar parent = camera.parent;\n\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\t// apply camera.parent to cameraVR\n\n\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update camera and its children\n\n\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\tvar children = camera.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t}\n\n\t\t\treturn cameraVR;\n\n\t\t}\n\n\t\treturn camera;\n\n\t};\n\n\tthis.isPresenting = isPresenting;\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tpose = frame.getDevicePose( frameOfRef );\n\n\t\tif ( pose !== null ) {\n\n\t\t\tvar layer = session.baseLayer;\n\t\t\tvar views = frame.views;\n\n\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\tvar view = views[ i ];\n\t\t\t\tvar viewport = layer.getViewport( view );\n\t\t\t\tvar viewMatrix = pose.getViewMatrix( view );\n\n\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t// HACK (mrdoob)\n\t\t\t\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\t\t\t\tcameraVR.projectionMatrix.copy( camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\tvar controller = controllers[ i ];\n\n\t\t\tvar inputSource = inputSources[ i ];\n\n\t\t\tif ( inputSource ) {\n\n\t\t\t\tvar inputPose = frame.getInputPose( inputSource, frameOfRef );\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\tcontroller.matrix.elements = inputPose.pointerMatrix;\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcontroller.visible = false;\n\n\t\t}\n\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\n\t};\n\n\tthis.dispose = function () {};\n\n\t// DEPRECATED\n\n\tthis.getStandingMatrix = function () {\n\n\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\treturn new THREE.Matrix4();\n\n\t};\n\n\tthis.submitFrame = function () {};\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default';\n\n\tvar currentRenderList = null;\n\tvar currentRenderState = null;\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_framebuffer = null,\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3();\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\tpowerPreference: _powerPreference\n\t\t};\n\n\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\n\t}\n\n\tvar extensions, capabilities, state, info;\n\tvar properties, textures, attributes, geometries, objects;\n\tvar programCache, renderLists, renderStates;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\tvar spriteRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'OES_element_index_uint' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tinfo = new WebGLInfo( _gl );\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\tobjects = new WebGLObjects( geometries, info );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\trenderLists = new WebGLRenderLists();\n\t\trenderStates = new WebGLRenderStates();\n\n\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info );\n\n\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\n\t\tinfo.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\t\t_this.info = info;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = ( 'xr' in navigator ) ? new WebXRManager( _this ) : new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tif ( vr.isPresenting() ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getCurrentViewport = function () {\n\n\t\treturn _currentViewport;\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\t\trenderStates.dispose();\n\t\tproperties.dispose();\n\t\tobjects.dispose();\n\n\t\tvr.dispose();\n\n\t\tanimation.stop();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\tmaterial.flatShading === true ) {\n\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = Infinity;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar onAnimationFrameCallback = null;\n\n\tfunction onAnimationFrame( time ) {\n\n\t\tif ( vr.isPresenting() ) return;\n\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t}\n\n\tvar animation = new WebGLAnimation();\n\tanimation.setAnimationLoop( onAnimationFrame );\n\n\tif ( typeof window !== 'undefined' ) animation.setContext( window );\n\n\tthis.setAnimationLoop = function ( callback ) {\n\n\t\tonAnimationFrameCallback = callback;\n\t\tvr.setAnimationLoop( callback );\n\n\t\tanimation.start();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t//\n\n\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\tcurrentRenderState.init();\n\n\t\tscene.onBeforeRender( _this, scene, camera, renderTarget );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tcurrentRenderState.setupLights( camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\tif ( this.info.autoReset ) this.info.reset();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// custom renderers\n\n\t\tvar spritesArray = currentRenderState.state.spritesArray;\n\n\t\tspriteRenderer.render( spritesArray, scene, camera );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t\tcurrentRenderList = null;\n\t\tcurrentRenderState = null;\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushSprite( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tif ( 'viewport' in camera2 ) { // XR\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram = '';\n\n\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar lights = currentRenderState.state.lights;\n\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\tproperties.update( material, 'lightsHash', lights.state.hash );\n\t\t\tprogramChange = false;\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsHash = lights.state.hash;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\t\tvar lights = currentRenderState.state.lights;\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\t\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltc_1 !== undefined ) m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n\t\t\tif ( m_uniforms.ltc_2 !== undefined ) m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, _this );\n\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t}\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tmaterial.map.updateMatrix();\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\tif ( material.side === BackSide ) uniforms.bumpScale.value *= - 1;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\tif ( material.side === BackSide ) uniforms.normalScale.value.negate();\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\t//\n\n\tthis.setFramebuffer = function ( value ) {\n\n\t\t_framebuffer = value;\n\n\t};\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = _framebuffer;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\tvar width = texture.image.width;\n\t\tvar height = texture.image.height;\n\t\tvar glFormat = utils.convert( texture.format );\n\n\t\tthis.setTexture2D( texture, 0 );\n\n\t\t_gl.copyTexImage2D( _gl.TEXTURE_2D, level || 0, glFormat, position.x, position.y, width, height, 0 );\n\n\t};\n\n\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\tvar width = srcTexture.image.width;\n\t\tvar height = srcTexture.image.height;\n\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\tthis.setTexture2D( dstTexture, 0 );\n\n\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t} else {\n\n\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color, this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color, this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\tthis.center = new Vector2( 0.5, 0.5 );\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldScale = new Vector3();\n\t\tvar mvPosition = new Vector3();\n\n\t\tvar alignedPosition = new Vector2();\n\t\tvar rotatedPosition = new Vector2();\n\t\tvar viewWorldMatrix = new Matrix4();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t\t// compute position in camera space\n\t\t\talignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t\t// to check if rotation is not zero\n\t\t\tif ( sin !== undefined ) {\n\n\t\t\t\trotatedPosition.x = ( cos * alignedPosition.x ) - ( sin * alignedPosition.y );\n\t\t\t\trotatedPosition.y = ( sin * alignedPosition.x ) + ( cos * alignedPosition.y );\n\n\t\t\t} else {\n\n\t\t\t\trotatedPosition.copy( alignedPosition );\n\n\t\t\t}\n\n\n\t\t\tvertexPosition.copy( mvPosition );\n\t\t\tvertexPosition.x += rotatedPosition.x;\n\t\t\tvertexPosition.y += rotatedPosition.y;\n\n\t\t\t// transform to world space\n\t\t\tvertexPosition.applyMatrix4( viewWorldMatrix );\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tviewWorldMatrix.getInverse( this.modelViewMatrix ).premultiply( this.matrixWorld );\n\t\t\tmvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( vA.set( - 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vB.set( 0.5, - 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\ttransformVertex( vC.set( 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( vA, vB, vC, false, intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( vB.set( - 0.5, 0.5, 0 ), mvPosition, center, worldScale, sin, cos );\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( vA, vC, vB, false, intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\treturn this;\n\n\t}\n\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t},\n\n\tgetBoneByName: function ( name ) {\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\treturn new LineSegments( geometry, material );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() ),\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true,\n\n\tcomputeLineDistances: ( function () {\n\n\t\tvar start = new Vector3();\n\t\tvar end = new Vector3();\n\n\t\treturn function computeLineDistances() {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\tstart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\tend.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.addAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\tstart.copy( vertices[ i ] );\n\t\t\t\t\tend.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + start.distanceTo( end );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}() )\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n *\n *  morphTargets: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tray.closestPointToPoint( point, intersectPoint );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n}\n\nVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\tconstructor: VideoTexture,\n\n\tisVideoTexture: true,\n\n\tupdate: function () {\n\n\t\tvar video = this.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\tif ( func.length < 3 ) {\n\n\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t}\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tfunc( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n * Port from https://github.com/mapbox/earcut (v2.1.2)\n */\n\nvar Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\tdim = dim || 2;\n\n\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\ttriangles = [];\n\n\t\tif ( ! outerNode ) return triangles;\n\n\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\n\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tvar i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\n\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tvar p = start, again;\n\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\n\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tvar stop = ear, prev, next;\n\n\t// iterate through ears, slicing them one by one\n\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim );\n\t\t\ttriangles.push( ear.i / dim );\n\t\t\ttriangles.push( next.i / dim );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertice leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\n\nfunction isEar( ear ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tvar p = ear.next.next;\n\n\twhile ( p !== ear.prev ) {\n\n\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tvar a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// triangle bbox; min & max are calculated like this for speed\n\n\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t// z-order range for the current triangle bbox;\n\n\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t// first look for points inside the triangle in increasing z-order\n\n\tvar p = ear.nextZ;\n\n\twhile ( p && p.z <= maxZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.nextZ;\n\n\t}\n\n\t// then look for points in decreasing z-order\n\n\tp = ear.prevZ;\n\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\n\t\tp = p.prevZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\n\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tvar a = p.prev, b = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim );\n\t\t\ttriangles.push( p.i / dim );\n\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t// remove two nodes involved\n\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn p;\n\n}\n\n// try splitting polygon into two and triangulate them independently\n\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\n\tvar a = start;\n\n\tdo {\n\n\t\tvar b = a.next.next;\n\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\n\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\n\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tvar queue = [], i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\teliminateHole( queue[ i ], outerNode );\n\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\n\nfunction eliminateHole( hole, outerNode ) {\n\n\touterNode = findHoleBridge( hole, outerNode );\n\n\tif ( outerNode ) {\n\n\t\tvar b = splitPolygon( outerNode, hole );\n\n\t\tfilterPoints( b, b.next );\n\n\t}\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\nfunction findHoleBridge( hole, outerNode ) {\n\n\tvar p = outerNode,\n\t\thx = hole.x,\n\t\thy = hole.y,\n\t\tqx = - Infinity,\n\t\tm;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\n\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\tif ( hy === p.y ) return p;\n\t\t\t\t\tif ( hy === p.next.y ) return p.next;\n\n\t\t\t\t}\n\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\tif ( hx === qx ) return m.prev; // hole touches outer segment; pick lower endpoint\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tvar stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y,\n\t\ttanMin = Infinity,\n\t\ttan;\n\n\tp = m.next;\n\n\twhile ( p !== stop ) {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t}\n\n\treturn m;\n\n}\n\n// interlink polygon nodes in z-order\n\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tvar p = start;\n\n\tdo {\n\n\t\tif ( p.z === null ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\nfunction sortLinked( list ) {\n\n\tvar i, p, q, e, tail, numMerges, pSize, qSize, inSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\n\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\n\tx = 32767 * ( x - minX ) * invSize;\n\ty = 32767 * ( y - minY ) * invSize;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\n\nfunction getLeftmost( start ) {\n\n\tvar p = start, leftmost = start;\n\n\tdo {\n\n\t\tif ( p.x < leftmost.x ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\n\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\tlocallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n}\n\n// signed area of a triangle\n\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\n\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\n\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tif ( ( equals( p1, q1 ) && equals( p2, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) return true;\n\n\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t\t area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\n\nfunction intersectsPolygon( a, b ) {\n\n\tvar p = a;\n\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\t\tintersects( p, p.next, a, b ) ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\n\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\n\nfunction middleInside( a, b ) {\n\n\tvar p = a,\n\t\tinside = false,\n\t\tpx = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) ) {\n\n\t\t\tinside = ! inside;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\nfunction splitPolygon( a, b ) {\n\n\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\n\nfunction insertNode( i, x, y, last ) {\n\n\tvar p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertice index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertice nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = null;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tvar sum = 0;\n\n\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t},\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tvar holeIndices = []; // array of hole indices\n\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tvar holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n};\n\nfunction removeDupEndPts( points ) {\n\n\tvar l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\nExtrudeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tvar scope = this;\n\n\tvar verticesArray = [];\n\tvar uvArray = [];\n\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\tvar shape = shapes[ i ];\n\t\taddShape( shape );\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\tthis.computeVertexNormals();\n\n\t// functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar placeholder = [];\n\n\t\t// options\n\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\tvar extrudePath = options.extrudePath;\n\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t// deprecated options\n\n\t\tif ( options.amount !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\tdepth = options.amount;\n\n\t\t}\n\n\t\t//\n\n\t\tvar extrudePts, extrudeByPath = false;\n\t\tvar splineTube, binormal, normal, position2;\n\n\t\tif ( extrudePath ) {\n\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\textrudeByPath = true;\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t// SETUP TNB variables\n\n\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\tbinormal = new Vector3();\n\t\t\tnormal = new Vector3();\n\t\t\tposition2 = new Vector3();\n\n\t\t}\n\n\t\t// Safeguards if bevels are not enabled\n\n\t\tif ( ! bevelEnabled ) {\n\n\t\t\tbevelSegments = 0;\n\t\t\tbevelThickness = 0;\n\t\t\tbevelSize = 0;\n\n\t\t}\n\n\t\t// Variables initialization\n\n\t\tvar ahole, h, hl; // looping of holes\n\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\tvar vertices = shapePoints.shape;\n\t\tvar holes = shapePoints.holes;\n\n\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\tif ( reverse ) {\n\n\t\t\tvertices = vertices.reverse();\n\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t/* Vertices */\n\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tvertices = vertices.concat( ahole );\n\n\t\t}\n\n\n\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t}\n\n\t\tvar b, bs, t, z,\n\t\t\tvert, vlen = vertices.length,\n\t\t\tface, flen = faces.length;\n\n\n\t\t// Find directions for point movement\n\n\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t//\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t// check for collinear edges\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t// not collinear\n\n\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t//  but prevent crazy spikes\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t}\n\n\n\t\tvar contourMovements = [];\n\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t}\n\n\t\tvar holesMovements = [],\n\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\toneHoleMovements = [];\n\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t}\n\n\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t}\n\n\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tbs = bevelSize;\n\n\t\t// Back facing vertices\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Add stepped vertices...\n\t\t// Including front facing vertices\n\n\t\tvar s;\n\n\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// Add bevel segments planes\n\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\tt = b / bevelSegments;\n\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t\t// contract shape\n\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t}\n\n\t\t\t// expand holes\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/* Faces */\n\n\t\t// Top and bottom faces\n\n\t\tbuildLidFaces();\n\n\t\t// Sides faces\n\n\t\tbuildSideFaces();\n\n\n\t\t/////  Internal functions\n\n\t\tfunction buildLidFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Bottom faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\t// Top faces\n\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t}\n\n\t\t// Create faces for the z-sides of the shape\n\n\t\tfunction buildSideFaces() {\n\n\t\t\tvar start = verticesArray.length / 3;\n\t\t\tvar layeroffset = 0;\n\t\t\tsidewalls( contour, layeroffset );\n\t\t\tlayeroffset += contour.length;\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t//, true\n\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t}\n\n\n\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t}\n\n\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\tvar j, k;\n\t\t\ti = contour.length;\n\n\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\tj = i;\n\t\t\t\tk = i - 1;\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\tvar s = 0,\n\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction v( x, y, z ) {\n\n\t\t\tplaceholder.push( x );\n\t\t\tplaceholder.push( y );\n\t\t\tplaceholder.push( z );\n\n\t\t}\n\n\n\t\tfunction f3( a, b, c ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\n\t\t}\n\n\t\tfunction f4( a, b, c, d ) {\n\n\t\t\taddVertex( a );\n\t\t\taddVertex( b );\n\t\t\taddVertex( d );\n\n\t\t\taddVertex( b );\n\t\t\taddVertex( c );\n\t\t\taddVertex( d );\n\n\n\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\taddUV( uvs[ 0 ] );\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\taddUV( uvs[ 1 ] );\n\t\t\taddUV( uvs[ 2 ] );\n\t\t\taddUV( uvs[ 3 ] );\n\n\t\t}\n\n\t\tfunction addVertex( index ) {\n\n\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t}\n\n\n\t\tfunction addUV( vector2 ) {\n\n\t\t\tuvArray.push( vector2.x );\n\t\t\tuvArray.push( vector2.y );\n\n\t\t}\n\n\t}\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\tvar options = this.parameters.options;\n\n\treturn toJSON( shapes, options, data );\n\n};\n\n//\n\nvar WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\nfunction toJSON( shapes, options, data ) {\n\n\t//\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\t//\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\nShapeGeometry.prototype.toJSON = function () {\n\n\tvar data = Geometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\nShapeBufferGeometry.prototype.toJSON = function () {\n\n\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\tvar shapes = this.parameters.shapes;\n\n\treturn toJSON$1( shapes, data );\n\n};\n\n//\n\nfunction toJSON$1( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\nShadowMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalMapType: THREE.TangentSpaceNormalMap,\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalMapType = TangentSpaceNormalMap;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalMapType = source.normalMapType;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = /*#__PURE__*/Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\t\treturn this;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = this.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( this.status === 0 ) console.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new Texture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\n\nEllipseCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.aX = this.aX;\n\tdata.aY = this.aY;\n\n\tdata.xRadius = this.xRadius;\n\tdata.yRadius = this.yRadius;\n\n\tdata.aStartAngle = this.aStartAngle;\n\tdata.aEndAngle = this.aEndAngle;\n\n\tdata.aClockwise = this.aClockwise;\n\n\tdata.aRotation = this.aRotation;\n\n\treturn data;\n\n};\n\nEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.aX = json.aX;\n\tthis.aY = json.aY;\n\n\tthis.xRadius = json.xRadius;\n\tthis.yRadius = json.yRadius;\n\n\tthis.aStartAngle = json.aStartAngle;\n\tthis.aEndAngle = json.aEndAngle;\n\n\tthis.aClockwise = json.aClockwise;\n\n\tthis.aRotation = json.aRotation;\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly();\nvar py = new CubicPoly();\nvar pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nCatmullRomCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\tdata.closed = this.closed;\n\tdata.curveType = this.curveType;\n\tdata.tension = this.tension;\n\n\treturn data;\n\n};\n\nCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t}\n\n\tthis.closed = json.closed;\n\tthis.curveType = json.curveType;\n\tthis.tension = json.tension;\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nCubicBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\tdata.v3 = this.v3.toArray();\n\n\treturn data;\n\n};\n\nCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\tthis.v3.fromArray( json.v3 );\n\n\treturn this;\n\n};\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nLineCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nLineCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.v0 = this.v0.toArray();\n\tdata.v1 = this.v1.toArray();\n\tdata.v2 = this.v2.toArray();\n\n\treturn data;\n\n};\n\nQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.v0.fromArray( json.v0 );\n\tthis.v1.fromArray( json.v1 );\n\tthis.v2.fromArray( json.v2 );\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nSplineCurve.prototype.toJSON = function () {\n\n\tvar data = Curve.prototype.toJSON.call( this );\n\n\tdata.points = [];\n\n\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\tvar point = this.points[ i ];\n\t\tdata.points.push( point.toArray() );\n\n\t}\n\n\treturn data;\n\n};\n\nSplineCurve.prototype.fromJSON = function ( json ) {\n\n\tCurve.prototype.fromJSON.call( this, json );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\tvar point = json.points[ i ];\n\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t}\n\n\treturn this;\n\n};\n\n\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tconstructor: Path,\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tfromJSON: function ( json ) {\n\n\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n}\n\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrack.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\tthis.validate();\n\tthis.optimize();\n\n}\n\n// Static methods:\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tparse: function ( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t},\n\n\t_getTrackTypeForValueTypeName: function ( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n} );\n\nObject.assign( KeyframeTrack.prototype, {\n\n\tconstructor: KeyframeTrack,\n\n\tTimeBufferType: Float32Array,\n\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n\tthis.optimize();\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tonLoadStart: function () {},\n\n\tonLoadProgress: function () {},\n\n\tonLoadComplete: function () {},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\nvar LoaderUtils = {\n\n\tdecodeText: function ( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tvar s = '';\n\n\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\t// Merges multi-byte utf-8 characters.\n\t\treturn decodeURIComponent( escape( s ) );\n\n\t},\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.substr( 0, index + 1 );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === 'string' ) ? this.texturePath : LoaderUtils.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function parse( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tcrossOrigin: 'anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\t\treturn this;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar shapes = this.parseShape( json.shapes );\n\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseShape: function ( json ) {\n\n\t\tvar shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t},\n\n\tparseGeometries: function ( json, shapes ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar data = json[ i ];\n\n\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\tif ( data.uuid !== undefined ) clip.uuid = data.uuid;\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.texturePath + currentUrl;\n\n\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function ( data, geometries, materials ) {\n\n\t\tvar object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tvar children = data.children;\n\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tvar levels = data.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tvar level = levels[ l ];\n\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author thespite / http://clicktorelease.com/\n */\n\n\nfunction ImageBitmapLoader( manager ) {\n\n\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t}\n\n\tif ( typeof fetch === 'undefined' ) {\n\n\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t}\n\n\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\tthis.options = undefined;\n\n}\n\nImageBitmapLoader.prototype = {\n\n\tconstructor: ImageBitmapLoader,\n\n\tsetOptions: function setOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t},\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tfetch( url ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t} );\n\n\t},\n\n\tsetCrossOrigin: function ( /* value */ ) {\n\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.color = new Color();\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size ) {\n\n\t\tif ( size === undefined ) size = 100;\n\n\t\tvar shapes = [];\n\t\tvar paths = createPaths( text, size, this.data );\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\nfunction createPaths( text, size, data ) {\n\n\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\tvar scale = size / data.resolution;\n\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\tvar paths = [];\n\n\tvar offsetX = 0, offsetY = 0;\n\n\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\tvar char = chars[ i ];\n\n\t\tif ( char === '\\n' ) {\n\n\t\t\toffsetX = 0;\n\t\t\toffsetY -= line_height;\n\n\t\t} else {\n\n\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\toffsetX += ret.offsetX;\n\t\t\tpaths.push( ret.path );\n\n\t\t}\n\n\t}\n\n\treturn paths;\n\n}\n\nfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\tif ( ! glyph ) return;\n\n\tvar path = new ShapePath();\n\n\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\tif ( glyph.o ) {\n\n\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\tvar action = outline[ i ++ ];\n\n\t\t\tswitch ( action ) {\n\n\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn { offsetX: glyph.ha * scale, path: path };\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\tvar context = AudioContext.getContext();\n\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t},\n\n\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar panner = this.panner;\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t\tpanner.setPosition( position.x, position.y, position.z );\n\t\t\tpanner.setOrientation( orientation.x, orientation.y, orientation.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\n// Characters [].:/ are reserved for track binding syntax.\nvar RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: ( function () {\n\n\t\tvar reservedRe = new RegExp( '[' + RESERVED_CHARS_RE + ']', 'g' );\n\n\t\treturn function sanitizeNodeName( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( reservedRe, '' );\n\n\t\t};\n\n\t}() ),\n\n\tparseTrackName: function () {\n\n\t\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t\t// instead, we exclude reserved characters and match everything else.\n\t\tvar wordChar = '[^' + RESERVED_CHARS_RE + ']';\n\t\tvar wordCharOrDot = '[^' + RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', wordChar );\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /(WCOD+)?/.source.replace( 'WCOD', wordCharOrDot );\n\n\t\t// Object on target node, and accessor. May not contain reserved\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', wordChar );\n\n\t\t// Property and accessor. May not contain reserved characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', wordChar );\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe\n\t\t\t+ nodeRe\n\t\t\t+ objectRe\n\t\t\t+ propertyRe\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function parseTrackName( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length,\n\t\t\tknownObject = undefined;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\n\t\tif ( deltaTime === 0 ) return time;\n\n\t\tvar duration = this._clip.duration,\n\n\t\t\tloop = this.loop,\n\t\t\tloopCount = this._loopCount;\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\tconstructor: AnimationMixer,\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tonUploadCallback: function () {},\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t\treturn this;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\tvar intersects = optionalTarget || [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, target ) {\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\ttarget = new Vector2();\n\n\t\t}\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry;\nvar coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n}\n\nvar LineStrip = 0;\n\nvar LinePieces = 1;\n\nfunction MeshFaceMaterial( materials ) {\n\n\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\treturn materials;\n\n}\n\nfunction MultiMaterial( materials ) {\n\n\tif ( materials === undefined ) materials = [];\n\n\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\tmaterials.isMultiMaterial = true;\n\tmaterials.materials = materials;\n\tmaterials.clone = function () {\n\n\t\treturn materials.slice();\n\n\t};\n\treturn materials;\n\n}\n\nfunction PointCloud( geometry, material ) {\n\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction Particle( material ) {\n\n\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\treturn new Sprite( material );\n\n}\n\nfunction ParticleSystem( geometry, material ) {\n\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\treturn new Points( geometry, material );\n\n}\n\nfunction PointCloudMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleBasicMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction ParticleSystemMaterial( parameters ) {\n\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\treturn new PointsMaterial( parameters );\n\n}\n\nfunction Vertex( x, y, z ) {\n\n\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\treturn new Vector3( x, y, z );\n\n}\n\n//\n\nfunction DynamicBufferAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n}\n\nfunction Int8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\treturn new Int8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\treturn new Uint8BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n}\n\nfunction Int16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\treturn new Int16BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint16Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\treturn new Uint16BufferAttribute( array, itemSize );\n\n}\n\nfunction Int32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\treturn new Int32BufferAttribute( array, itemSize );\n\n}\n\nfunction Uint32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\treturn new Uint32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float32Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\treturn new Float32BufferAttribute( array, itemSize );\n\n}\n\nfunction Float64Attribute( array, itemSize ) {\n\n\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\treturn new Float64BufferAttribute( array, itemSize );\n\n}\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction ClosedSplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\tthis.closed = true;\n\n}\n\nClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction SplineCurve3( points ) {\n\n\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nfunction AxisHelper( size ) {\n\n\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\treturn new AxesHelper( size );\n\n}\n\nfunction BoundingBoxHelper( object, color ) {\n\n\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\treturn new BoxHelper( object, color );\n\n}\n\nfunction EdgesHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\nfunction WireframeHelper( object, hex ) {\n\n\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n}\n\n//\n\nObject.assign( Loader.prototype, {\n\n\textractUrlBase: function ( url ) {\n\n\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t}\n\n} );\n\nfunction XHRLoader( manager ) {\n\n\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\treturn new FileLoader( manager );\n\n}\n\nfunction BinaryTextureLoader( manager ) {\n\n\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\treturn new DataTextureLoader( manager );\n\n}\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tarea: function () {\n\n\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\treturn this.getArea();\n\n\t},\n\tbarycoordFromPoint: function ( point, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn this.getBarycoord( point, target );\n\n\t},\n\tmidpoint: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\treturn this.getMidpoint( target );\n\n\t},\n\tnormal: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn this.getNormal( target );\n\n\t},\n\tplane: function ( target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\treturn this.getPlane( target );\n\n\t}\n\n} );\n\nObject.assign( Triangle, {\n\n\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t},\n\tnormal: function ( a, b, c, target ) {\n\n\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nObject.assign( Geometry.prototype, {\n\n\tcomputeTangents: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeLineDistances: function () {\n\n\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t}\n\n} );\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t},\n\tgetWorldRotation: function () {\n\n\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t},\n\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\tgetArrays: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t},\n\n\taddShapeList: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t},\n\n\taddShape: function () {\n\n\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tanimate: function ( callback ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\tthis.setAnimationLoop( callback );\n\n\t},\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t},\n\tsetFaceCulling: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function ( /* cullFace */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderReverseSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t},\n\trenderSingleSided: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\treturn undefined;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebVRManager.prototype, {\n\n\tstanding: {\n\t\tset: function ( /* value */ ) {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n//\n\nvar GeometryUtils = {\n\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\tvar matrix;\n\n\t\tif ( geometry2.isMesh ) {\n\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\tmatrix = geometry2.matrix;\n\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t}\n\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t},\n\n\tcenter: function ( geometry ) {\n\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\treturn geometry.center();\n\n\t}\n\n};\n\nvar ImageUtils = {\n\n\tcrossOrigin: undefined,\n\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) texture.mapping = mapping;\n\n\t\treturn texture;\n\n\t},\n\n\tloadCompressedTexture: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t},\n\n\tloadCompressedTextureCube: function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t}\n\n};\n\n//\n\nfunction Projector() {\n\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n\tthis.projectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n\t\tvector.project( camera );\n\n\t};\n\n\tthis.unprojectVector = function ( vector, camera ) {\n\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n\t\tvector.unproject( camera );\n\n\t};\n\n\tthis.pickingRay = function () {\n\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n\t};\n\n}\n\n//\n\nfunction CanvasRenderer() {\n\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n\tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\tthis.clear = function () {};\n\tthis.render = function () {};\n\tthis.setClearColor = function () {};\n\tthis.setSize = function () {};\n\n}\n\n//\n\nvar SceneUtils = {\n\n\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t},\n\n\tattach: function ( /* child, scene, parent */ ) {\n\n\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t}\n\n};\n\n//\n\nfunction LensFlare() {\n\n\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n}\n\n\n\n\nvar THREE$1 = Object.freeze({\n\tWebGLRenderTargetCube: WebGLRenderTargetCube,\n\tWebGLRenderTarget: WebGLRenderTarget,\n\tWebGLRenderer: WebGLRenderer,\n\tShaderLib: ShaderLib,\n\tUniformsLib: UniformsLib,\n\tUniformsUtils: UniformsUtils,\n\tShaderChunk: ShaderChunk,\n\tFogExp2: FogExp2,\n\tFog: Fog,\n\tScene: Scene,\n\tSprite: Sprite,\n\tLOD: LOD,\n\tSkinnedMesh: SkinnedMesh,\n\tSkeleton: Skeleton,\n\tBone: Bone,\n\tMesh: Mesh,\n\tLineSegments: LineSegments,\n\tLineLoop: LineLoop,\n\tLine: Line,\n\tPoints: Points,\n\tGroup: Group,\n\tVideoTexture: VideoTexture,\n\tDataTexture: DataTexture,\n\tCompressedTexture: CompressedTexture,\n\tCubeTexture: CubeTexture,\n\tCanvasTexture: CanvasTexture,\n\tDepthTexture: DepthTexture,\n\tTexture: Texture,\n\tCompressedTextureLoader: CompressedTextureLoader,\n\tDataTextureLoader: DataTextureLoader,\n\tCubeTextureLoader: CubeTextureLoader,\n\tTextureLoader: TextureLoader,\n\tObjectLoader: ObjectLoader,\n\tMaterialLoader: MaterialLoader,\n\tBufferGeometryLoader: BufferGeometryLoader,\n\tDefaultLoadingManager: DefaultLoadingManager,\n\tLoadingManager: LoadingManager,\n\tJSONLoader: JSONLoader,\n\tImageLoader: ImageLoader,\n\tImageBitmapLoader: ImageBitmapLoader,\n\tFontLoader: FontLoader,\n\tFileLoader: FileLoader,\n\tLoader: Loader,\n\tLoaderUtils: LoaderUtils,\n\tCache: Cache,\n\tAudioLoader: AudioLoader,\n\tSpotLightShadow: SpotLightShadow,\n\tSpotLight: SpotLight,\n\tPointLight: PointLight,\n\tRectAreaLight: RectAreaLight,\n\tHemisphereLight: HemisphereLight,\n\tDirectionalLightShadow: DirectionalLightShadow,\n\tDirectionalLight: DirectionalLight,\n\tAmbientLight: AmbientLight,\n\tLightShadow: LightShadow,\n\tLight: Light,\n\tStereoCamera: StereoCamera,\n\tPerspectiveCamera: PerspectiveCamera,\n\tOrthographicCamera: OrthographicCamera,\n\tCubeCamera: CubeCamera,\n\tArrayCamera: ArrayCamera,\n\tCamera: Camera,\n\tAudioListener: AudioListener,\n\tPositionalAudio: PositionalAudio,\n\tAudioContext: AudioContext,\n\tAudioAnalyser: AudioAnalyser,\n\tAudio: Audio,\n\tVectorKeyframeTrack: VectorKeyframeTrack,\n\tStringKeyframeTrack: StringKeyframeTrack,\n\tQuaternionKeyframeTrack: QuaternionKeyframeTrack,\n\tNumberKeyframeTrack: NumberKeyframeTrack,\n\tColorKeyframeTrack: ColorKeyframeTrack,\n\tBooleanKeyframeTrack: BooleanKeyframeTrack,\n\tPropertyMixer: PropertyMixer,\n\tPropertyBinding: PropertyBinding,\n\tKeyframeTrack: KeyframeTrack,\n\tAnimationUtils: AnimationUtils,\n\tAnimationObjectGroup: AnimationObjectGroup,\n\tAnimationMixer: AnimationMixer,\n\tAnimationClip: AnimationClip,\n\tUniform: Uniform,\n\tInstancedBufferGeometry: InstancedBufferGeometry,\n\tBufferGeometry: BufferGeometry,\n\tGeometry: Geometry,\n\tInterleavedBufferAttribute: InterleavedBufferAttribute,\n\tInstancedInterleavedBuffer: InstancedInterleavedBuffer,\n\tInterleavedBuffer: InterleavedBuffer,\n\tInstancedBufferAttribute: InstancedBufferAttribute,\n\tFace3: Face3,\n\tObject3D: Object3D,\n\tRaycaster: Raycaster,\n\tLayers: Layers,\n\tEventDispatcher: EventDispatcher,\n\tClock: Clock,\n\tQuaternionLinearInterpolant: QuaternionLinearInterpolant,\n\tLinearInterpolant: LinearInterpolant,\n\tDiscreteInterpolant: DiscreteInterpolant,\n\tCubicInterpolant: CubicInterpolant,\n\tInterpolant: Interpolant,\n\tTriangle: Triangle,\n\tMath: _Math,\n\tSpherical: Spherical,\n\tCylindrical: Cylindrical,\n\tPlane: Plane,\n\tFrustum: Frustum,\n\tSphere: Sphere,\n\tRay: Ray,\n\tMatrix4: Matrix4,\n\tMatrix3: Matrix3,\n\tBox3: Box3,\n\tBox2: Box2,\n\tLine3: Line3,\n\tEuler: Euler,\n\tVector4: Vector4,\n\tVector3: Vector3,\n\tVector2: Vector2,\n\tQuaternion: Quaternion,\n\tColor: Color,\n\tImmediateRenderObject: ImmediateRenderObject,\n\tVertexNormalsHelper: VertexNormalsHelper,\n\tSpotLightHelper: SpotLightHelper,\n\tSkeletonHelper: SkeletonHelper,\n\tPointLightHelper: PointLightHelper,\n\tRectAreaLightHelper: RectAreaLightHelper,\n\tHemisphereLightHelper: HemisphereLightHelper,\n\tGridHelper: GridHelper,\n\tPolarGridHelper: PolarGridHelper,\n\tFaceNormalsHelper: FaceNormalsHelper,\n\tDirectionalLightHelper: DirectionalLightHelper,\n\tCameraHelper: CameraHelper,\n\tBoxHelper: BoxHelper,\n\tBox3Helper: Box3Helper,\n\tPlaneHelper: PlaneHelper,\n\tArrowHelper: ArrowHelper,\n\tAxesHelper: AxesHelper,\n\tShape: Shape,\n\tPath: Path,\n\tShapePath: ShapePath,\n\tFont: Font,\n\tCurvePath: CurvePath,\n\tCurve: Curve,\n\tShapeUtils: ShapeUtils,\n\tWebGLUtils: WebGLUtils,\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry,\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material,\n\tFloat64BufferAttribute: Float64BufferAttribute,\n\tFloat32BufferAttribute: Float32BufferAttribute,\n\tUint32BufferAttribute: Uint32BufferAttribute,\n\tInt32BufferAttribute: Int32BufferAttribute,\n\tUint16BufferAttribute: Uint16BufferAttribute,\n\tInt16BufferAttribute: Int16BufferAttribute,\n\tUint8ClampedBufferAttribute: Uint8ClampedBufferAttribute,\n\tUint8BufferAttribute: Uint8BufferAttribute,\n\tInt8BufferAttribute: Int8BufferAttribute,\n\tBufferAttribute: BufferAttribute,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve,\n\tREVISION: REVISION,\n\tMOUSE: MOUSE,\n\tCullFaceNone: CullFaceNone,\n\tCullFaceBack: CullFaceBack,\n\tCullFaceFront: CullFaceFront,\n\tCullFaceFrontBack: CullFaceFrontBack,\n\tFrontFaceDirectionCW: FrontFaceDirectionCW,\n\tFrontFaceDirectionCCW: FrontFaceDirectionCCW,\n\tBasicShadowMap: BasicShadowMap,\n\tPCFShadowMap: PCFShadowMap,\n\tPCFSoftShadowMap: PCFSoftShadowMap,\n\tFrontSide: FrontSide,\n\tBackSide: BackSide,\n\tDoubleSide: DoubleSide,\n\tFlatShading: FlatShading,\n\tSmoothShading: SmoothShading,\n\tNoColors: NoColors,\n\tFaceColors: FaceColors,\n\tVertexColors: VertexColors,\n\tNoBlending: NoBlending,\n\tNormalBlending: NormalBlending,\n\tAdditiveBlending: AdditiveBlending,\n\tSubtractiveBlending: SubtractiveBlending,\n\tMultiplyBlending: MultiplyBlending,\n\tCustomBlending: CustomBlending,\n\tAddEquation: AddEquation,\n\tSubtractEquation: SubtractEquation,\n\tReverseSubtractEquation: ReverseSubtractEquation,\n\tMinEquation: MinEquation,\n\tMaxEquation: MaxEquation,\n\tZeroFactor: ZeroFactor,\n\tOneFactor: OneFactor,\n\tSrcColorFactor: SrcColorFactor,\n\tOneMinusSrcColorFactor: OneMinusSrcColorFactor,\n\tSrcAlphaFactor: SrcAlphaFactor,\n\tOneMinusSrcAlphaFactor: OneMinusSrcAlphaFactor,\n\tDstAlphaFactor: DstAlphaFactor,\n\tOneMinusDstAlphaFactor: OneMinusDstAlphaFactor,\n\tDstColorFactor: DstColorFactor,\n\tOneMinusDstColorFactor: OneMinusDstColorFactor,\n\tSrcAlphaSaturateFactor: SrcAlphaSaturateFactor,\n\tNeverDepth: NeverDepth,\n\tAlwaysDepth: AlwaysDepth,\n\tLessDepth: LessDepth,\n\tLessEqualDepth: LessEqualDepth,\n\tEqualDepth: EqualDepth,\n\tGreaterEqualDepth: GreaterEqualDepth,\n\tGreaterDepth: GreaterDepth,\n\tNotEqualDepth: NotEqualDepth,\n\tMultiplyOperation: MultiplyOperation,\n\tMixOperation: MixOperation,\n\tAddOperation: AddOperation,\n\tNoToneMapping: NoToneMapping,\n\tLinearToneMapping: LinearToneMapping,\n\tReinhardToneMapping: ReinhardToneMapping,\n\tUncharted2ToneMapping: Uncharted2ToneMapping,\n\tCineonToneMapping: CineonToneMapping,\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping,\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping,\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter,\n\tUnsignedByteType: UnsignedByteType,\n\tByteType: ByteType,\n\tShortType: ShortType,\n\tUnsignedShortType: UnsignedShortType,\n\tIntType: IntType,\n\tUnsignedIntType: UnsignedIntType,\n\tFloatType: FloatType,\n\tHalfFloatType: HalfFloatType,\n\tUnsignedShort4444Type: UnsignedShort4444Type,\n\tUnsignedShort5551Type: UnsignedShort5551Type,\n\tUnsignedShort565Type: UnsignedShort565Type,\n\tUnsignedInt248Type: UnsignedInt248Type,\n\tAlphaFormat: AlphaFormat,\n\tRGBFormat: RGBFormat,\n\tRGBAFormat: RGBAFormat,\n\tLuminanceFormat: LuminanceFormat,\n\tLuminanceAlphaFormat: LuminanceAlphaFormat,\n\tRGBEFormat: RGBEFormat,\n\tDepthFormat: DepthFormat,\n\tDepthStencilFormat: DepthStencilFormat,\n\tRGB_S3TC_DXT1_Format: RGB_S3TC_DXT1_Format,\n\tRGBA_S3TC_DXT1_Format: RGBA_S3TC_DXT1_Format,\n\tRGBA_S3TC_DXT3_Format: RGBA_S3TC_DXT3_Format,\n\tRGBA_S3TC_DXT5_Format: RGBA_S3TC_DXT5_Format,\n\tRGB_PVRTC_4BPPV1_Format: RGB_PVRTC_4BPPV1_Format,\n\tRGB_PVRTC_2BPPV1_Format: RGB_PVRTC_2BPPV1_Format,\n\tRGBA_PVRTC_4BPPV1_Format: RGBA_PVRTC_4BPPV1_Format,\n\tRGBA_PVRTC_2BPPV1_Format: RGBA_PVRTC_2BPPV1_Format,\n\tRGB_ETC1_Format: RGB_ETC1_Format,\n\tRGBA_ASTC_4x4_Format: RGBA_ASTC_4x4_Format,\n\tRGBA_ASTC_5x4_Format: RGBA_ASTC_5x4_Format,\n\tRGBA_ASTC_5x5_Format: RGBA_ASTC_5x5_Format,\n\tRGBA_ASTC_6x5_Format: RGBA_ASTC_6x5_Format,\n\tRGBA_ASTC_6x6_Format: RGBA_ASTC_6x6_Format,\n\tRGBA_ASTC_8x5_Format: RGBA_ASTC_8x5_Format,\n\tRGBA_ASTC_8x6_Format: RGBA_ASTC_8x6_Format,\n\tRGBA_ASTC_8x8_Format: RGBA_ASTC_8x8_Format,\n\tRGBA_ASTC_10x5_Format: RGBA_ASTC_10x5_Format,\n\tRGBA_ASTC_10x6_Format: RGBA_ASTC_10x6_Format,\n\tRGBA_ASTC_10x8_Format: RGBA_ASTC_10x8_Format,\n\tRGBA_ASTC_10x10_Format: RGBA_ASTC_10x10_Format,\n\tRGBA_ASTC_12x10_Format: RGBA_ASTC_12x10_Format,\n\tRGBA_ASTC_12x12_Format: RGBA_ASTC_12x12_Format,\n\tLoopOnce: LoopOnce,\n\tLoopRepeat: LoopRepeat,\n\tLoopPingPong: LoopPingPong,\n\tInterpolateDiscrete: InterpolateDiscrete,\n\tInterpolateLinear: InterpolateLinear,\n\tInterpolateSmooth: InterpolateSmooth,\n\tZeroCurvatureEnding: ZeroCurvatureEnding,\n\tZeroSlopeEnding: ZeroSlopeEnding,\n\tWrapAroundEnding: WrapAroundEnding,\n\tTrianglesDrawMode: TrianglesDrawMode,\n\tTriangleStripDrawMode: TriangleStripDrawMode,\n\tTriangleFanDrawMode: TriangleFanDrawMode,\n\tLinearEncoding: LinearEncoding,\n\tsRGBEncoding: sRGBEncoding,\n\tGammaEncoding: GammaEncoding,\n\tRGBEEncoding: RGBEEncoding,\n\tLogLuvEncoding: LogLuvEncoding,\n\tRGBM7Encoding: RGBM7Encoding,\n\tRGBM16Encoding: RGBM16Encoding,\n\tRGBDEncoding: RGBDEncoding,\n\tBasicDepthPacking: BasicDepthPacking,\n\tRGBADepthPacking: RGBADepthPacking,\n\tTangentSpaceNormalMap: TangentSpaceNormalMap,\n\tObjectSpaceNormalMap: ObjectSpaceNormalMap,\n\tCubeGeometry: BoxGeometry,\n\tFace4: Face4,\n\tLineStrip: LineStrip,\n\tLinePieces: LinePieces,\n\tMeshFaceMaterial: MeshFaceMaterial,\n\tMultiMaterial: MultiMaterial,\n\tPointCloud: PointCloud,\n\tParticle: Particle,\n\tParticleSystem: ParticleSystem,\n\tPointCloudMaterial: PointCloudMaterial,\n\tParticleBasicMaterial: ParticleBasicMaterial,\n\tParticleSystemMaterial: ParticleSystemMaterial,\n\tVertex: Vertex,\n\tDynamicBufferAttribute: DynamicBufferAttribute,\n\tInt8Attribute: Int8Attribute,\n\tUint8Attribute: Uint8Attribute,\n\tUint8ClampedAttribute: Uint8ClampedAttribute,\n\tInt16Attribute: Int16Attribute,\n\tUint16Attribute: Uint16Attribute,\n\tInt32Attribute: Int32Attribute,\n\tUint32Attribute: Uint32Attribute,\n\tFloat32Attribute: Float32Attribute,\n\tFloat64Attribute: Float64Attribute,\n\tClosedSplineCurve3: ClosedSplineCurve3,\n\tSplineCurve3: SplineCurve3,\n\tSpline: Spline,\n\tAxisHelper: AxisHelper,\n\tBoundingBoxHelper: BoundingBoxHelper,\n\tEdgesHelper: EdgesHelper,\n\tWireframeHelper: WireframeHelper,\n\tXHRLoader: XHRLoader,\n\tBinaryTextureLoader: BinaryTextureLoader,\n\tGeometryUtils: GeometryUtils,\n\tImageUtils: ImageUtils,\n\tProjector: Projector,\n\tCanvasRenderer: CanvasRenderer,\n\tSceneUtils: SceneUtils,\n\tLensFlare: LensFlare\n});\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @class ExampleComponent\n */\n\nvar OrbitControls = require('three-orbit-controls')(THREE$1);\nvar FBXLoader = require('three-fbxloader-offical');\n\nvar ReactThreeVisor = function (_Component) {\n\tinherits(ReactThreeVisor, _Component);\n\n\tfunction ReactThreeVisor() {\n\t\tvar _ref;\n\n\t\tvar _temp, _this, _ret;\n\n\t\tclassCallCheck(this, ReactThreeVisor);\n\n\t\tfor (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t\t\targs[_key] = arguments[_key];\n\t\t}\n\n\t\treturn _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = ReactThreeVisor.__proto__ || Object.getPrototypeOf(ReactThreeVisor)).call.apply(_ref, [this].concat(args))), _this), _this.checkProps = function () {\n\t\t\t_this.cameraPosition = _this.props.cameraPosition || { x: 2, y: 0, z: 10 };\n\t\t\t_this.controlsPosition = _this.props.controlsPosition || { x: 0, y: 0, z: 0 };\n\t\t\t_this.angle = _this.props.angle || 45;\n\t\t\t_this.far = _this.props.far || 2000;\n\t\t\t_this.near = _this.props.near || 1;\n\t\t\t_this.lights = _this.props.ligths || null;\n\t\t}, _this.onWindowResize = function () {\n\t\t\t_this.camera.aspect = window.innerWidth / window.innerHeight;\n\t\t\t_this.camera.updateProjectionMatrix();\n\t\t\t_this.renderer.setSize(window.innerWidth, window.innerHeight);\n\t\t}, _this.animate = function () {\n\t\t\trequestAnimationFrame(_this.animate);\n\t\t\tif (_this.mixers.length > 0) {\n\t\t\t\tfor (var i = 0; i < _this.mixers.length; i++) {\n\t\t\t\t\t_this.mixers[i].update(_this.clock.getDelta());\n\t\t\t\t}\n\t\t\t}\n\t\t\t_this.renderer.render(_this.scene, _this.camera);\n\t\t}, _this.init = function () {\n\t\t\t// mixers\n\t\t\t_this.mixers = [];\n\t\t\t_this.clock = new Clock();\n\n\t\t\t// Camera\n\t\t\t_this.camera = new PerspectiveCamera(_this.angle, window.innerWidth / window.innerHeight, _this.near, _this.far);\n\t\t\t_this.camera.position.set(_this.cameraPosition.x, _this.cameraPosition.y, _this.cameraPosition.z);\n\n\t\t\t// Controls\n\t\t\t_this.controls = new OrbitControls(_this.camera);\n\t\t\t_this.controls.target.set(_this.controlsPosition.x, _this.controlsPosition.y, _this.controlsPosition.z);\n\t\t\t_this.controls.update();\n\n\t\t\t// Scene\n\t\t\t_this.scene = new Scene();\n\t\t\t_this.scene.background = new Color(_this.props.backgroundColor || 0xffffff);\n\t\t\t//this.scene.fog = new THREE.Fog(0xa0a0a0, 200, 1000);\n\n\t\t\t// Light\n\t\t\tvar light = new HemisphereLight(0xffffff, 0x444444);\n\t\t\tlight.position.set(0, 200, 0);\n\t\t\t_this.scene.add(light);\n\t\t\tlight = new DirectionalLight(0xffffff);\n\t\t\tlight.position.set(0, 200, 100);\n\t\t\tlight.castShadow = true;\n\t\t\tlight.shadow.camera.top = 180;\n\t\t\tlight.shadow.camera.bottom = -100;\n\t\t\tlight.shadow.camera.left = -120;\n\t\t\tlight.shadow.camera.right = 120;\n\t\t\tlight = new DirectionalLight(0xffffff);\n\t\t\t_this.scene.add(light);\n\t\t\tlight = new AmbientLight(0x222222);\n\t\t\t_this.scene.add(light);\n\n\t\t\t// model\n\t\t\tif (_this.props.url) {\n\t\t\t\tvar loader = new FBXLoader();\n\t\t\t\tloader.load(_this.props.url, function (object) {\n\n\t\t\t\t\tobject.mixer = new AnimationMixer(object);\n\t\t\t\t\tif (object.mixer) {\n\t\t\t\t\t\t_this.mixers.push(object.mixer);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (object.animations[0]) {\n\t\t\t\t\t\tvar action = object.mixer.clipAction(object.animations[0]);\n\t\t\t\t\t\taction.play();\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.traverse(function (child) {\n\t\t\t\t\t\tif (child.isMesh) {\n\t\t\t\t\t\t\tchild.castShadow = true;\n\t\t\t\t\t\t\tchild.receiveShadow = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\t_this.scene.add(object);\n\t\t\t\t}, function (s) {\n\t\t\t\t\t_this.handleLoad(s);\n\t\t\t\t}, function (error) {\n\t\t\t\t\t_this.handleError(error);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Renderer\n\t\t\t_this.renderer = new WebGLRenderer({ antialias: true });\n\t\t\t_this.renderer.setPixelRatio(window.devicePixelRatio);\n\t\t\t_this.renderer.setSize(window.innerWidth, window.innerHeight);\n\t\t\t_this.renderer.shadowMap.enabled = true;\n\t\t\t_this.container.appendChild(_this.renderer.domElement);\n\t\t\twindow.addEventListener('resize', _this.onWindowResize.bind(_this), false);\n\t\t\t_this.animate();\n\t\t}, _this.handleLoad = function (e) {\n\t\t\tif (_this.props.onLoad) {\n\t\t\t\t_this.props.onLoading(e);\n\t\t\t}\n\t\t}, _this.handleError = function (e) {\n\t\t\tif (_this.props.onError) {\n\t\t\t\t_this.props.onError(e);\n\t\t\t}\n\t\t}, _temp), possibleConstructorReturn(_this, _ret);\n\t}\n\n\tcreateClass(ReactThreeVisor, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tthis.checkProps();\n\t\t\tthis.init();\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar _this2 = this;\n\n\t\t\treturn React.createElement('div', { ref: function ref(el) {\n\t\t\t\t\t_this2.container = el;\n\t\t\t\t} });\n\t\t}\n\t}]);\n\treturn ReactThreeVisor;\n}(Component);\n\nReactThreeVisor.propTypes = {\n\turl: PropTypes.string,\n\tbackgroundColor: PropTypes.string,\n\tcameraPosition: PropTypes.object,\n\tcontrolsPosition: PropTypes.object,\n\tangle: PropTypes.number,\n\tfar: PropTypes.number,\n\tnear: PropTypes.number,\n\tonError: PropTypes.func,\n\tonLoading: PropTypes.func\n};\n\nexport default ReactThreeVisor;\n"]},"metadata":{},"sourceType":"module"}