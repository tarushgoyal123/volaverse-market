{"ast":null,"code":"import _defineProperty from\"C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Web3 from'web3';var nftManagerAbi=\"[\\n\\t{\\n\\t\\t\\\"inputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"address\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"contractAddress\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"tokenId\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"name\\\": \\\"closeSale\\\",\\n\\t\\t\\\"outputs\\\": [],\\n\\t\\t\\\"stateMutability\\\": \\\"nonpayable\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"inputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"address\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"contractAddress\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"category\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"num\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"string\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"ipfsHash\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"name\\\": \\\"establish\\\",\\n\\t\\t\\\"outputs\\\": [],\\n\\t\\t\\\"stateMutability\\\": \\\"nonpayable\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"inputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"address\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"contractAddress\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"tokenId\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"name\\\": \\\"purchase\\\",\\n\\t\\t\\\"outputs\\\": [],\\n\\t\\t\\\"stateMutability\\\": \\\"payable\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"inputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"price\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"address\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"contractAddress\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"tokenId\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"name\\\": \\\"startSale\\\",\\n\\t\\t\\\"outputs\\\": [],\\n\\t\\t\\\"stateMutability\\\": \\\"nonpayable\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"inputs\\\": [],\\n\\t\\t\\\"stateMutability\\\": \\\"nonpayable\\\",\\n\\t\\t\\\"type\\\": \\\"constructor\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"inputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"address\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"contractAddress\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"tokenId\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"name\\\": \\\"getInfo\\\",\\n\\t\\t\\\"outputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"components\\\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"address\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"owner\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"bool\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"onSale\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"bool\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"price\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"category\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"tokenId\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"address\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"contractAddress\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"string\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"ipfsHash\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"struct NftManager.Detail\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"tuple\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"stateMutability\\\": \\\"view\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"inputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"category\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"name\\\": \\\"getNFTs\\\",\\n\\t\\t\\\"outputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"components\\\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"address\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"owner\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"bool\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"onSale\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"bool\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"price\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"category\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"tokenId\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"address\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"contractAddress\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"internalType\\\": \\\"string\\\",\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"ipfsHash\\\",\\n\\t\\t\\t\\t\\t\\t\\\"type\\\": \\\"string\\\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"struct NftManager.Detail[]\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"tuple[]\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"stateMutability\\\": \\\"view\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"inputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"address\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"name\\\": \\\"nfts\\\",\\n\\t\\t\\\"outputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"address\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"owner\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"address\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"bool\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"onSale\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"bool\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"price\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"bool\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"valid\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"bool\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"stateMutability\\\": \\\"view\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t},\\n\\t{\\n\\t\\t\\\"inputs\\\": [],\\n\\t\\t\\\"name\\\": \\\"testforWorking\\\",\\n\\t\\t\\\"outputs\\\": [\\n\\t\\t\\t{\\n\\t\\t\\t\\t\\\"internalType\\\": \\\"uint256\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"\\\",\\n\\t\\t\\t\\t\\\"type\\\": \\\"uint256\\\"\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t\\\"stateMutability\\\": \\\"view\\\",\\n\\t\\t\\\"type\\\": \\\"function\\\"\\n\\t}\\n]\\n\";var nftManagerContractAddress=\"0xe248F26e92dbE612174aC3C5d6c3bB705Ef215bc\";export function getApproval(_x,_x2,_x3){return _getApproval.apply(this,arguments);}function _getApproval(){_getApproval=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(contractAddress,ipfsHash,public_key){var web3,nftContractAbi,myContract,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:web3=new Web3(window.ethereum);if(!(typeof web3!=='undefined')){_context.next=15;break;}console.log(\"getApproval |\",contractAddress,ipfsHash,public_key);_context.next=5;return fetch(\"https://ipfs.io/ipfs/\"+ipfsHash).then(function(response){console.log(response);return response.json();}).then(function(responseJson){return responseJson.output.abi;}).catch(function(error){console.error('Error:',error);});case 5:nftContractAbi=_context.sent;console.log(\"getApproval | nftContractAbi:\",nftContractAbi);myContract=new web3.eth.Contract(nftContractAbi,contractAddress);_context.next=10;return myContract.methods.isApprovedForAll(public_key,nftManagerContractAddress).call({from:window.web3.currentProvider.selectedAddress});case 10:response=_context.sent;console.log(\"getApproval | result:\",response);return _context.abrupt(\"return\",response);case 15:console.log(\"web3 not defined\");case 16:case\"end\":return _context.stop();}}},_callee);}));return _getApproval.apply(this,arguments);}export function setApproval(_x4,_x5,_x6){return _setApproval.apply(this,arguments);}function _setApproval(){_setApproval=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(contractAddress,ipfsHash,perm){var web3,nftContractAbi,myContract,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:web3=new Web3(window.ethereum);console.log(\"heyyyyyyyyyyyyyyyyy\");if(!(typeof web3!=='undefined')){_context2.next=17;break;}console.log(\"heyyyyyyyyyyyyyyyyy\");_context2.next=6;return fetch(\"https://ipfs.io/ipfs/\"+ipfsHash).then(function(response){return response.json();}).then(function(responseJson){return responseJson.output.abi;}).catch(function(error){console.error('Error:',error);});case 6:nftContractAbi=_context2.sent;console.log(\"setApproval | nftContractAbi:\",nftContractAbi);myContract=new web3.eth.Contract(nftContractAbi,contractAddress);console.log(\"setApproval | perm:\",perm);_context2.next=12;return myContract.methods.setApprovalForAll(nftManagerContractAddress,perm).send({from:window.web3.currentProvider.selectedAddress,to:contractAddress});case 12:response=_context2.sent;console.log(\"setApproval | response:\",response);return _context2.abrupt(\"return\",response);case 17:console.log(\"web3 not defined\");case 18:case\"end\":return _context2.stop();}}},_callee2);}));return _setApproval.apply(this,arguments);}export function getMarketNfts(_x7){return _getMarketNfts.apply(this,arguments);}function _getMarketNfts(){_getMarketNfts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(category){var web3,abi,myContract,category_type,response,result,i;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(category){_context3.next=2;break;}return _context3.abrupt(\"return\",[]);case 2:web3=new Web3(window.ethereum);if(!(typeof web3!=='undefined')){_context3.next=30;break;}abi=JSON.parse(nftManagerAbi);myContract=new web3.eth.Contract(abi,nftManagerContractAddress);console.log(\"getMarketNfts called\");if(!(category==\"land\")){_context3.next=11;break;}category_type=0;_context3.next=21;break;case 11:if(!(category==\"wearable\")){_context3.next=15;break;}category_type=1;_context3.next=21;break;case 15:if(!(category==\"decoration\")){_context3.next=19;break;}category_type=2;_context3.next=21;break;case 19:console.log(\"category \",category,\" not known!\");return _context3.abrupt(\"return\",[]);case 21:_context3.next=23;return myContract.methods.getNFTs(category_type).call({from:window.web3.currentProvider.selectedAddress});case 23:response=_context3.sent;result=[];console.log(\"getMarketNfts recieved result:\",response);for(i=0;i<response.length;i++){if(response[i][1]){result.push({price:response[i][2],onSale:response[i][1],owner:response[i][0].toLowerCase(),contractAddress:response[i][5],tokenId:response[i][4],category:category});}}return _context3.abrupt(\"return\",result);case 30:console.log(\"web3 not defined\");return _context3.abrupt(\"return\",[]);case 32:case\"end\":return _context3.stop();}}},_callee3);}));return _getMarketNfts.apply(this,arguments);}export function getUserNfts(_x8,_x9){return _getUserNfts.apply(this,arguments);}function _getUserNfts(){_getUserNfts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(public_key,category){var web3,abi,myContract,category_type,response,result,i;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:web3=new Web3(window.ethereum);if(!(typeof web3!=='undefined')){_context4.next=29;break;}abi=JSON.parse(nftManagerAbi);myContract=new web3.eth.Contract(abi,nftManagerContractAddress);console.log(\"getUserNfts called\");if(!(category==\"land\")){_context4.next=9;break;}category_type=0;_context4.next=19;break;case 9:if(!(category==\"wearable\")){_context4.next=13;break;}category_type=1;_context4.next=19;break;case 13:if(!(category==\"decoration\")){_context4.next=17;break;}category_type=2;_context4.next=19;break;case 17:console.log(\"category \",category,\" not known!\");return _context4.abrupt(\"return\");case 19:_context4.next=21;return myContract.methods.getNFTs(category_type).call({from:window.web3.currentProvider.selectedAddress});case 21:response=_context4.sent;console.log(\"getUserNfts recieved result:\",response);result=[];for(i=0;i<response.length;i++){if(response[i][0].toLowerCase()==public_key){result.push({price:response[i][2],onSale:response[i][1],owner:response[i][0].toLowerCase(),contractAddress:response[i][5],tokenId:response[i][4],category:category});}}console.log(\"result:\",result);return _context4.abrupt(\"return\",result);case 29:console.log(\"web3 not defined\");case 30:case\"end\":return _context4.stop();}}},_callee4);}));return _getUserNfts.apply(this,arguments);}export function getSpecific(_x10,_x11){return _getSpecific.apply(this,arguments);}function _getSpecific(){_getSpecific=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(contractAddress,id){var web3,abi,myContract2,response2,category_type,category,result,nftContractAbi,myContract,response,i,_result;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:web3=new Web3(window.ethereum);if(!(typeof web3!=='undefined')){_context5.next=37;break;}abi=JSON.parse(nftManagerAbi);myContract2=new web3.eth.Contract(abi,nftManagerContractAddress);_context5.next=6;return myContract2.methods.getInfo(contractAddress,id).call({from:window.web3.currentProvider.selectedAddress});case 6:response2=_context5.sent;category_type=response2[3];if(category_type==0)category=\"land\";else if(category_type==1)category=\"wearable\";else if(category_type==2)category=\"decoration\";else category=\"fuck\";console.log(\"getSpecific recieved result for getNFTs:\",response2);result={// name: response[0],\n// category: response[1],\n// description: response[2],\nprice:response2[2],onSale:response2[1],owner:response2[0].toLowerCase(),contractAddress:response2[5],tokenId:response2[4],category:category,ipfsHash:response2[6]};console.log(\"result:\",result);return _context5.abrupt(\"return\",result);case 16:nftContractAbi=_context5.sent;console.log(\"nftContractAbi:\",nftContractAbi);// var abi = JSON.parse(nftManagerAbi);\nmyContract=new web3.eth.Contract(nftContractAbi,contractAddress);_context5.next=21;return myContract.methods.getMetaData().call({from:window.web3.currentProvider.selectedAddress});case 21:response=_context5.sent;console.log(\"getSpecific recieved result for getMetaData:\",response);i=0;case 24:if(!(i<response2.length)){_context5.next=33;break;}console.log(response2[i][5].toLowerCase(),contractAddress.toLowerCase(),response2[i][4],id);if(!(response2[i][5].toLowerCase()==contractAddress.toLowerCase()&&response2[i][4]==id)){_context5.next=30;break;}_result=_defineProperty({name:response[0],category:response[1],description:response[2],price:response2[i][2],onSale:response2[i][1],owner:response2[i][0].toLowerCase(),contractAddress:response2[i][5],tokenId:response2[i][4]},\"category\",category);console.log(\"result:\",_result);return _context5.abrupt(\"return\",_result);case 30:i++;_context5.next=24;break;case 33:console.log(\"Not Found specific!!!\");return _context5.abrupt(\"return\");case 37:console.log(\"web3 not defined\");case 38:case\"end\":return _context5.stop();}}},_callee5);}));return _getSpecific.apply(this,arguments);}export function getSpecific2(_x12,_x13){return _getSpecific2.apply(this,arguments);}function _getSpecific2(){_getSpecific2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(contractAddress,id){var web3,abi,myContract2,response2,category_type,category,result;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:web3=new Web3(window.ethereum);if(!(typeof web3!=='undefined')){_context6.next=15;break;}abi=JSON.parse(nftManagerAbi);myContract2=new web3.eth.Contract(abi,nftManagerContractAddress);_context6.next=6;return myContract2.methods.getInfo(contractAddress,id).call({from:window.web3.currentProvider.selectedAddress});case 6:response2=_context6.sent;category_type=response2[3];if(category_type==0)category=\"land\";else if(category_type==1)category=\"wearable\";else if(category_type==2)category=\"decoration\";else category=\"fuck\";console.log(\"getSpecific recieved result for getNFTs:\",response2);result={// name: response[0],\n// category: response[1],\n// description: response[2],\nprice:response2[2],onSale:response2[1],owner:response2[0].toLowerCase(),contractAddress:response2[5],tokenId:response2[4],category:category,ipfsHash:response2[6]};console.log(\"result:\",result);return _context6.abrupt(\"return\",result);case 15:console.log(\"web3 not defined\");case 16:case\"end\":return _context6.stop();}}},_callee6);}));return _getSpecific2.apply(this,arguments);}export function startSale(_x14,_x15,_x16){return _startSale.apply(this,arguments);}function _startSale(){_startSale=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(contractAddress,tokenId,price){var web3,abi,myContract,response;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:web3=new Web3(window.ethereum);if(!(typeof web3!=='undefined')){_context7.next=11;break;}abi=JSON.parse(nftManagerAbi);myContract=new web3.eth.Contract(abi,nftManagerContractAddress);_context7.next=6;return myContract.methods.startSale(price,contractAddress,tokenId).send({from:window.web3.currentProvider.selectedAddress,to:nftManagerContractAddress});case 6:response=_context7.sent;console.log(\"startSale | response:\",response);return _context7.abrupt(\"return\",response);case 11:console.log(\"web3 not defined\");case 12:case\"end\":return _context7.stop();}}},_callee7);}));return _startSale.apply(this,arguments);}export function closeSale(_x17,_x18,_x19){return _closeSale.apply(this,arguments);}function _closeSale(){_closeSale=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(contractAddress,tokenId,price){var web3,abi,myContract,response;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:web3=new Web3(window.ethereum);if(!(typeof web3!=='undefined')){_context8.next=11;break;}abi=JSON.parse(nftManagerAbi);myContract=new web3.eth.Contract(abi,nftManagerContractAddress);_context8.next=6;return myContract.methods.closeSale(contractAddress,tokenId).send({from:window.web3.currentProvider.selectedAddress,to:nftManagerContractAddress});case 6:response=_context8.sent;console.log(\"closeSale | response:\",response);return _context8.abrupt(\"return\",response);case 11:console.log(\"web3 not defined\");case 12:case\"end\":return _context8.stop();}}},_callee8);}));return _closeSale.apply(this,arguments);}","map":{"version":3,"sources":["C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/src/services/productData.js"],"names":["Web3","nftManagerAbi","nftManagerContractAddress","getApproval","contractAddress","ipfsHash","public_key","web3","window","ethereum","console","log","fetch","then","response","json","responseJson","output","abi","catch","error","nftContractAbi","myContract","eth","Contract","methods","isApprovedForAll","call","from","currentProvider","selectedAddress","setApproval","perm","setApprovalForAll","send","to","getMarketNfts","category","JSON","parse","category_type","getNFTs","result","i","length","push","price","onSale","owner","toLowerCase","tokenId","getUserNfts","getSpecific","id","myContract2","getInfo","response2","getMetaData","name","description","getSpecific2","startSale","closeSale"],"mappings":"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","sourcesContent":["import Web3 from 'web3';\r\n\r\nconst nftManagerAbi = `[\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"closeSale\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"category\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"num\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\"name\": \"ipfsHash\",\r\n\t\t\t\t\"type\": \"string\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"establish\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"purchase\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"startSale\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getInfo\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\t\t\"name\": \"onSale\",\r\n\t\t\t\t\t\t\"type\": \"bool\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"category\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"ipfsHash\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct NftManager.Detail\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"category\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getNFTs\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\t\t\"name\": \"onSale\",\r\n\t\t\t\t\t\t\"type\": \"bool\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"category\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"string\",\r\n\t\t\t\t\t\t\"name\": \"ipfsHash\",\r\n\t\t\t\t\t\t\"type\": \"string\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct NftManager.Detail[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"nfts\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"onSale\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"valid\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"testforWorking\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n`;\r\nconst nftManagerContractAddress = \"0xe248F26e92dbE612174aC3C5d6c3bB705Ef215bc\";\r\n\r\nexport async function getApproval(contractAddress, ipfsHash, public_key) {\r\n    const web3 = new Web3(window.ethereum);\r\n    if (typeof web3 !== 'undefined') {\r\n        console.log(\"getApproval |\", contractAddress, ipfsHash, public_key);\r\n        var nftContractAbi = await fetch(\"https://ipfs.io/ipfs/\" + ipfsHash)\r\n            .then((response) => { console.log(response); return response.json(); })\r\n            .then((responseJson) => {\r\n                return responseJson.output.abi;\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            })\r\n        console.log(\"getApproval | nftContractAbi:\", nftContractAbi);\r\n\r\n        var myContract = new web3.eth.Contract(nftContractAbi, contractAddress);\r\n        const response = await myContract.methods.isApprovedForAll(public_key, nftManagerContractAddress)\r\n            .call({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n            });\r\n        console.log(\"getApproval | result:\", response);\r\n        return response;\r\n    } else {\r\n        console.log(\"web3 not defined\");\r\n    }\r\n}\r\n\r\nexport async function setApproval(contractAddress, ipfsHash, perm) {\r\n    const web3 = new Web3(window.ethereum);\r\n    console.log(\"heyyyyyyyyyyyyyyyyy\");\r\n    if (typeof web3 !== 'undefined') {\r\n        console.log(\"heyyyyyyyyyyyyyyyyy\");\r\n        var nftContractAbi = await fetch(\"https://ipfs.io/ipfs/\" + ipfsHash)\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson.output.abi;\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            })\r\n        console.log(\"setApproval | nftContractAbi:\", nftContractAbi);\r\n\r\n        var myContract = new web3.eth.Contract(nftContractAbi, contractAddress);\r\n\r\n        console.log(\"setApproval | perm:\", perm);\r\n        var response = await myContract.methods\r\n            .setApprovalForAll(nftManagerContractAddress, perm)\r\n            .send({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n                to: contractAddress,\r\n            });\r\n        console.log(\"setApproval | response:\", response);\r\n        return response;\r\n    } else {\r\n        console.log(\"web3 not defined\");\r\n    }\r\n}\r\n\r\nexport async function getMarketNfts(category) {\r\n    if (!category) return [];\r\n    const web3 = new Web3(window.ethereum);\r\n    if (typeof web3 !== 'undefined') {\r\n        var abi = JSON.parse(nftManagerAbi);\r\n        var myContract = new web3.eth.Contract(abi, nftManagerContractAddress);\r\n        console.log(\"getMarketNfts called\");\r\n        var category_type;\r\n        if (category == \"land\") category_type = 0;\r\n        else if (category == \"wearable\") category_type = 1;\r\n        else if (category == \"decoration\") category_type = 2;\r\n        else {\r\n            console.log(\"category \", category, \" not known!\");\r\n            return [];\r\n        }\r\n        const response = await myContract.methods.getNFTs(category_type)\r\n            .call({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n            });\r\n        const result = [];\r\n        console.log(\"getMarketNfts recieved result:\", response);\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (response[i][1]) {\r\n                result.push({\r\n                    price: response[i][2],\r\n                    onSale: response[i][1],\r\n                    owner: response[i][0].toLowerCase(),\r\n                    contractAddress: response[i][5],\r\n                    tokenId: response[i][4],\r\n                    category: category\r\n                })\r\n            }\r\n        }\r\n        return result;\r\n    } else {\r\n        console.log(\"web3 not defined\");\r\n        return [];\r\n    }\r\n}\r\n\r\nexport async function getUserNfts(public_key, category) {\r\n    const web3 = new Web3(window.ethereum);\r\n    if (typeof web3 !== 'undefined') {\r\n        var abi = JSON.parse(nftManagerAbi);\r\n        var myContract = new web3.eth.Contract(abi, nftManagerContractAddress);\r\n        console.log(\"getUserNfts called\");\r\n        var category_type;\r\n        if (category == \"land\") category_type = 0;\r\n        else if (category == \"wearable\") category_type = 1;\r\n        else if (category == \"decoration\") category_type = 2;\r\n        else {\r\n            console.log(\"category \", category, \" not known!\");\r\n            return;\r\n        }\r\n        const response = await myContract.methods.getNFTs(category_type)\r\n            .call({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n            });\r\n        console.log(\"getUserNfts recieved result:\", response);\r\n        const result = [];\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (response[i][0].toLowerCase() == public_key) {\r\n                result.push({\r\n                    price: response[i][2],\r\n                    onSale: response[i][1],\r\n                    owner: response[i][0].toLowerCase(),\r\n                    contractAddress: response[i][5],\r\n                    tokenId: response[i][4],\r\n                    category: category\r\n                })\r\n            }\r\n        }\r\n        console.log(\"result:\", result);\r\n        return result;\r\n    } else {\r\n        console.log(\"web3 not defined\");\r\n    }\r\n}\r\n\r\nexport async function getSpecific(contractAddress, id) {\r\n    const web3 = new Web3(window.ethereum);\r\n    if (typeof web3 !== 'undefined') {\r\n        var abi = JSON.parse(nftManagerAbi);\r\n        var myContract2 = new web3.eth.Contract(abi, nftManagerContractAddress);\r\n        const response2 = await myContract2.methods.getInfo(contractAddress, id)\r\n            .call({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n            });\r\n        var category_type = response2[3];\r\n        var category;\r\n        if (category_type == 0) category = \"land\";\r\n        else if (category_type == 1) category = \"wearable\";\r\n        else if (category_type == 2) category = \"decoration\";\r\n        else category = \"fuck\";\r\n        console.log(\"getSpecific recieved result for getNFTs:\", response2);\r\n        const result = {\r\n            // name: response[0],\r\n            // category: response[1],\r\n            // description: response[2],\r\n            price: response2[2],\r\n            onSale: response2[1],\r\n            owner: response2[0].toLowerCase(),\r\n            contractAddress: response2[5],\r\n            tokenId: response2[4],\r\n            category: category,\r\n            ipfsHash: response2[6]\r\n        }\r\n        console.log(\"result:\", result);\r\n        return result;\r\n\r\n        console.log(\"getSpecific | fetching abi\");\r\n        var nftContractAbi = await fetch(\"https://ipfs.io/ipfs/QmZXbYk8QeGiT8Tzw8ESygbRVv4Xg1nynciTYzv3DJ1agD\")\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                return responseJson.output.abi;\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            })\r\n        console.log(\"nftContractAbi:\", nftContractAbi);\r\n        // var abi = JSON.parse(nftManagerAbi);\r\n        var myContract = new web3.eth.Contract(nftContractAbi, contractAddress);\r\n        const response = await myContract.methods.getMetaData()\r\n            .call({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n            });\r\n        console.log(\"getSpecific recieved result for getMetaData:\", response);\r\n\r\n        for (let i = 0; i < response2.length; i++) {\r\n            console.log(response2[i][5].toLowerCase(), contractAddress.toLowerCase(), response2[i][4], id);\r\n            if (response2[i][5].toLowerCase() == contractAddress.toLowerCase() && response2[i][4] == id) {\r\n                const result = {\r\n                    name: response[0],\r\n                    category: response[1],\r\n                    description: response[2],\r\n                    price: response2[i][2],\r\n                    onSale: response2[i][1],\r\n                    owner: response2[i][0].toLowerCase(),\r\n                    contractAddress: response2[i][5],\r\n                    tokenId: response2[i][4],\r\n                    category: category\r\n                }\r\n                console.log(\"result:\", result);\r\n                return result;\r\n            }\r\n        }\r\n        console.log(\"Not Found specific!!!\");\r\n        return;\r\n\r\n    } else {\r\n        console.log(\"web3 not defined\");\r\n    }\r\n}\r\n\r\nexport async function getSpecific2(contractAddress, id) {\r\n    const web3 = new Web3(window.ethereum);\r\n    if (typeof web3 !== 'undefined') {\r\n        var abi = JSON.parse(nftManagerAbi);\r\n        var myContract2 = new web3.eth.Contract(abi, nftManagerContractAddress);\r\n        const response2 = await myContract2.methods.getInfo(contractAddress, id)\r\n            .call({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n            });\r\n        var category_type = response2[3];\r\n        var category;\r\n        if (category_type == 0) category = \"land\";\r\n        else if (category_type == 1) category = \"wearable\";\r\n        else if (category_type == 2) category = \"decoration\";\r\n        else category = \"fuck\";\r\n        console.log(\"getSpecific recieved result for getNFTs:\", response2);\r\n        const result = {\r\n            // name: response[0],\r\n            // category: response[1],\r\n            // description: response[2],\r\n            price: response2[2],\r\n            onSale: response2[1],\r\n            owner: response2[0].toLowerCase(),\r\n            contractAddress: response2[5],\r\n            tokenId: response2[4],\r\n            category: category,\r\n            ipfsHash: response2[6]\r\n        }\r\n        console.log(\"result:\", result);\r\n        return result;\r\n    } else {\r\n        console.log(\"web3 not defined\");\r\n    }\r\n}\r\n\r\nexport async function startSale(contractAddress, tokenId, price) {\r\n    const web3 = new Web3(window.ethereum);\r\n    if (typeof web3 !== 'undefined') {\r\n        var abi = JSON.parse(nftManagerAbi);\r\n        var myContract = new web3.eth.Contract(abi, nftManagerContractAddress);\r\n        var response = await myContract.methods\r\n            .startSale(price, contractAddress, tokenId)\r\n            .send({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n                to: nftManagerContractAddress,\r\n            });\r\n        console.log(\"startSale | response:\", response);\r\n        return response;\r\n    } else {\r\n        console.log(\"web3 not defined\");\r\n    }\r\n}\r\n\r\nexport async function closeSale(contractAddress, tokenId, price) {\r\n    const web3 = new Web3(window.ethereum);\r\n    if (typeof web3 !== 'undefined') {\r\n        var abi = JSON.parse(nftManagerAbi);\r\n        var myContract = new web3.eth.Contract(abi, nftManagerContractAddress);\r\n        var response = await myContract.methods\r\n            .closeSale(contractAddress, tokenId)\r\n            .send({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n                to: nftManagerContractAddress,\r\n            });\r\n        console.log(\"closeSale | response:\", response);\r\n        return response;\r\n    } else {\r\n        console.log(\"web3 not defined\");\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}