{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Web3 from'web3';export function connect(){return _connect.apply(this,arguments);}function _connect(){_connect=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var accounts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(window.ethereum){_context.next=3;break;}alert(\"Get MetaMask!\");return _context.abrupt(\"return\");case 3:_context.next=5;return window.ethereum.request({method:\"eth_requestAccounts\"});case 5:accounts=_context.sent;case 6:case\"end\":return _context.stop();}}},_callee);}));return _connect.apply(this,arguments);}export function getAddress(){var account='';if(typeof window.ethereum!=='undefined'&&window.ethereum.isMetaMask){account=window.ethereum.selectedAddress;if(typeof account==='undefined'||account==null){account='';}}// var buffer = _malloc(lengthBytesUTF8(account) + 1);\n// stringToUTF8(account, buffer, account.length + 1);\n// return buffer;\nreturn account;}export function checkIfWalletIsConnected(_x){return _checkIfWalletIsConnected.apply(this,arguments);}function _checkIfWalletIsConnected(){_checkIfWalletIsConnected=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(onConnected){var accounts,account;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!window.ethereum){_context2.next=8;break;}_context2.next=3;return window.ethereum.request({method:\"eth_accounts\"});case 3:accounts=_context2.sent;if(!(accounts.length>0)){_context2.next=8;break;}account=accounts[0];onConnected(account.toLowerCase());return _context2.abrupt(\"return\");case 8:case\"end\":return _context2.stop();}}},_callee2);}));return _checkIfWalletIsConnected.apply(this,arguments);}export function checkIfWalletIsConnected2(){return _checkIfWalletIsConnected2.apply(this,arguments);}function _checkIfWalletIsConnected2(){_checkIfWalletIsConnected2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var accounts,account;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!window.ethereum){_context3.next=7;break;}_context3.next=3;return window.ethereum.request({method:\"eth_accounts\"});case 3:accounts=_context3.sent;if(!(accounts.length>0)){_context3.next=7;break;}account=accounts[0];return _context3.abrupt(\"return\",account.toLowerCase());case 7:return _context3.abrupt(\"return\",\"\");case 8:case\"end\":return _context3.stop();}}},_callee3);}));return _checkIfWalletIsConnected2.apply(this,arguments);}","map":{"version":3,"sources":["C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/src/services/userData.js"],"names":["Web3","connect","window","ethereum","alert","request","method","accounts","getAddress","account","isMetaMask","selectedAddress","checkIfWalletIsConnected","onConnected","length","toLowerCase","checkIfWalletIsConnected2"],"mappings":"yRAAA,MAAOA,CAAAA,IAAP,KAAiB,MAAjB,CAEA,eAAsBC,CAAAA,OAAtB,0C,qFAAO,mJACEC,MAAM,CAACC,QADT,yBAECC,KAAK,CAAC,eAAD,CAAL,CAFD,8DAMoBF,CAAAA,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB,CAC3CC,MAAM,CAAE,qBADmC,CAAxB,CANpB,QAMGC,QANH,qE,0CAWP,MAAO,SAASC,CAAAA,UAAT,EAAsB,CACzB,GAAIC,CAAAA,OAAO,CAAG,EAAd,CACA,GAAI,MAAOP,CAAAA,MAAM,CAACC,QAAd,GAA2B,WAA3B,EAA0CD,MAAM,CAACC,QAAP,CAAgBO,UAA9D,CAA0E,CACtED,OAAO,CAAGP,MAAM,CAACC,QAAP,CAAgBQ,eAA1B,CACA,GAAI,MAAOF,CAAAA,OAAP,GAAmB,WAAnB,EAAkCA,OAAO,EAAI,IAAjD,CAAuD,CACnDA,OAAO,CAAG,EAAV,CACH,CACJ,CACD;AACA;AACA;AACA,MAAOA,CAAAA,OAAP,CACH,CAED,eAAsBG,CAAAA,wBAAtB,6D,uHAAO,kBAAwCC,WAAxC,+IACCX,MAAM,CAACC,QADR,iDAEwBD,CAAAA,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB,CAC3CC,MAAM,CAAE,cADmC,CAAxB,CAFxB,QAEOC,QAFP,qBAMKA,QAAQ,CAACO,MAAT,CAAkB,CANvB,2BAOWL,OAPX,CAOqBF,QAAQ,CAAC,CAAD,CAP7B,CAQKM,WAAW,CAACJ,OAAO,CAACM,WAAR,EAAD,CAAX,CARL,0F,2DAcP,eAAsBC,CAAAA,yBAAtB,4D,yHAAO,iKACCd,MAAM,CAACC,QADR,iDAEwBD,CAAAA,MAAM,CAACC,QAAP,CAAgBE,OAAhB,CAAwB,CAC3CC,MAAM,CAAE,cADmC,CAAxB,CAFxB,QAEOC,QAFP,qBAMKA,QAAQ,CAACO,MAAT,CAAkB,CANvB,2BAOWL,OAPX,CAOqBF,QAAQ,CAAC,CAAD,CAP7B,kCAQYE,OAAO,CAACM,WAAR,EARZ,0CAWI,EAXJ,0D","sourcesContent":["import Web3 from 'web3';\r\n\r\nexport async function connect() {\r\n    if (!window.ethereum) {\r\n        alert(\"Get MetaMask!\");\r\n        return;\r\n    }\r\n\r\n    const accounts = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n    });\r\n}\r\n\r\nexport function getAddress() {\r\n    var account = '';\r\n    if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\r\n        account = window.ethereum.selectedAddress;\r\n        if (typeof account === 'undefined' || account == null) {\r\n            account = '';\r\n        }\r\n    }\r\n    // var buffer = _malloc(lengthBytesUTF8(account) + 1);\r\n    // stringToUTF8(account, buffer, account.length + 1);\r\n    // return buffer;\r\n    return account;\r\n}\r\n\r\nexport async function checkIfWalletIsConnected(onConnected) {\r\n    if (window.ethereum) {\r\n        const accounts = await window.ethereum.request({\r\n            method: \"eth_accounts\",\r\n        });\r\n\r\n        if (accounts.length > 0) {\r\n            const account = accounts[0];\r\n            onConnected(account.toLowerCase());\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nexport async function checkIfWalletIsConnected2() {\r\n    if (window.ethereum) {\r\n        const accounts = await window.ethereum.request({\r\n            method: \"eth_accounts\",\r\n        });\r\n\r\n        if (accounts.length > 0) {\r\n            const account = accounts[0];\r\n            return account.toLowerCase();\r\n        }\r\n    }\r\n    return \"\";\r\n}"]},"metadata":{},"sourceType":"module"}