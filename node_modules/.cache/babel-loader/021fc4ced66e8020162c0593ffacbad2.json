{"ast":null,"code":"import Web3 from 'web3';\nconst baseUrl = 'http://localhost:5000';\nconst nftTraderAbi = `\n[\n\t{\n\t\t\"inputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"constructor\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"contractAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"closeSale\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"contractAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"category\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"num\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"establish\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"category\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"getNFTs\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"components\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\t\t\"name\": \"onSale\",\n\t\t\t\t\t\t\"type\": \"bool\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"price\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"category\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\t\t\"type\": \"uint256\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\t\t\"name\": \"contractAddress\",\n\t\t\t\t\t\t\"type\": \"address\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"internalType\": \"struct NftManager.Detail[]\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"tuple[]\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"nfts\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"owner\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"onSale\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"price\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"bool\",\n\t\t\t\t\"name\": \"valid\",\n\t\t\t\t\"type\": \"bool\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"contractAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"purchase\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"payable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"price\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"address\",\n\t\t\t\t\"name\": \"contractAddress\",\n\t\t\t\t\"type\": \"address\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"tokenId\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"name\": \"startSale\",\n\t\t\"outputs\": [],\n\t\t\"stateMutability\": \"nonpayable\",\n\t\t\"type\": \"function\"\n\t},\n\t{\n\t\t\"inputs\": [],\n\t\t\"name\": \"testforWorking\",\n\t\t\"outputs\": [\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\t\"stateMutability\": \"view\",\n\t\t\"type\": \"function\"\n\t}\n]\n`;\nconst nftTraderContractAddress = \"0x05AcaeaB10BE71C59B507df0240420123325f228\"; // export async function getAll(page, category, query) {\n//     if (query !== \"\" && query !== undefined) {\n//         return (await fetch(`${baseUrl}/products?page=${page}&search=${query}`, { credentials: 'include' })).json();\n//     } else if (category && category !== 'all') {\n//         return (await fetch(`${baseUrl}/products/${category}?page=${page}`, { credentials: 'include' })).json();\n//     } else {\n//         return (await fetch(`${baseUrl}/products?page=${page}`, { credentials: 'include' })).json();\n//     }\n// }\n\nexport async function getMarketNfts(category) {\n  const web3 = new Web3(window.ethereum);\n\n  if (typeof web3 !== 'undefined') {\n    var abi = JSON.parse(nftTraderAbi);\n    var myContract = new web3.eth.Contract(abi, nftTraderContractAddress);\n    console.log(\"getMarketNfts called\");\n    var category_type;\n    if (category == \"land\") category_type = 0;else if (category == \"wearable\") category_type = 1;else if (category == \"decoration\") category_type = 2;else {\n      console.log(\"category \", category, \" not known!\");\n      return;\n    }\n    const response = await myContract.methods.getNFTs(category_type).call({\n      from: window.web3.currentProvider.selectedAddress\n    });\n    const result = [];\n    console.log(\"getMarketNfts recieved result:\", response);\n\n    for (let i = 0; i < response.length; i++) {\n      if (response[i][1]) {\n        result.push({\n          price: response[i][2],\n          onSale: response[i][1],\n          owner: response[i][0].toLowerCase(),\n          contractAddress: response[i][5],\n          tokenId: response[i][4],\n          category: category\n        });\n      }\n    }\n\n    return result;\n  } else {\n    console.log(\"web3 not defined\");\n  }\n}\nexport async function getUserNfts(public_key, category) {\n  const web3 = new Web3(window.ethereum);\n\n  if (typeof web3 !== 'undefined') {\n    var abi = JSON.parse(nftTraderAbi);\n    var myContract = new web3.eth.Contract(abi, nftTraderContractAddress);\n    var category_type;\n    if (category == \"land\") category_type = 0;else if (category == \"wearable\") category_type = 1;else if (category == \"decoration\") category_type = 2;else {\n      console.log(\"category \", category, \" not known!\");\n      return;\n    }\n    const response = await myContract.methods.getNFTs(category_type).call({\n      from: window.web3.currentProvider.selectedAddress\n    });\n    const result = [];\n\n    for (let i = 0; i < response.length; i++) {\n      if (response[i][0].toLowerCase() == public_key) {\n        result.push({\n          price: response[i][2],\n          onSale: response[i][1],\n          owner: response[i][0].toLowerCase(),\n          contractAddress: response[i][5],\n          tokenId: response[i][4],\n          category: category\n        });\n      }\n    }\n\n    console.log(\"result:\", result);\n    return result;\n  } else {\n    console.log(\"web3 not defined\");\n  }\n}\nexport async function getSpecific(category, contractAddress, id) {\n  const web3 = new Web3(window.ethereum);\n\n  if (typeof web3 !== 'undefined') {\n    var abi = JSON.parse(nftTraderAbi);\n    var myContract = new web3.eth.Contract(abi, nftTraderContractAddress);\n    const response = await myContract.methods.getNFTs(category).call({\n      from: window.web3.currentProvider.selectedAddress\n    });\n    const result = {\n      _id: id,\n      price: response[id][0],\n      owner: response[id][1].toLowerCase(),\n      valid: response[id][2]\n    };\n    console.log(\"result:\", result);\n    return result;\n  } else {\n    console.log(\"web3 not defined\");\n  }\n}\nexport async function createProduct(product) {\n  return (await fetch(`${baseUrl}/products/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(product)\n  })).json();\n}\nexport async function editProduct(id, product) {\n  return (await fetch(`${baseUrl}/products/edit/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(product)\n  })).json();\n}\nexport async function activateSell(id) {\n  return (await fetch(`/products/enable/${id}`)).json();\n}\nexport async function archiveSell(id) {\n  return (await fetch(`/products/archive/${id}`)).json();\n}\nexport async function wishProduct(id) {\n  return (await fetch(`${baseUrl}/products/wish/${id}`, {\n    credentials: 'include'\n  })).json();\n}","map":{"version":3,"sources":["C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/src/services/productData.js"],"names":["Web3","baseUrl","nftTraderAbi","nftTraderContractAddress","getMarketNfts","category","web3","window","ethereum","abi","JSON","parse","myContract","eth","Contract","console","log","category_type","response","methods","getNFTs","call","from","currentProvider","selectedAddress","result","i","length","push","price","onSale","owner","toLowerCase","contractAddress","tokenId","getUserNfts","public_key","getSpecific","id","_id","valid","createProduct","product","fetch","method","headers","credentials","body","stringify","json","editProduct","activateSell","archiveSell","wishProduct"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AACA,MAAMC,YAAY,GAAI;AACtjMA;AAkMA,MAAMC,wBAAwB,GAAG,4CAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,eAAeC,aAAf,CAA6BC,QAA7B,EAAuC;AAC1C,QAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAb;;AACA,MAAI,OAAOF,IAAP,KAAgB,WAApB,EAAiC;AAC7B,QAAIG,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWT,YAAX,CAAV;AACA,QAAIU,UAAU,GAAG,IAAIN,IAAI,CAACO,GAAL,CAASC,QAAb,CAAsBL,GAAtB,EAA2BN,wBAA3B,CAAjB;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,QAAIC,aAAJ;AACA,QAAIZ,QAAQ,IAAI,MAAhB,EAAwBY,aAAa,GAAG,CAAhB,CAAxB,KACK,IAAIZ,QAAQ,IAAI,UAAhB,EAA4BY,aAAa,GAAG,CAAhB,CAA5B,KACA,IAAIZ,QAAQ,IAAI,YAAhB,EAA8BY,aAAa,GAAG,CAAhB,CAA9B,KACA;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBX,QAAzB,EAAmC,aAAnC;AACA;AACH;AACD,UAAMa,QAAQ,GAAG,MAAMN,UAAU,CAACO,OAAX,CAAmBC,OAAnB,CAA2BH,aAA3B,EAClBI,IADkB,CACb;AACFC,MAAAA,IAAI,EAAEf,MAAM,CAACD,IAAP,CAAYiB,eAAZ,CAA4BC;AADhC,KADa,CAAvB;AAIA,UAAMC,MAAM,GAAG,EAAf;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CE,QAA9C;;AACA,SAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACS,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,UAAIR,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,CAAJ,EAAoB;AAChBD,QAAAA,MAAM,CAACG,IAAP,CAAY;AACRC,UAAAA,KAAK,EAAEX,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,CADC;AAERI,UAAAA,MAAM,EAAEZ,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,CAFA;AAGRK,UAAAA,KAAK,EAAEb,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,EAAeM,WAAf,EAHC;AAIRC,UAAAA,eAAe,EAAEf,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,CAJT;AAKRQ,UAAAA,OAAO,EAAEhB,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,CALD;AAMRrB,UAAAA,QAAQ,EAAEA;AANF,SAAZ;AAQH;AACJ;;AACD,WAAOoB,MAAP;AACH,GA/BD,MA+BO;AACHV,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ;AAED,OAAO,eAAemB,WAAf,CAA2BC,UAA3B,EAAuC/B,QAAvC,EAAiD;AACpD,QAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAb;;AACA,MAAI,OAAOF,IAAP,KAAgB,WAApB,EAAiC;AAC7B,QAAIG,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWT,YAAX,CAAV;AACA,QAAIU,UAAU,GAAG,IAAIN,IAAI,CAACO,GAAL,CAASC,QAAb,CAAsBL,GAAtB,EAA2BN,wBAA3B,CAAjB;AACA,QAAIc,aAAJ;AACA,QAAIZ,QAAQ,IAAI,MAAhB,EAAwBY,aAAa,GAAG,CAAhB,CAAxB,KACK,IAAIZ,QAAQ,IAAI,UAAhB,EAA4BY,aAAa,GAAG,CAAhB,CAA5B,KACA,IAAIZ,QAAQ,IAAI,YAAhB,EAA8BY,aAAa,GAAG,CAAhB,CAA9B,KACA;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBX,QAAzB,EAAmC,aAAnC;AACA;AACH;AACD,UAAMa,QAAQ,GAAG,MAAMN,UAAU,CAACO,OAAX,CAAmBC,OAAnB,CAA2BH,aAA3B,EAClBI,IADkB,CACb;AACFC,MAAAA,IAAI,EAAEf,MAAM,CAACD,IAAP,CAAYiB,eAAZ,CAA4BC;AADhC,KADa,CAAvB;AAIA,UAAMC,MAAM,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACS,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,UAAIR,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,EAAeM,WAAf,MAAgCI,UAApC,EAAgD;AAC5CX,QAAAA,MAAM,CAACG,IAAP,CAAY;AACRC,UAAAA,KAAK,EAAEX,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,CADC;AAERI,UAAAA,MAAM,EAAEZ,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,CAFA;AAGRK,UAAAA,KAAK,EAAEb,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,EAAeM,WAAf,EAHC;AAIRC,UAAAA,eAAe,EAAEf,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,CAJT;AAKRQ,UAAAA,OAAO,EAAEhB,QAAQ,CAACQ,CAAD,CAAR,CAAY,CAAZ,CALD;AAMRrB,UAAAA,QAAQ,EAAEA;AANF,SAAZ;AAQH;AACJ;;AACDU,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,MAAvB;AACA,WAAOA,MAAP;AACH,GA9BD,MA8BO;AACHV,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ;AAED,OAAO,eAAeqB,WAAf,CAA2BhC,QAA3B,EAAqC4B,eAArC,EAAsDK,EAAtD,EAA0D;AAC7D,QAAMhC,IAAI,GAAG,IAAIN,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAb;;AACA,MAAI,OAAOF,IAAP,KAAgB,WAApB,EAAiC;AAC7B,QAAIG,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWT,YAAX,CAAV;AACA,QAAIU,UAAU,GAAG,IAAIN,IAAI,CAACO,GAAL,CAASC,QAAb,CAAsBL,GAAtB,EAA2BN,wBAA3B,CAAjB;AAEA,UAAMe,QAAQ,GAAG,MAAMN,UAAU,CAACO,OAAX,CAAmBC,OAAnB,CAA2Bf,QAA3B,EAClBgB,IADkB,CACb;AACFC,MAAAA,IAAI,EAAEf,MAAM,CAACD,IAAP,CAAYiB,eAAZ,CAA4BC;AADhC,KADa,CAAvB;AAIA,UAAMC,MAAM,GAAG;AACXc,MAAAA,GAAG,EAAED,EADM;AAEXT,MAAAA,KAAK,EAAEX,QAAQ,CAACoB,EAAD,CAAR,CAAa,CAAb,CAFI;AAGXP,MAAAA,KAAK,EAAEb,QAAQ,CAACoB,EAAD,CAAR,CAAa,CAAb,EAAgBN,WAAhB,EAHI;AAIXQ,MAAAA,KAAK,EAAEtB,QAAQ,CAACoB,EAAD,CAAR,CAAa,CAAb;AAJI,KAAf;AAMAvB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,MAAvB;AACA,WAAOA,MAAP;AACH,GAhBD,MAgBO;AACHV,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;AACJ;AAED,OAAO,eAAeyB,aAAf,CAA6BC,OAA7B,EAAsC;AACzC,SAAO,CAAC,MAAMC,KAAK,CAAE,GAAE1C,OAAQ,kBAAZ,EAA+B;AAC9C2C,IAAAA,MAAM,EAAE,MADsC;AAE9CC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFqC;AAK9CC,IAAAA,WAAW,EAAE,SALiC;AAM9CC,IAAAA,IAAI,EAAErC,IAAI,CAACsC,SAAL,CAAeN,OAAf;AANwC,GAA/B,CAAZ,EAOHO,IAPG,EAAP;AAQH;AAED,OAAO,eAAeC,WAAf,CAA2BZ,EAA3B,EAA+BI,OAA/B,EAAwC;AAC3C,SAAO,CAAC,MAAMC,KAAK,CAAE,GAAE1C,OAAQ,kBAAiBqC,EAAG,EAAhC,EAAmC;AAClDM,IAAAA,MAAM,EAAE,OAD0C;AAElDC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFyC;AAKlDC,IAAAA,WAAW,EAAE,SALqC;AAMlDC,IAAAA,IAAI,EAAErC,IAAI,CAACsC,SAAL,CAAeN,OAAf;AAN4C,GAAnC,CAAZ,EAOHO,IAPG,EAAP;AAQH;AAGD,OAAO,eAAeE,YAAf,CAA4Bb,EAA5B,EAAgC;AACnC,SAAO,CAAC,MAAMK,KAAK,CAAE,oBAAmBL,EAAG,EAAxB,CAAZ,EAAwCW,IAAxC,EAAP;AACH;AAED,OAAO,eAAeG,WAAf,CAA2Bd,EAA3B,EAA+B;AAClC,SAAO,CAAC,MAAMK,KAAK,CAAE,qBAAoBL,EAAG,EAAzB,CAAZ,EAAyCW,IAAzC,EAAP;AACH;AAED,OAAO,eAAeI,WAAf,CAA2Bf,EAA3B,EAA+B;AAClC,SAAO,CAAC,MAAMK,KAAK,CAAE,GAAE1C,OAAQ,kBAAiBqC,EAAG,EAAhC,EAAmC;AAAEQ,IAAAA,WAAW,EAAE;AAAf,GAAnC,CAAZ,EAA4EG,IAA5E,EAAP;AACH","sourcesContent":["import Web3 from 'web3';\r\n\r\nconst baseUrl = 'http://localhost:5000';\r\nconst nftTraderAbi = `\r\n[\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"closeSale\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"category\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"num\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"establish\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"category\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"getNFTs\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"components\": [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\t\t\"name\": \"onSale\",\r\n\t\t\t\t\t\t\"type\": \"bool\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"category\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\t\t\"type\": \"address\"\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\t\t\"internalType\": \"struct NftManager.Detail[]\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"tuple[]\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"nfts\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"owner\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"onSale\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"valid\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"purchase\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"price\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"contractAddress\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"tokenId\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"startSale\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"testforWorking\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"uint256\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"uint256\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n`;\r\nconst nftTraderContractAddress = \"0x05AcaeaB10BE71C59B507df0240420123325f228\";\r\n\r\n// export async function getAll(page, category, query) {\r\n//     if (query !== \"\" && query !== undefined) {\r\n//         return (await fetch(`${baseUrl}/products?page=${page}&search=${query}`, { credentials: 'include' })).json();\r\n//     } else if (category && category !== 'all') {\r\n//         return (await fetch(`${baseUrl}/products/${category}?page=${page}`, { credentials: 'include' })).json();\r\n//     } else {\r\n//         return (await fetch(`${baseUrl}/products?page=${page}`, { credentials: 'include' })).json();\r\n//     }\r\n// }\r\n\r\nexport async function getMarketNfts(category) {\r\n    const web3 = new Web3(window.ethereum);\r\n    if (typeof web3 !== 'undefined') {\r\n        var abi = JSON.parse(nftTraderAbi);\r\n        var myContract = new web3.eth.Contract(abi, nftTraderContractAddress);\r\n        console.log(\"getMarketNfts called\");\r\n        var category_type;\r\n        if (category == \"land\") category_type = 0;\r\n        else if (category == \"wearable\") category_type = 1;\r\n        else if (category == \"decoration\") category_type = 2;\r\n        else {\r\n            console.log(\"category \", category, \" not known!\");\r\n            return;\r\n        }\r\n        const response = await myContract.methods.getNFTs(category_type)\r\n            .call({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n            });\r\n        const result = [];\r\n        console.log(\"getMarketNfts recieved result:\", response);\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (response[i][1]) {\r\n                result.push({\r\n                    price: response[i][2],\r\n                    onSale: response[i][1],\r\n                    owner: response[i][0].toLowerCase(),\r\n                    contractAddress: response[i][5],\r\n                    tokenId: response[i][4],\r\n                    category: category\r\n                })\r\n            }\r\n        }\r\n        return result;\r\n    } else {\r\n        console.log(\"web3 not defined\");\r\n    }\r\n}\r\n\r\nexport async function getUserNfts(public_key, category) {\r\n    const web3 = new Web3(window.ethereum);\r\n    if (typeof web3 !== 'undefined') {\r\n        var abi = JSON.parse(nftTraderAbi);\r\n        var myContract = new web3.eth.Contract(abi, nftTraderContractAddress);\r\n        var category_type;\r\n        if (category == \"land\") category_type = 0;\r\n        else if (category == \"wearable\") category_type = 1;\r\n        else if (category == \"decoration\") category_type = 2;\r\n        else {\r\n            console.log(\"category \", category, \" not known!\");\r\n            return;\r\n        }\r\n        const response = await myContract.methods.getNFTs(category_type)\r\n            .call({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n            });\r\n        const result = [];\r\n        for (let i = 0; i < response.length; i++) {\r\n            if (response[i][0].toLowerCase() == public_key) {\r\n                result.push({\r\n                    price: response[i][2],\r\n                    onSale: response[i][1],\r\n                    owner: response[i][0].toLowerCase(),\r\n                    contractAddress: response[i][5],\r\n                    tokenId: response[i][4],\r\n                    category: category\r\n                })\r\n            }\r\n        }\r\n        console.log(\"result:\", result);\r\n        return result;\r\n    } else {\r\n        console.log(\"web3 not defined\");\r\n    }\r\n}\r\n\r\nexport async function getSpecific(category, contractAddress, id) {\r\n    const web3 = new Web3(window.ethereum);\r\n    if (typeof web3 !== 'undefined') {\r\n        var abi = JSON.parse(nftTraderAbi);\r\n        var myContract = new web3.eth.Contract(abi, nftTraderContractAddress);\r\n\r\n        const response = await myContract.methods.getNFTs(category)\r\n            .call({\r\n                from: window.web3.currentProvider.selectedAddress,\r\n            });\r\n        const result = {\r\n            _id: id,\r\n            price: response[id][0],\r\n            owner: response[id][1].toLowerCase(),\r\n            valid: response[id][2]\r\n        }\r\n        console.log(\"result:\", result);\r\n        return result;\r\n    } else {\r\n        console.log(\"web3 not defined\");\r\n    }\r\n}\r\n\r\nexport async function createProduct(product) {\r\n    return (await fetch(`${baseUrl}/products/create`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(product)\r\n    })).json();\r\n}\r\n\r\nexport async function editProduct(id, product) {\r\n    return (await fetch(`${baseUrl}/products/edit/${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(product)\r\n    })).json();\r\n}\r\n\r\n\r\nexport async function activateSell(id) {\r\n    return (await fetch(`/products/enable/${id}`)).json()\r\n}\r\n\r\nexport async function archiveSell(id) {\r\n    return (await fetch(`/products/archive/${id}`)).json()\r\n}\r\n\r\nexport async function wishProduct(id) {\r\n    return (await fetch(`${baseUrl}/products/wish/${id}`, { credentials: 'include' })).json();\r\n}"]},"metadata":{},"sourceType":"module"}