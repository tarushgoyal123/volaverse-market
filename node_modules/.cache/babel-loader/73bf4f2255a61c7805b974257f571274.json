{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tarus\\\\Documents\\\\marketplace_check\\\\volaverse-market\\\\src\\\\Pages\\\\Categories.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component'; // import CategoriesNav from '../components/Categories/CategoriesNav'\n\nimport ProductCard from '../components/ProductCard/ProductCard';\nimport { Col, Spinner, Dropdown } from 'react-bootstrap';\nimport { getMarketNfts } from '../services/productData';\nimport { BiSortDown, BiSort, BiDownArrowAlt, BiUpArrowAlt, BiSortUp } from 'react-icons/bi';\nimport '../components/Siders/SearchSider.css';\nimport '../components/Categories/Categories.css';\nimport '../components/ProductCard/ProductCard.css';\nimport CenterHeading from '../components/CenterHeading/CenterHeading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Categories({\n  match\n}) {\n  _s();\n\n  let currentCategory = match.params.category;\n  const [products, setProduct] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [sort, setSort] = useState('lowerPrice');\n  useEffect(() => {\n    setLoading(true);\n    getMarketNfts(currentCategory).then(res => {\n      console.log(\"result: \" + res);\n      console.log(\"result: \" + typeof res);\n      setProduct(res);\n      setLoading(false);\n    }).catch(err => console.log(err));\n  }, [currentCategory]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(CenterHeading, {\n        text: currentCategory + \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), !loading ? /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: products.length,\n        hasMore: () => {\n          return false;\n        },\n        className: \"row\",\n        children: products // .sort((a, b) => {\n        //     // if (sort === \"oldest\") {\n        //     //     return a.addedAt.localeCompare(b.addedAt)\n        //     // }\n        //     // if (sort === \"newest\") {\n        //     //     return b.addedAt.localeCompare(a.addedAt)\n        //     // }\n        //     if (sort === \"lowerPrice\") {\n        //         return b[2] - a[2]\n        //     }\n        //     if (sort === \"biggerPrice\") {\n        //         return a[2] - b[2]\n        //     }\n        // })\n        .map(x => /*#__PURE__*/_jsxDEV(ProductCard, {\n          params: x\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(Categories, \"e55TZ1KeA/B2JXS6iwvW3Ss5vhU=\");\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["C:/Users/tarus/Documents/marketplace_check/volaverse-market/src/Pages/Categories.js"],"names":["useEffect","useState","InfiniteScroll","ProductCard","Col","Spinner","Dropdown","getMarketNfts","BiSortDown","BiSort","BiDownArrowAlt","BiUpArrowAlt","BiSortUp","CenterHeading","Categories","match","currentCategory","params","category","products","setProduct","loading","setLoading","sort","setSort","then","res","console","log","catch","err","length","map","x"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,iCAA3B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,QAAvB,QAAuC,iBAAvC;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,cAA7B,EAA6CC,YAA7C,EAA2DC,QAA3D,QAA2E,gBAA3E;AACA,OAAO,sCAAP;AACA,OAAO,yCAAP;AACA,OAAO,2CAAP;AACA,OAAOC,aAAP,MAA0B,2CAA1B;;;;AAGA,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA+B;AAAA;;AAC3B,MAAIC,eAAe,GAAGD,KAAK,CAACE,MAAN,CAAaC,QAAnC;AACA,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBnB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACoB,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,YAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAf,IAAAA,aAAa,CAACS,eAAD,CAAb,CACKS,IADL,CACUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,GAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAa,OAAOF,GAAhC;AACAN,MAAAA,UAAU,CAACM,GAAD,CAAV;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KANL,EAOKO,KAPL,CAOWC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAPlB;AAQH,GAVQ,EAUN,CAACd,eAAD,CAVM,CAAT;AAYA,sBACI;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,aAAD;AAAe,QAAA,IAAI,EAAEA,eAAe,GAAG;AAAvC;AAAA;AAAA;AAAA;AAAA,cADJ,EAaK,CAACK,OAAD,gBACG,QAAC,cAAD;AACI,QAAA,UAAU,EAAEF,QAAQ,CAACY,MADzB;AAEI,QAAA,OAAO,EAAE,MAAM;AACd,iBAAO,KAAP;AACA,SAJL;AAKI,QAAA,SAAS,EAAC,KALd;AAAA,kBAMKZ,QAAQ,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdK,SAeJa,GAfJ,CAeQC,CAAC,iBACE,QAAC,WAAD;AAAa,UAAA,MAAM,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,gBAhBX;AANL;AAAA;AAAA;AAAA;AAAA,cADH,gBA0BK;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvCV;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADJ;AAiDH;;GAnEQnB,U;;KAAAA,U;AAqET,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\n// import CategoriesNav from '../components/Categories/CategoriesNav'\r\nimport ProductCard from '../components/ProductCard/ProductCard';\r\nimport { Col, Spinner, Dropdown } from 'react-bootstrap';\r\nimport { getMarketNfts } from '../services/productData';\r\nimport { BiSortDown, BiSort, BiDownArrowAlt, BiUpArrowAlt, BiSortUp } from 'react-icons/bi'\r\nimport '../components/Siders/SearchSider.css'\r\nimport '../components/Categories/Categories.css';\r\nimport '../components/ProductCard/ProductCard.css';\r\nimport CenterHeading from '../components/CenterHeading/CenterHeading';\r\n\r\n\r\nfunction Categories({ match }) {\r\n    let currentCategory = match.params.category;\r\n    const [products, setProduct] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [sort, setSort] = useState('lowerPrice');\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getMarketNfts(currentCategory)\r\n            .then(res => {\r\n                console.log(\"result: \" + res);\r\n                console.log(\"result: \" + typeof(res));\r\n                setProduct(res);\r\n                setLoading(false);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [currentCategory])\r\n\r\n    return (\r\n        <>\r\n            {/* <CategoriesNav baseUrl=\"/market\" /> */}\r\n            <div className=\"container\">\r\n                <CenterHeading text={currentCategory + \"Products\"} />\r\n                {/* <Dropdown id=\"dropdown-sort\">\r\n                    <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\r\n                        Sort <BiSort />\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        <Dropdown.Item onClick={() => { setSort('oldest') }}>Oldest <BiDownArrowAlt /></Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => { setSort('newest') }}>Newest <BiUpArrowAlt /></Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => { setSort('lowerPrice') }}>Price <BiSortDown /></Dropdown.Item>\r\n                        <Dropdown.Item onClick={() => { setSort('biggerPrice') }}>Price <BiSortUp /> </Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown> */}\r\n                {!loading ?\r\n                    <InfiniteScroll\r\n                        dataLength={products.length}\r\n                        hasMore={() => {\r\n                         return false;\r\n                        }}\r\n                        className=\"row\">\r\n                        {products\r\n                            // .sort((a, b) => {\r\n                            //     // if (sort === \"oldest\") {\r\n                            //     //     return a.addedAt.localeCompare(b.addedAt)\r\n                            //     // }\r\n                            //     // if (sort === \"newest\") {\r\n                            //     //     return b.addedAt.localeCompare(a.addedAt)\r\n                            //     // }\r\n                            //     if (sort === \"lowerPrice\") {\r\n                            //         return b[2] - a[2]\r\n                            //     }\r\n                            //     if (sort === \"biggerPrice\") {\r\n                            //         return a[2] - b[2]\r\n                            //     }\r\n                            // })\r\n                            .map(x =>\r\n                                    <ProductCard params={x} />\r\n                            )}\r\n                    </InfiniteScroll>\r\n                    : <div className=\"spinner\">\r\n                        <Spinner animation=\"border\" />\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Categories;"]},"metadata":{},"sourceType":"module"}