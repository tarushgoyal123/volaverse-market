{"ast":null,"code":"const baseUrl = 'http://localhost:5000';\nexport async function registerUser(userData) {\n  return (await fetch(`${baseUrl}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(userData)\n  })).json();\n}\nexport async function loginUser(userData) {\n  return (await fetch(`${baseUrl}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(userData)\n  })).json();\n}\nexport async function getUser() {\n  return await (await fetch(baseUrl + '/auth/getUser', {\n    credentials: 'include'\n  })).json();\n}\nexport async function getUserActiveSells(id) {\n  return (await fetch(`${baseUrl}/products/sells/active/${id}`, {\n    credentials: 'include'\n  })).json();\n}\nexport async function getUserArchivedSells() {\n  return (await fetch(`${baseUrl}/products/sells/archived`, {\n    credentials: 'include'\n  })).json();\n}\nexport async function getUserWishlist() {\n  return (await fetch(`${baseUrl}/products/wishlist/getWishlist`, {\n    credentials: 'include'\n  })).json();\n}\nexport async function editUserProfile(id, data) {\n  return (await fetch(`/user/edit-profile/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(data)\n  })).json();\n}\nexport async function getUserById(id) {\n  return await (await fetch(baseUrl + `/user/getUserById/${id}`, {\n    credentials: 'include'\n  })).json();\n}","map":{"version":3,"sources":["C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/src/services/userData.js"],"names":["baseUrl","registerUser","userData","fetch","method","headers","credentials","body","JSON","stringify","json","loginUser","getUser","getUserActiveSells","id","getUserArchivedSells","getUserWishlist","editUserProfile","data","getUserById"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;AAEA,OAAO,eAAeC,YAAf,CAA4BC,QAA5B,EAAsC;AACzC,SAAO,CAAC,MAAMC,KAAK,CAAE,GAAEH,OAAQ,gBAAZ,EAA6B;AAC5CI,IAAAA,MAAM,EAAE,MADoC;AAE5CC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFmC;AAK5CC,IAAAA,WAAW,EAAE,SAL+B;AAM5CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AANsC,GAA7B,CAAZ,EAOHQ,IAPG,EAAP;AAQH;AAED,OAAO,eAAeC,SAAf,CAAyBT,QAAzB,EAAmC;AACtC,SAAO,CAAC,MAAMC,KAAK,CAAE,GAAEH,OAAQ,aAAZ,EAA0B;AACzCI,IAAAA,MAAM,EAAE,MADiC;AAEzCC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFgC;AAKzCC,IAAAA,WAAW,EAAE,SAL4B;AAMzCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AANmC,GAA1B,CAAZ,EAOHQ,IAPG,EAAP;AAQH;AAED,OAAO,eAAeE,OAAf,GAAyB;AAC5B,SAAO,MAAM,CAAC,MAAMT,KAAK,CAACH,OAAO,GAAG,eAAX,EAA4B;AAAEM,IAAAA,WAAW,EAAE;AAAf,GAA5B,CAAZ,EAAqEI,IAArE,EAAb;AACH;AAED,OAAO,eAAeG,kBAAf,CAAkCC,EAAlC,EAAsC;AACzC,SAAO,CAAC,MAAMX,KAAK,CAAE,GAAEH,OAAQ,0BAAyBc,EAAG,EAAxC,EAA2C;AAAER,IAAAA,WAAW,EAAE;AAAf,GAA3C,CAAZ,EAAoFI,IAApF,EAAP;AACH;AAED,OAAO,eAAeK,oBAAf,GAAsC;AACzC,SAAO,CAAC,MAAMZ,KAAK,CAAE,GAAEH,OAAQ,0BAAZ,EAAuC;AAAEM,IAAAA,WAAW,EAAE;AAAf,GAAvC,CAAZ,EAAgFI,IAAhF,EAAP;AACH;AAED,OAAO,eAAeM,eAAf,GAAiC;AACpC,SAAO,CAAC,MAAMb,KAAK,CAAE,GAAEH,OAAQ,gCAAZ,EAA6C;AAAEM,IAAAA,WAAW,EAAE;AAAf,GAA7C,CAAZ,EAAsFI,IAAtF,EAAP;AACH;AAED,OAAO,eAAeO,eAAf,CAA+BH,EAA/B,EAAmCI,IAAnC,EAAyC;AAC5C,SAAO,CAAC,MAAMf,KAAK,CAAE,sBAAqBW,EAAG,EAA1B,EAA6B;AAC5CV,IAAAA,MAAM,EAAE,OADoC;AAE5CC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFmC;AAK5CC,IAAAA,WAAW,EAAE,SAL+B;AAM5CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeS,IAAf;AANsC,GAA7B,CAAZ,EAOHR,IAPG,EAAP;AAQH;AAED,OAAO,eAAeS,WAAf,CAA2BL,EAA3B,EAA+B;AAClC,SAAO,MAAM,CAAC,MAAMX,KAAK,CAACH,OAAO,GAAI,qBAAoBc,EAAG,EAAnC,EAAsC;AAAER,IAAAA,WAAW,EAAE;AAAf,GAAtC,CAAZ,EAA+EI,IAA/E,EAAb;AACH","sourcesContent":["const baseUrl = 'http://localhost:5000';\r\n\r\nexport async function registerUser(userData) {\r\n    return (await fetch(`${baseUrl}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(userData)\r\n    })).json();\r\n}\r\n\r\nexport async function loginUser(userData) {\r\n    return (await fetch(`${baseUrl}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(userData)\r\n    })).json();\r\n}\r\n\r\nexport async function getUser() {\r\n    return await (await fetch(baseUrl + '/auth/getUser', { credentials: 'include' })).json()\r\n}\r\n\r\nexport async function getUserActiveSells(id) {\r\n    return (await fetch(`${baseUrl}/products/sells/active/${id}`, { credentials: 'include' })).json();\r\n}\r\n\r\nexport async function getUserArchivedSells() {\r\n    return (await fetch(`${baseUrl}/products/sells/archived`, { credentials: 'include' })).json();\r\n}\r\n\r\nexport async function getUserWishlist() {\r\n    return (await fetch(`${baseUrl}/products/wishlist/getWishlist`, { credentials: 'include' })).json();\r\n}\r\n\r\nexport async function editUserProfile(id, data) {\r\n    return (await fetch(`/user/edit-profile/${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    })).json();\r\n}\r\n\r\nexport async function getUserById(id) {\r\n    return await (await fetch(baseUrl + `/user/getUserById/${id}`, { credentials: 'include' })).json()\r\n}"]},"metadata":{},"sourceType":"module"}