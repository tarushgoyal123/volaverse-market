{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tarus\\\\Documents\\\\Marketplace-ReactJS-Project\\\\client\\\\src\\\\Pages\\\\Owned.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport CategoriesNav from '../components/Categories/CategoriesNav';\nimport ProductCard from '../components/ProductCard/ProductCard';\nimport { Col, Spinner, Dropdown } from 'react-bootstrap';\nimport { getUserNfts } from '../services/productData';\nimport { BiSortDown, BiSort, BiDownArrowAlt, BiUpArrowAlt, BiSortUp } from 'react-icons/bi';\nimport '../components/Siders/SearchSider.css';\nimport '../components/Categories/Categories.css';\nimport '../components/ProductCard/ProductCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Owned({\n  match\n}) {\n  _s();\n\n  let currentCategory = match.params.category;\n  let tempid = match.params.publicAddress;\n  const [products, setProduct] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [sort, setSort] = useState('lowerPrice');\n  const [userData, setUserData] = useState(null);\n  useEffect(() => {\n    setLoading(true);\n    if (!tempid) return;\n    getUserNfts(tempid, currentCategory).then(res => {\n      // console.log(\"params: \", match.params);\n      setProduct(res);\n      setLoading(false); // setQuery(\"\");\n    }).catch(err => console.log(err));\n  }, [currentCategory, tempid]);\n  useEffect(() => {\n    console.log(\"id:\", tempid);\n    setUserData(tempid);\n  }, [tempid]);\n\n  const handleSearch = e => {\n    e.preventDefault();\n  }; // console.log(\"userData:\", userData);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CategoriesNav, {\n      baseUrl: \"/owned/\" + userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [\" \", \" \", !loading ? /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        dataLength: products.length // next={() => {\n        //         getLands()\n        //             .then(res => {\n        //                 setProduct([...products, ...res]);\n        //             })\n        // }}\n        ,\n        hasMore: () => {\n          return false;\n        },\n        className: \"row\",\n        children: [\" \", products // .sort((a, b) => {\n        //     // if (sort === \"oldest\") {\n        //     //     return a.addedAt.localeCompare(b.addedAt)\n        //     // }\n        //     // if (sort === \"newest\") {\n        //     //     return b.addedAt.localeCompare(a.addedAt)\n        //     // }\n        //     if (sort === \"lowerPrice\") {\n        //         return b[2] - a[2]\n        //     }\n        //     if (sort === \"biggerPrice\") {\n        //         return a[2] - b[2]\n        //     }\n        // })\n        .map(x => /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          lg: 3,\n          children: [/*#__PURE__*/_jsxDEV(ProductCard, {\n            params: x\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), \" \"]\n        }, x.tokenId.toString(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 35\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this), \" \"]\n  }, void 0, true);\n}\n\n_s(Owned, \"fICUmzOLNzs1MapPmki1n3USgFk=\");\n\n_c = Owned;\nexport default Owned;\n\nvar _c;\n\n$RefreshReg$(_c, \"Owned\");","map":{"version":3,"sources":["C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/src/Pages/Owned.js"],"names":["useEffect","useState","InfiniteScroll","CategoriesNav","ProductCard","Col","Spinner","Dropdown","getUserNfts","BiSortDown","BiSort","BiDownArrowAlt","BiUpArrowAlt","BiSortUp","Owned","match","currentCategory","params","category","tempid","publicAddress","products","setProduct","loading","setLoading","sort","setSort","userData","setUserData","then","res","catch","err","console","log","handleSearch","e","preventDefault","length","map","x","tokenId","toString"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport CategoriesNav from '../components/Categories/CategoriesNav'\r\nimport ProductCard from '../components/ProductCard/ProductCard';\r\nimport { Col, Spinner, Dropdown } from 'react-bootstrap';\r\nimport { getUserNfts } from '../services/productData';\r\nimport { BiSortDown, BiSort, BiDownArrowAlt, BiUpArrowAlt, BiSortUp } from 'react-icons/bi'\r\nimport '../components/Siders/SearchSider.css';\r\nimport '../components/Categories/Categories.css';\r\nimport '../components/ProductCard/ProductCard.css';\r\n\r\nfunction Owned({ match }) {\r\n    let currentCategory = match.params.category;\r\n    let tempid = match.params.publicAddress;\r\n    const [products, setProduct] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [sort, setSort] = useState('lowerPrice');\r\n    const [userData, setUserData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n\r\n        if (!tempid) return;\r\n        getUserNfts(tempid, currentCategory)\r\n            .then(res => {\r\n                // console.log(\"params: \", match.params);\r\n                setProduct(res);\r\n                setLoading(false);\r\n                // setQuery(\"\");\r\n            })\r\n            .catch(err => console.log(err));\r\n    }, [currentCategory, tempid])\r\n\r\n    useEffect(() => {\r\n        console.log(\"id:\", tempid);\r\n        setUserData(tempid);\r\n    }, [tempid]);\r\n\r\n    const handleSearch = (e) => {\r\n            e.preventDefault()\r\n        }\r\n        // console.log(\"userData:\", userData);\r\n    return ( <\r\n        >\r\n        <\r\n        CategoriesNav baseUrl = { \"/owned/\" + userData }\r\n        /> <\r\n        div className = \"container\" > {\r\n            /* <Dropdown id=\"dropdown-sort\">\r\n                                <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\">\r\n                                    Sort <BiSort />\r\n                                </Dropdown.Toggle>\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item onClick={() => { setSort('oldest') }}>Oldest <BiDownArrowAlt /></Dropdown.Item>\r\n                                    <Dropdown.Item onClick={() => { setSort('newest') }}>Newest <BiUpArrowAlt /></Dropdown.Item>\r\n                                    <Dropdown.Item onClick={() => { setSort('lowerPrice') }}>Price <BiSortDown /></Dropdown.Item>\r\n                                    <Dropdown.Item onClick={() => { setSort('biggerPrice') }}>Price <BiSortUp /> </Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown> */\r\n        } {\r\n            !loading ?\r\n                <\r\n                InfiniteScroll\r\n            dataLength = { products.length }\r\n                // next={() => {\r\n                //         getLands()\r\n                //             .then(res => {\r\n                //                 setProduct([...products, ...res]);\r\n                //             })\r\n                // }}\r\n            hasMore = {\r\n                () => {\r\n                    return false;\r\n                }\r\n            }\r\n            className = \"row\" > {\r\n                    products\r\n                    // .sort((a, b) => {\r\n                    //     // if (sort === \"oldest\") {\r\n                    //     //     return a.addedAt.localeCompare(b.addedAt)\r\n                    //     // }\r\n                    //     // if (sort === \"newest\") {\r\n                    //     //     return b.addedAt.localeCompare(a.addedAt)\r\n                    //     // }\r\n                    //     if (sort === \"lowerPrice\") {\r\n                    //         return b[2] - a[2]\r\n                    //     }\r\n                    //     if (sort === \"biggerPrice\") {\r\n                    //         return a[2] - b[2]\r\n                    //     }\r\n                    // })\r\n                    .map(x =>\r\n                        <\r\n                        Col xs = { 12 }\r\n                        md = { 6 }\r\n                        lg = { 3 }\r\n                        key = { x.tokenId.toString() } >\r\n                        <\r\n                        ProductCard params = { x }\r\n                        /> <\r\n                        /Col>\r\n                    )\r\n                } <\r\n                /InfiniteScroll>: < div className = \"spinner\" >\r\n                <\r\n                Spinner animation = \"border\" / >\r\n                <\r\n                /div>\r\n        } <\r\n        /div> <\r\n        />\r\n    )\r\n}\r\n\r\nexport default Owned;"]},"metadata":{},"sourceType":"module"}