{"ast":null,"code":"import useMetaMask from './hooks/metamask';\nconst baseUrl = 'http://localhost:5000';\nexport async function registerUser(userData) {\n  return (await fetch(`${baseUrl}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(userData)\n  })).json();\n}\nexport async function loginUser(userData) {\n  return (await fetch(`${baseUrl}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(userData)\n  })).json();\n\n  if (window.ethereum === 'undefined') {\n    return 1;\n  }\n\n  if (!window.ethereum.isMetaMask) {\n    return 2;\n  }\n\n  if (window.ethereum.chainId !== \"0x3\") {\n    return 3;\n  }\n\n  new Promise(function (resolve, reject) {\n    var result = window.ethereum.enable();\n    console.log(result);\n  }).then(function (response) {\n    console.log(\"Metamask connected it seems \" + response);\n  });\n  return 0;\n}\nexport async function getUser() {\n  return await (await fetch(baseUrl + '/auth/getUser', {\n    credentials: 'include'\n  })).json();\n}\nexport async function getUserActiveSells(id) {\n  return (await fetch(`${baseUrl}/products/sells/active/${id}`, {\n    credentials: 'include'\n  })).json();\n}\nexport async function getUserArchivedSells() {\n  return (await fetch(`${baseUrl}/products/sells/archived`, {\n    credentials: 'include'\n  })).json();\n}\nexport async function getUserWishlist() {\n  return (await fetch(`${baseUrl}/products/wishlist/getWishlist`, {\n    credentials: 'include'\n  })).json();\n}\nexport async function editUserProfile(id, data) {\n  return (await fetch(`/user/edit-profile/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(data)\n  })).json();\n}\nexport async function getUserById(id) {\n  return await (await fetch(baseUrl + `/user/getUserById/${id}`, {\n    credentials: 'include'\n  })).json();\n}","map":{"version":3,"sources":["C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/src/services/userData.js"],"names":["useMetaMask","baseUrl","registerUser","userData","fetch","method","headers","credentials","body","JSON","stringify","json","loginUser","window","ethereum","isMetaMask","chainId","Promise","resolve","reject","result","enable","console","log","then","response","getUser","getUserActiveSells","id","getUserArchivedSells","getUserWishlist","editUserProfile","data","getUserById"],"mappings":"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","sourcesContent":["import useMetaMask from './hooks/metamask';\r\n\r\nconst baseUrl = 'http://localhost:5000';\r\n\r\nexport async function registerUser(userData) {\r\n    return (await fetch(`${baseUrl}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(userData)\r\n    })).json();\r\n}\r\n\r\nexport async function loginUser(userData) {\r\n    return (await fetch(`${baseUrl}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(userData)\r\n    })).json();\r\n\r\n    if (window.ethereum === 'undefined') {\r\n        return 1;\r\n    }\r\n    if (!window.ethereum.isMetaMask) {\r\n        return 2;\r\n    }\r\n    if (window.ethereum.chainId !== \"0x3\") {\r\n        return 3;\r\n    }\r\n    new Promise(function(resolve, reject) {\r\n        var result = window.ethereum.enable();\r\n        console.log(result);\r\n    }).then(function(response) { console.log(\"Metamask connected it seems \" + response); });\r\n    return 0;\r\n}\r\n\r\nexport async function getUser() {\r\n    return await (await fetch(baseUrl + '/auth/getUser', { credentials: 'include' })).json()\r\n}\r\n\r\nexport async function getUserActiveSells(id) {\r\n    return (await fetch(`${baseUrl}/products/sells/active/${id}`, { credentials: 'include' })).json();\r\n}\r\n\r\nexport async function getUserArchivedSells() {\r\n    return (await fetch(`${baseUrl}/products/sells/archived`, { credentials: 'include' })).json();\r\n}\r\n\r\nexport async function getUserWishlist() {\r\n    return (await fetch(`${baseUrl}/products/wishlist/getWishlist`, { credentials: 'include' })).json();\r\n}\r\n\r\nexport async function editUserProfile(id, data) {\r\n    return (await fetch(`/user/edit-profile/${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    })).json();\r\n}\r\n\r\nexport async function getUserById(id) {\r\n    return await (await fetch(baseUrl + `/user/getUserById/${id}`, { credentials: 'include' })).json()\r\n}"]},"metadata":{},"sourceType":"module"}