{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var baseUrl='http://localhost:5000';export function createChatRoom(_x,_x2){return _createChatRoom.apply(this,arguments);}function _createChatRoom(){_createChatRoom=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(receiver,message){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(baseUrl,\"/messages/createChatRoom\"),{method:'POST',headers:{'Content-Type':'application/json'},credentials:'include',body:JSON.stringify({message:message,receiver:receiver})});case 2:return _context.abrupt(\"return\",_context.sent.json());case 3:case\"end\":return _context.stop();}}},_callee);}));return _createChatRoom.apply(this,arguments);}export function getUserConversations(){return _getUserConversations.apply(this,arguments);}function _getUserConversations(){_getUserConversations=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(baseUrl,\"/messages/getUserConversations\"),{credentials:'include'});case 2:return _context2.abrupt(\"return\",_context2.sent.json());case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _getUserConversations.apply(this,arguments);}export function sendMessage(_x3,_x4){return _sendMessage.apply(this,arguments);}function _sendMessage(){_sendMessage=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(chatId,message){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return fetch(\"\".concat(baseUrl,\"/messages/sendMessage\"),{method:'POST',headers:{'Content-Type':'application/json'},credentials:'include',body:JSON.stringify({chatId:chatId,message:message})});case 2:return _context3.abrupt(\"return\",_context3.sent.json());case 3:case\"end\":return _context3.stop();}}},_callee3);}));return _sendMessage.apply(this,arguments);}","map":{"version":3,"sources":["C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/src/services/messagesData.js"],"names":["baseUrl","createChatRoom","receiver","message","fetch","method","headers","credentials","body","JSON","stringify","json","getUserConversations","sendMessage","chatId"],"mappings":"yRAAA,GAAMA,CAAAA,OAAO,CAAG,uBAAhB,CAEA,eAAsBC,CAAAA,cAAtB,uD,mGAAO,iBAA8BC,QAA9B,CAAwCC,OAAxC,wIACWC,CAAAA,KAAK,WAAIJ,OAAJ,6BAAuC,CACtDK,MAAM,CAAE,MAD8C,CAEtDC,OAAO,CAAE,CACL,eAAgB,kBADX,CAF6C,CAKtDC,WAAW,CAAE,SALyC,CAMtDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACP,OAAO,CAAEA,OAAV,CAAmBD,QAAQ,CAAEA,QAA7B,CAAf,CANgD,CAAvC,CADhB,sDAQCS,IARD,0D,iDAWP,eAAsBC,CAAAA,oBAAtB,uD,+GAAO,+JACWR,CAAAA,KAAK,WAAIJ,OAAJ,mCAA6C,CAAEO,WAAW,CAAE,SAAf,CAA7C,CADhB,wDAC0FI,IAD1F,4D,uDAIP,eAAsBE,CAAAA,WAAtB,qD,6FAAO,kBAA2BC,MAA3B,CAAmCX,OAAnC,6IACWC,CAAAA,KAAK,WAAIJ,OAAJ,0BAAoC,CACnDK,MAAM,CAAE,MAD2C,CAEnDC,OAAO,CAAE,CACL,eAAgB,kBADX,CAF0C,CAKnDC,WAAW,CAAE,SALsC,CAMnDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACI,MAAM,CAANA,MAAD,CAASX,OAAO,CAAPA,OAAT,CAAf,CAN6C,CAApC,CADhB,wDAQCQ,IARD,4D","sourcesContent":["const baseUrl = 'http://localhost:5000';\r\n\r\nexport async function createChatRoom(receiver, message) {\r\n    return (await fetch(`${baseUrl}/messages/createChatRoom`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({message: message, receiver: receiver})\r\n    })).json();\r\n}\r\n\r\nexport async function getUserConversations() {\r\n    return (await fetch(`${baseUrl}/messages/getUserConversations`, { credentials: 'include' })).json();\r\n}\r\n\r\nexport async function sendMessage(chatId, message) {\r\n    return (await fetch(`${baseUrl}/messages/sendMessage`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({chatId, message})\r\n    })).json();\r\n}"]},"metadata":{},"sourceType":"module"}