{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tarus\\\\Documents\\\\Marketplace-ReactJS-Project\\\\client\\\\src\\\\components\\\\Details\\\\Aside\\\\Aside.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from 'react';\nimport { Context } from '../../../ContextStore';\nimport { Button, Modal, Form, OverlayTrigger, Tooltip, Col, Spinner } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { RiMessage3Fill } from 'react-icons/ri';\nimport { GrEdit } from 'react-icons/gr';\nimport { MdArchive } from 'react-icons/md';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport { MdEmail, MdPhoneAndroid } from 'react-icons/md';\nimport { FaSellsy } from 'react-icons/fa';\nimport { archiveSell } from '../../../services/productData';\nimport { createChatRoom } from '../../../services/messagesData';\nimport { checkIfWalletIsConnected2 } from '../../../services/userData';\nimport './Aside.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Aside({\n  params,\n  history\n}) {\n  _s();\n\n  // const [address, setAddress] = useState(\"\");\n  // const [isAuth, setIsAuth] = useState(false);\n  // const [isSeller, setIsSeller] = useState(false);\n  const [userData, setUserData] = useState({\n    address: \"\",\n    isAuth: false,\n    isSeller: false\n  });\n  const [loading, setLoading] = useState(true);\n  console.log(\"params:\", params);\n  useEffect(() => {\n    console.log(\"aside se bhai1:\");\n    checkIfWalletIsConnected2().then(res => {\n      console.log(\"res: \", res);\n      setUserData({\n        address: res,\n        isAuth: res != null && res != \"\",\n        isSeller: res == params.owner\n      });\n      if (res) setLoading(false);\n    }).catch(err => console.log(err));\n    console.log(\"aside se bhai2:\");\n  }, []); // useEffect(() => {\n  //     // console.log(\"yo?\", params.owner.toLowerCase());\n  //     if (!params || !address) return;\n  //     setIsAuth(address != null && address != \"\");\n  //     setIsSeller(address == params.owner);\n  //     console.log(\"aside se bhai:\");\n  //     console.log(params);\n  //     console.log(address);\n  //     console.log(params.owner);\n  //     console.log(\"isAuth:\", address != null && address != \"\");\n  //     console.log(\"isSeller:\",address == params.owner);\n  // }, [address])\n  // const [showMsg, setShowMdg] = useState(false);\n  // const [showArchive, setShowArchive] = useState(false);\n  // const [message, setMessage] = useState(\"\");\n  // const handleClose = () => setShowMdg(false);\n  // const handleShow = () => setShowMdg(true);\n\n  const handleTodoButton = () => {}; // const handleCloseArchive = () => setShowArchive(false);\n  // const handleShowArchive = () => setShowArchive(true);\n  // const handleSubmit = (e) => {\n  //     e.preventDefault();\n  //     archiveSell(params._id)\n  //         .then(res => {\n  //             setShowArchive(false);\n  //             history.push(`/profile/${params.owner}`);\n  //         })\n  //         .catch(err => console.log(err))\n  // }\n  // const handleMsgChange = (e) => {\n  //     e.preventDefault();\n  //     setMessage(e.target.value)\n  // }\n  // const onMsgSent = (e) => {\n  //     e.preventDefault();\n  //     createChatRoom(params.owner, message)\n  //         .then((res) => {\n  //             history.push(`/messages/${res.messageId}`)\n  //         })\n  //         .catch(err => console.log(err))\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-details-seller\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"priceLabel\",\n          className: \"col-lg-12\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            id: \"product-price-heading\",\n            children: \"Product Price \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), userData.isSeller && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n              placement: \"top\",\n              overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                children: \"Edit the selling\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 70\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"edit-icon\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/categories/land/${params._id}/edit`,\n                  children: /*#__PURE__*/_jsxDEV(GrEdit, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 86\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"price-heading\",\n            children: [params.price, \" weth\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), userData.isAuth ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!userData.isSeller && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            className: \"col-lg-10\",\n            id: \"btnContact\",\n            onClick: handleTodoButton,\n            children: [/*#__PURE__*/_jsxDEV(RiMessage3Fill, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), \"Buy\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), userData.isSeller && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            className: \"col-lg-10\",\n            id: \"btnContact\",\n            onClick: handleTodoButton,\n            children: [/*#__PURE__*/_jsxDEV(RiMessage3Fill, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), \"Remove Sale\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"guest-msg\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/auth/login\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 43\n          }, this), \" now to buy the NFT\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Aside, \"nVCzA2PX3A2RcoNBgppus80BQDQ=\");\n\n_c = Aside;\nexport default Aside;\n\nvar _c;\n\n$RefreshReg$(_c, \"Aside\");","map":{"version":3,"sources":["C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/src/components/Details/Aside/Aside.js"],"names":["useState","useContext","useEffect","Context","Button","Modal","Form","OverlayTrigger","Tooltip","Col","Spinner","Link","RiMessage3Fill","GrEdit","MdArchive","BsFillPersonFill","MdEmail","MdPhoneAndroid","FaSellsy","archiveSell","createChatRoom","checkIfWalletIsConnected2","Aside","params","history","userData","setUserData","address","isAuth","isSeller","loading","setLoading","console","log","then","res","owner","catch","err","handleTodoButton","_id","price"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from 'react';\r\nimport { Context } from '../../../ContextStore';\r\nimport { Button, Modal, Form, OverlayTrigger, Tooltip, Col, Spinner} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { RiMessage3Fill } from 'react-icons/ri';\r\nimport { GrEdit } from 'react-icons/gr';\r\nimport { MdArchive } from 'react-icons/md'\r\nimport { BsFillPersonFill } from 'react-icons/bs';\r\nimport { MdEmail, MdPhoneAndroid } from 'react-icons/md'\r\nimport { FaSellsy } from 'react-icons/fa'\r\nimport { archiveSell } from '../../../services/productData';\r\nimport { createChatRoom } from '../../../services/messagesData';\r\nimport {checkIfWalletIsConnected2 } from '../../../services/userData'\r\nimport './Aside.css';\r\n\r\n\r\nfunction Aside({ params, history }) {\r\n\r\n    // const [address, setAddress] = useState(\"\");\r\n    // const [isAuth, setIsAuth] = useState(false);\r\n    // const [isSeller, setIsSeller] = useState(false);\r\n\r\n    const [userData, setUserData] = useState({\r\n        address: \"\",\r\n        isAuth: false,\r\n        isSeller: false,\r\n    });\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    console.log(\"params:\", params);\r\n    useEffect(() => {\r\n        console.log(\"aside se bhai1:\");\r\n        checkIfWalletIsConnected2()\r\n            .then(res => {\r\n                console.log(\"res: \", res);\r\n                setUserData({\r\n                    address: res,\r\n                    isAuth: res != null && res != \"\",\r\n                    isSeller: res == params.owner,\r\n                });\r\n                if (res) setLoading(false);\r\n            })\r\n            .catch(err => console.log(err));\r\n        console.log(\"aside se bhai2:\");\r\n    }, []);\r\n\r\n    // useEffect(() => {\r\n    //     // console.log(\"yo?\", params.owner.toLowerCase());\r\n    //     if (!params || !address) return;\r\n    //     setIsAuth(address != null && address != \"\");\r\n    //     setIsSeller(address == params.owner);\r\n    //     console.log(\"aside se bhai:\");\r\n    //     console.log(params);\r\n    //     console.log(address);\r\n    //     console.log(params.owner);\r\n    //     console.log(\"isAuth:\", address != null && address != \"\");\r\n    //     console.log(\"isSeller:\",address == params.owner);\r\n    // }, [address])\r\n\r\n    // const [showMsg, setShowMdg] = useState(false);\r\n    // const [showArchive, setShowArchive] = useState(false);\r\n    // const [message, setMessage] = useState(\"\");\r\n    // const handleClose = () => setShowMdg(false);\r\n    // const handleShow = () => setShowMdg(true);\r\n\r\n    const handleTodoButton = () => {};\r\n\r\n    \r\n\r\n    // const handleCloseArchive = () => setShowArchive(false);\r\n    // const handleShowArchive = () => setShowArchive(true);\r\n\r\n    // const handleSubmit = (e) => {\r\n    //     e.preventDefault();\r\n    //     archiveSell(params._id)\r\n    //         .then(res => {\r\n    //             setShowArchive(false);\r\n    //             history.push(`/profile/${params.owner}`);\r\n    //         })\r\n    //         .catch(err => console.log(err))\r\n    // }\r\n\r\n    // const handleMsgChange = (e) => {\r\n    //     e.preventDefault();\r\n    //     setMessage(e.target.value)\r\n    // }\r\n    // const onMsgSent = (e) => {\r\n    //     e.preventDefault();\r\n    //     createChatRoom(params.owner, message)\r\n    //         .then((res) => {\r\n    //             history.push(`/messages/${res.messageId}`)\r\n    //         })\r\n    //         .catch(err => console.log(err))\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n        {loading ? (<Spinner animation=\"border\" />) :\r\n        (<aside>\r\n            <div className=\"product-details-seller\">\r\n                <div id=\"priceLabel\" className=\"col-lg-12\">\r\n                    <h4 id=\"product-price-heading\">Product Price </h4>\r\n                    {userData.isSeller &&\r\n                        <>\r\n                            <OverlayTrigger placement=\"top\" overlay={<Tooltip>Edit the selling</Tooltip>}>\r\n                                <span id=\"edit-icon\">\r\n                                    <Link to={`/categories/land/${params._id}/edit`}><GrEdit /></Link>\r\n                                </span>\r\n                            </OverlayTrigger>\r\n                            {/* <OverlayTrigger placement=\"top\" overlay={<Tooltip>Archive</Tooltip>}>\r\n                                <span id=\"archive-icon\" onClick={handleShowArchive}>\r\n                                    <MdArchive />\r\n                                </span>\r\n                            </OverlayTrigger> */}\r\n\r\n                        </>\r\n                    }\r\n                    {<h1 id=\"price-heading\">{params.price} weth</h1>}\r\n                </div>\r\n                {userData.isAuth ? (<>\r\n                    {!userData.isSeller &&\r\n                        <Button variant=\"dark\" className=\"col-lg-10\" id=\"btnContact\" onClick={handleTodoButton}>\r\n                            <RiMessage3Fill />Buy\r\n                        </Button>\r\n                    }\r\n                    {userData.isSeller &&\r\n                        <Button variant=\"dark\" className=\"col-lg-10\" id=\"btnContact\" onClick={handleTodoButton}>\r\n                            <RiMessage3Fill />Remove Sale\r\n                        </Button>\r\n                    }\r\n                    {/* <Link to={`/profile/${params.owner}`}> */}\r\n                        {/* <Col lg={12}>\r\n                            <img id=\"avatar\" src={params.avatar} alt=\"user-avatar\" />\r\n                        </Col> */}\r\n                        {/* <Col lg={12}>\r\n                            <p><BsFillPersonFill /> {params.name}</p>\r\n                            <p><MdEmail /> {params.email}</p>\r\n                            <p><MdPhoneAndroid /> {params.phoneNumber}</p>\r\n                            <p><FaSellsy /> {params.createdSells} sells in total</p>\r\n                        </Col>\r\n                    </Link> */}\r\n                </>) : (\r\n                        <p id=\"guest-msg\"><Link to=\"/auth/login\">Sign In</Link> now to buy the NFT</p>\r\n                    )}\r\n            </div>\r\n            {/* <Modal show={showMsg} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Message</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Control as=\"textarea\" name=\"textarea\" onChange={handleMsgChange} rows={3} />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"dark\" onClick={onMsgSent}>Sent</Button>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal> */}\r\n\r\n            {/* <Modal show={showArchive} onHide={handleCloseArchive}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Are you sure you want to archive this item?</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <p>\r\n                        By clicking <strong>Archive</strong>, this sell will change\r\n                    it's status to <strong>Archived</strong>,\r\n                    which means that no one but you will be able see it.\r\n                    You may want to change the status to <strong>Actived</strong> if you have\r\n                    sold the item or you don't want to sell it anymore.\r\n                    </p>\r\n\r\n                    Don't worry, you can unarchive it at any time from Profile - Sells!\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleCloseArchive}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"success\" onClick={handleSubmit}>\r\n                        Archive\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal> */}\r\n        </aside>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Aside;"]},"metadata":{},"sourceType":"module"}