{"ast":null,"code":"const baseUrl = 'http://localhost:5000';\nexport async function getAll(page, category, query) {\n  if (query !== \"\" && query !== undefined) {\n    return (await fetch(`${baseUrl}/products?page=${page}&search=${query}`, {\n      credentials: 'include'\n    })).json();\n  } else if (category && category !== 'all') {\n    return (await fetch(`${baseUrl}/products/${category}?page=${page}`, {\n      credentials: 'include'\n    })).json();\n  } else {\n    return (await fetch(`${baseUrl}/products?page=${page}`, {\n      credentials: 'include'\n    })).json();\n  }\n}\nexport async function getSpecific(id) {\n  return (await fetch(`${baseUrl}/products/specific/${id}`, {\n    credentials: 'include'\n  })).json();\n}\nexport async function createProduct(product) {\n  return (await fetch(`${baseUrl}/products/create`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(product)\n  })).json();\n}\nexport async function editProduct(id, product) {\n  return (await fetch(`${baseUrl}/products/edit/${id}`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    credentials: 'include',\n    body: JSON.stringify(product)\n  })).json();\n}\nexport async function activateSell(id) {\n  return (await fetch(`/products/enable/${id}`)).json();\n}\nexport async function archiveSell(id) {\n  return (await fetch(`/products/archive/${id}`)).json();\n}\nexport async function wishProduct(id) {\n  return (await fetch(`${baseUrl}/products/wish/${id}`, {\n    credentials: 'include'\n  })).json();\n}","map":{"version":3,"sources":["C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/src/services/productData.js"],"names":["baseUrl","getAll","page","category","query","undefined","fetch","credentials","json","getSpecific","id","createProduct","product","method","headers","body","JSON","stringify","editProduct","activateSell","archiveSell","wishProduct"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAhB;AAEA,OAAO,eAAeC,MAAf,CAAsBC,IAAtB,EAA4BC,QAA5B,EAAsCC,KAAtC,EAA6C;AAChD,MAAIA,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAKC,SAA9B,EAAyC;AACrC,WAAO,CAAC,MAAMC,KAAK,CAAE,GAAEN,OAAQ,kBAAiBE,IAAK,WAAUE,KAAM,EAAlD,EAAqD;AAAEG,MAAAA,WAAW,EAAE;AAAf,KAArD,CAAZ,EAA8FC,IAA9F,EAAP;AACH,GAFD,MAEO,IAAIL,QAAQ,IAAIA,QAAQ,KAAK,KAA7B,EAAoC;AACvC,WAAO,CAAC,MAAMG,KAAK,CAAE,GAAEN,OAAQ,aAAYG,QAAS,SAAQD,IAAK,EAA9C,EAAiD;AAAEK,MAAAA,WAAW,EAAE;AAAf,KAAjD,CAAZ,EAA0FC,IAA1F,EAAP;AACH,GAFM,MAEA;AACH,WAAO,CAAC,MAAMF,KAAK,CAAE,GAAEN,OAAQ,kBAAiBE,IAAK,EAAlC,EAAqC;AAAEK,MAAAA,WAAW,EAAE;AAAf,KAArC,CAAZ,EAA8EC,IAA9E,EAAP;AACH;AACJ;AAED,OAAO,eAAeC,WAAf,CAA2BC,EAA3B,EAA+B;AAClC,SAAO,CAAC,MAAMJ,KAAK,CAAE,GAAEN,OAAQ,sBAAqBU,EAAG,EAApC,EAAuC;AAAEH,IAAAA,WAAW,EAAE;AAAf,GAAvC,CAAZ,EAAgFC,IAAhF,EAAP;AACH;AAED,OAAO,eAAeG,aAAf,CAA6BC,OAA7B,EAAsC;AACzC,SAAO,CAAC,MAAMN,KAAK,CAAE,GAAEN,OAAQ,kBAAZ,EAA+B;AAC9Ca,IAAAA,MAAM,EAAE,MADsC;AAE9CC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFqC;AAK9CP,IAAAA,WAAW,EAAE,SALiC;AAM9CQ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AANwC,GAA/B,CAAZ,EAOHJ,IAPG,EAAP;AAQH;AAED,OAAO,eAAeU,WAAf,CAA2BR,EAA3B,EAA+BE,OAA/B,EAAwC;AAC3C,SAAO,CAAC,MAAMN,KAAK,CAAE,GAAEN,OAAQ,kBAAiBU,EAAG,EAAhC,EAAmC;AAClDG,IAAAA,MAAM,EAAE,OAD0C;AAElDC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFyC;AAKlDP,IAAAA,WAAW,EAAE,SALqC;AAMlDQ,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AAN4C,GAAnC,CAAZ,EAOHJ,IAPG,EAAP;AAQH;AAGD,OAAO,eAAeW,YAAf,CAA4BT,EAA5B,EAAgC;AACnC,SAAO,CAAC,MAAMJ,KAAK,CAAE,oBAAmBI,EAAG,EAAxB,CAAZ,EAAwCF,IAAxC,EAAP;AACH;AAED,OAAO,eAAeY,WAAf,CAA2BV,EAA3B,EAA+B;AAClC,SAAO,CAAC,MAAMJ,KAAK,CAAE,qBAAoBI,EAAG,EAAzB,CAAZ,EAAyCF,IAAzC,EAAP;AACH;AAED,OAAO,eAAea,WAAf,CAA2BX,EAA3B,EAA+B;AAClC,SAAO,CAAC,MAAMJ,KAAK,CAAE,GAAEN,OAAQ,kBAAiBU,EAAG,EAAhC,EAAmC;AAAEH,IAAAA,WAAW,EAAE;AAAf,GAAnC,CAAZ,EAA4EC,IAA5E,EAAP;AACH","sourcesContent":["const baseUrl = 'http://localhost:5000';\r\n\r\nexport async function getAll(page, category, query) {\r\n    if (query !== \"\" && query !== undefined) {\r\n        return (await fetch(`${baseUrl}/products?page=${page}&search=${query}`, { credentials: 'include' })).json();\r\n    } else if (category && category !== 'all') {\r\n        return (await fetch(`${baseUrl}/products/${category}?page=${page}`, { credentials: 'include' })).json();\r\n    } else {\r\n        return (await fetch(`${baseUrl}/products?page=${page}`, { credentials: 'include' })).json();\r\n    }\r\n}\r\n\r\nexport async function getSpecific(id) {\r\n    return (await fetch(`${baseUrl}/products/specific/${id}`, { credentials: 'include' })).json();\r\n}\r\n\r\nexport async function createProduct(product) {\r\n    return (await fetch(`${baseUrl}/products/create`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(product)\r\n    })).json();\r\n}\r\n\r\nexport async function editProduct(id, product) {\r\n    return (await fetch(`${baseUrl}/products/edit/${id}`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(product)\r\n    })).json();\r\n}\r\n\r\n\r\nexport async function activateSell(id) {\r\n    return (await fetch(`/products/enable/${id}`)).json()\r\n}\r\n\r\nexport async function archiveSell(id) {\r\n    return (await fetch(`/products/archive/${id}`)).json()\r\n}\r\n\r\nexport async function wishProduct(id) {\r\n    return (await fetch(`${baseUrl}/products/wish/${id}`, { credentials: 'include' })).json();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}