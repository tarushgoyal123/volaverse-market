{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tarus\\\\Documents\\\\Marketplace-ReactJS-Project\\\\client\\\\src\\\\components\\\\Profile\\\\Sells\\\\ActiveSells.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport ProductCard from '../../ProductCard/ProductCard';\nimport { Col, Row, Spinner } from 'react-bootstrap';\nimport { getUserActiveSells } from '../../../services/userData';\nimport './Sells.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ActiveSells({\n  params,\n  history\n}) {\n  _s();\n\n  const [products, setProduct] = useState([]);\n  let [loading, setLoading] = useState(true);\n  useEffect(() => {\n    window.scrollTo(0, 0);\n\n    if (params._id) {\n      getUserActiveSells(params._id).then(res => {\n        setProduct(res.sells);\n        setLoading(false);\n      }).catch(err => console.log(err));\n    }\n  }, [params._id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"heading\",\n        children: \"Active Sells\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this), products ? /*#__PURE__*/_jsxDEV(Row, {\n        children: products.map(x => /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          lg: 4,\n          children: /*#__PURE__*/_jsxDEV(ProductCard, {\n            params: x\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 41\n          }, this)\n        }, x._id.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"nothing-to-show\",\n        children: \"Nothing to show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n\n_s(ActiveSells, \"uPokFSZ34ScbhI/zrsF53v4yzBY=\");\n\n_c = ActiveSells;\nexport default ActiveSells;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveSells\");","map":{"version":3,"sources":["C:/Users/tarus/Documents/Marketplace-ReactJS-Project/client/src/components/Profile/Sells/ActiveSells.js"],"names":["useEffect","useState","ProductCard","Col","Row","Spinner","getUserActiveSells","ActiveSells","params","history","products","setProduct","loading","setLoading","window","scrollTo","_id","then","res","sells","catch","err","console","log","map","x","toString"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,OAAnB,QAAkC,iBAAlC;AACA,SAASC,kBAAT,QAAmC,4BAAnC;AAEA,OAAO,aAAP;;;;AACA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAArB,EAA0C;AAAA;;AACtC,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AACA,MAAI,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;;AACA,QAAIP,MAAM,CAACQ,GAAX,EAAgB;AACZV,MAAAA,kBAAkB,CAACE,MAAM,CAACQ,GAAR,CAAlB,CACKC,IADL,CACUC,GAAG,IAAI;AACTP,QAAAA,UAAU,CAACO,GAAG,CAACC,KAAL,CAAV;AACAN,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAJL,EAKKO,KALL,CAKWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALlB;AAMH;AACJ,GAVQ,EAUN,CAACb,MAAM,CAACQ,GAAR,CAVM,CAAT;AAYA,sBACI;AAAA,cACK,CAACJ,OAAD,gBACI;AAAA,8BACG;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,EAEIF,QAAQ,gBACL,QAAC,GAAD;AAAA,kBACKA,QAAQ,CACJc,GADJ,CACQC,CAAC,iBACF,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAoB,UAAA,EAAE,EAAE,CAAxB;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,MAAM,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AADJ,WAAgCA,CAAC,CAACT,GAAF,CAAMU,QAAN,EAAhC;AAAA;AAAA;AAAA;AAAA,gBAFP;AADL;AAAA;AAAA;AAAA;AAAA,cADK,gBAWD;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbX;AAAA,oBADJ,gBAkBG,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAnBR,mBADJ;AAuBH;;GAtCQnB,W;;KAAAA,W;AAwCT,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport ProductCard from '../../ProductCard/ProductCard';\r\nimport { Col, Row, Spinner } from 'react-bootstrap';\r\nimport { getUserActiveSells } from '../../../services/userData';\r\n\r\nimport './Sells.css';\r\nfunction ActiveSells({ params, history }) {\r\n    const [products, setProduct] = useState([])\r\n    let [loading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        if (params._id) {\r\n            getUserActiveSells(params._id)\r\n                .then(res => {\r\n                    setProduct(res.sells);\r\n                    setLoading(false)\r\n                })\r\n                .catch(err => console.log(err))\r\n        }\r\n    }, [params._id])\r\n\r\n    return (\r\n        <>\r\n            {!loading ?\r\n                (<>\r\n                    <h1 className=\"heading\">Active Sells</h1>\r\n                    {products ? (\r\n                        <Row>\r\n                            {products\r\n                                .map(x =>\r\n                                    <Col xs={12} md={6} lg={4} key={x._id.toString()}>\r\n                                        <ProductCard params={x} />\r\n                                    </Col>\r\n                                )\r\n                            }\r\n                        </Row>\r\n                    ) : (\r\n                            <p className=\"nothing-to-show\">Nothing to show</p>\r\n                        )\r\n                    }\r\n                </>) :\r\n                <Spinner animation=\"border\" />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ActiveSells;"]},"metadata":{},"sourceType":"module"}