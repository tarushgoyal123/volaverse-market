{"ast":null,"code":"import Web3 from 'web3';\nexport async function connect() {\n  if (!window.ethereum) {\n    alert(\"Get MetaMask!\");\n    return;\n  }\n\n  const accounts = await window.ethereum.request({\n    method: \"eth_requestAccounts\"\n  });\n}\nexport function getAddress() {\n  var account = '';\n\n  if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\n    account = window.ethereum.selectedAddress;\n\n    if (typeof account === 'undefined' || account == null) {\n      account = '';\n    }\n  } // var buffer = _malloc(lengthBytesUTF8(account) + 1);\n  // stringToUTF8(account, buffer, account.length + 1);\n  // return buffer;\n\n\n  return account;\n}\nexport async function checkIfWalletIsConnected(onConnected) {\n  if (window.ethereum) {\n    const accounts = await window.ethereum.request({\n      method: \"eth_accounts\"\n    });\n\n    if (accounts.length > 0) {\n      const account = accounts[0];\n      onConnected(account.toLowerCase());\n      return;\n    }\n  }\n}\nexport async function checkIfWalletIsConnected2() {\n  if (window.ethereum) {\n    const accounts = await window.ethereum.request({\n      method: \"eth_accounts\"\n    });\n\n    if (accounts.length > 0) {\n      const account = accounts[0];\n      return account.toLowerCase();\n    }\n  }\n\n  return \"\";\n}","map":{"version":3,"sources":["C:/Users/tarus/Documents/marketplace_check/volaverse-market/src/services/userData.js"],"names":["Web3","connect","window","ethereum","alert","accounts","request","method","getAddress","account","isMetaMask","selectedAddress","checkIfWalletIsConnected","onConnected","length","toLowerCase","checkIfWalletIsConnected2"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,OAAO,eAAeC,OAAf,GAAyB;AAC5B,MAAI,CAACC,MAAM,CAACC,QAAZ,EAAsB;AAClBC,IAAAA,KAAK,CAAC,eAAD,CAAL;AACA;AACH;;AAED,QAAMC,QAAQ,GAAG,MAAMH,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAC3CC,IAAAA,MAAM,EAAE;AADmC,GAAxB,CAAvB;AAGH;AAED,OAAO,SAASC,UAAT,GAAsB;AACzB,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAI,OAAOP,MAAM,CAACC,QAAd,KAA2B,WAA3B,IAA0CD,MAAM,CAACC,QAAP,CAAgBO,UAA9D,EAA0E;AACtED,IAAAA,OAAO,GAAGP,MAAM,CAACC,QAAP,CAAgBQ,eAA1B;;AACA,QAAI,OAAOF,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,IAAI,IAAjD,EAAuD;AACnDA,MAAAA,OAAO,GAAG,EAAV;AACH;AACJ,GAPwB,CAQzB;AACA;AACA;;;AACA,SAAOA,OAAP;AACH;AAED,OAAO,eAAeG,wBAAf,CAAwCC,WAAxC,EAAqD;AACxD,MAAIX,MAAM,CAACC,QAAX,EAAqB;AACjB,UAAME,QAAQ,GAAG,MAAMH,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAC3CC,MAAAA,MAAM,EAAE;AADmC,KAAxB,CAAvB;;AAIA,QAAIF,QAAQ,CAACS,MAAT,GAAkB,CAAtB,EAAyB;AACrB,YAAML,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACAQ,MAAAA,WAAW,CAACJ,OAAO,CAACM,WAAR,EAAD,CAAX;AACA;AACH;AACJ;AACJ;AAED,OAAO,eAAeC,yBAAf,GAA2C;AAC9C,MAAId,MAAM,CAACC,QAAX,EAAqB;AACjB,UAAME,QAAQ,GAAG,MAAMH,MAAM,CAACC,QAAP,CAAgBG,OAAhB,CAAwB;AAC3CC,MAAAA,MAAM,EAAE;AADmC,KAAxB,CAAvB;;AAIA,QAAIF,QAAQ,CAACS,MAAT,GAAkB,CAAtB,EAAyB;AACrB,YAAML,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;AACA,aAAOI,OAAO,CAACM,WAAR,EAAP;AACH;AACJ;;AACD,SAAO,EAAP;AACH","sourcesContent":["import Web3 from 'web3';\r\n\r\nexport async function connect() {\r\n    if (!window.ethereum) {\r\n        alert(\"Get MetaMask!\");\r\n        return;\r\n    }\r\n\r\n    const accounts = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n    });\r\n}\r\n\r\nexport function getAddress() {\r\n    var account = '';\r\n    if (typeof window.ethereum !== 'undefined' && window.ethereum.isMetaMask) {\r\n        account = window.ethereum.selectedAddress;\r\n        if (typeof account === 'undefined' || account == null) {\r\n            account = '';\r\n        }\r\n    }\r\n    // var buffer = _malloc(lengthBytesUTF8(account) + 1);\r\n    // stringToUTF8(account, buffer, account.length + 1);\r\n    // return buffer;\r\n    return account;\r\n}\r\n\r\nexport async function checkIfWalletIsConnected(onConnected) {\r\n    if (window.ethereum) {\r\n        const accounts = await window.ethereum.request({\r\n            method: \"eth_accounts\",\r\n        });\r\n\r\n        if (accounts.length > 0) {\r\n            const account = accounts[0];\r\n            onConnected(account.toLowerCase());\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nexport async function checkIfWalletIsConnected2() {\r\n    if (window.ethereum) {\r\n        const accounts = await window.ethereum.request({\r\n            method: \"eth_accounts\",\r\n        });\r\n\r\n        if (accounts.length > 0) {\r\n            const account = accounts[0];\r\n            return account.toLowerCase();\r\n        }\r\n    }\r\n    return \"\";\r\n}"]},"metadata":{},"sourceType":"module"}